<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>關於discord.js升級至13版本</title>
    <link href="/2021/09/27/aboutDiscordJs13/"/>
    <url>/2021/09/27/aboutDiscordJs13/</url>
    
    <content type="html"><![CDATA[<p>discord.js 是基於 node.js ，提供開發人員架設 discord bot 的一套 library</p><p>在去年的這個月，我寫了一篇關於<a href="https://nalocal.github.io/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/">使用discord.js架設bot的教學文章</a></p><p>而在今年的8月13號， discord.js 從12版升至13版</p><p>此改動影響了不少功能，聲明了以 message 事件為首的許多功能即將遭到廢棄(目前的13版仍然可用)，且使用前必須先行宣告 partials 與 intents</p><p>至此，使用最新版本的開發者，理所當然的無法在網路上找到較為全面的教學，因為13版在一開始初始化時的寫法就與13版大相逕庭</p><hr><p>針對於現況，繼續使用12版 library ，又或是試著自己摸索13版的寫法都不失為一種辦法</p><p>對此我也寫了一個模板，提供最基礎的套用</p><p>此專案最初的起因，出自於不斷重構 bot 的過程</p><p>考慮到 library 版本汰換的不方便，想將邏輯與函式分隔，中間用自己的方法重新宣告</p><p>如此，往後 library 的更新，我們可以最大限度的僅更新自身提供的方法即可，而不修改邏輯</p><p>截止於本文為止，此庫提供12.5.3與13.1.0的模板，可以直接輸入 bot key 套用</p><p>由於此模板偏向基礎的重構，目前尚未添加額外的功能</p><p>因此，此模板適合給</p><ul><li>原本就對 discord.js 有一定了解的人</li><li>針對重構的方法沒有頭緒，同時又希望可以直接解決版本汰換問題的使用者</li></ul><p>較不適合於</p><ul><li>原本對 discord.js 較為不熟悉的人</li><li>希望啟動後可以直接實現多種功能的人</li></ul><p>不過，關於功能的部分，目前也有計畫開發，預計未來會以插件的形式，另外放在其他 project 中</p><p><a href="https://github.com/NALocal/BaseDiscordBot">Git</a></p>]]></content>
    
    
    <categories>
      
      <category>BaseDiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你好，微笑之家</title>
    <link href="/2021/09/16/hello-smile/"/>
    <url>/2021/09/16/hello-smile/</url>
    
    <content type="html"><![CDATA[<h2 id="20210916"><a href="#20210916" class="headerlink" title="20210916"></a><em>20210916</em></h2><p>這是這個blog創建的第一天</p><p>你好，我是微笑，也叫做連猗，GitHub的名字是NALocal</p><p>基於方便，叫我微笑就好了。</p><hr><p>身為台灣廉價碼農的一員，工作上會需要爬文，參考大神的文章</p><p>時常看到其他碼農會寫自己的blog，不管是熱門的，或是門可羅雀的</p><p>也因此，創建blog的想法從在學期間就在思考著</p><p>在此blog前，也有其他 微笑之家 建起，之後因為各種原因又廢棄掉</p><p>最近因為discord.js的更新，希望有一個可以紀錄side project的地方，此站便應運而生</p><h2 id="踏入此處的有緣人呀，希望你能在此處得到你想要的事物"><a href="#踏入此處的有緣人呀，希望你能在此處得到你想要的事物" class="headerlink" title="踏入此處的有緣人呀，希望你能在此處得到你想要的事物"></a><em><strong>踏入此處的有緣人呀，希望你能在此處得到你想要的事物</strong></em></h2>]]></content>
    
    
    <categories>
      
      <category>日記</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日記</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>沉沉入睡的回憶小姐，匆匆揚帆的時間先生</title>
    <link href="/2020/09/30/12thDayEnd/"/>
    <url>/2020/09/30/12thDayEnd/</url>
    
    <content type="html"><![CDATA[<p>最初看到鐵人賽是大學二年級的時候，距離現在也就兩年，其實還挺短的</p><p>因為早早為專題做準備…需要查資料？造訪了這個地方</p><p>當時想都沒想過自己會寫鐵人賽(笑</p><hr><p>都說大學的人生是最多采多姿的</p><p>中間遇到了許多事情</p><p>時常為了專題留校</p><p>遇到可以一起努力的人</p><p>偶而一起吃午餐</p><p>每天都感到充實</p><p>雖然不全是快樂的事情</p><p>有許多寶貴的回憶呀</p><p>想必有更多有趣的事情沒有去挖掘</p><p>有更多的日子可以去揮霍</p><p>不過也畢業了</p><p>也有許多事是已經錯過的</p><p>不會有機會再去嘗試了</p><hr><p>最初參加鐵人賽的契機，表面上是想分享機器人的寫法，想增加自己履歷上的談資</p><p>現在想來，只是希望可以嘗試更多事情吧</p><p>想著也許這樣子做，我也會有甚麼改變</p><p>雖然到後來，鐵人賽真的讓我感覺蠻辛苦的</p><p>時常覺得，反正也不會有人來看我的文章</p><p>並不是說不努力，我花了很多時間來想要教甚麼才好</p><p>但就像自暴自棄一般的寫起流水帳了</p><p>十分抱歉</p><hr><p>那麼，時間也差不多到了</p><p>有許多事情都還沒做</p><p>有得必有失，想必之後也會繼續過著得一失一的日子吧</p><p>儘管如此，我也會努力的</p><p>因為想變得比現在更好。</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
      <category>日記</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>12th鐵人賽</tag>
      
      <tag>日記</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day30 - tag控管機制(4)</title>
    <link href="/2020/09/30/12thDay30/"/>
    <url>/2020/09/30/12thDay30/</url>
    
    <content type="html"><![CDATA[<p>今天把tag的最後一件事做完</p><p>將使用者從指定權限組移除<br>將指定權限組移除</p><p>在tag入口新增Delete方法</p><p><img src="https://i.imgur.com/7Y2m2Rl.png" alt="30-1"></p><p>創建實例</p><p><img src="https://i.imgur.com/78vy8E8.png" alt="30-2"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//從權限組中刪除使用者 OR 刪除權限組</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DeleteTag</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (DoUserID === <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>            tempIsAdmin = CheckID(msg, <span class="hljs-literal">null</span>, msg.author.id, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">msg, cmd, haveUserData</span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (haveUserData.IsAdmin) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;);<br>            <span class="hljs-keyword">if</span> (tempIsAdmin) &#123;<br>                nowDoFunction = DeleteTagNow;<br>                DoUserID = msg.author.id;<br>                DoData = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>;<br>                msg.channel.send(<span class="hljs-string">&#x27;請問要編輯使用者權限還是權限組?\n1 使用者權限 / 2 權限組&#x27;</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                msg.channel.send(<span class="hljs-string">&#x27;此指令只有管理員可執行&#x27;</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            msg.channel.send(<span class="hljs-string">&#x27;有其他人正在使用續行中，請稍等&#x27;</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;DeleteTagError&#x27;</span>, err);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>創建續行實例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//從權限組中刪除使用者 OR 刪除權限組(續行)</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DeleteTagNow</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">switch</span> (DoingCount) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">switch</span> (msg.content) &#123;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;1&#x27;</span>:<br>                        msg.channel.send(<span class="hljs-string">&#x27;請輸入要編輯的使用者ID&#x27;</span>);<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;2&#x27;</span>:<br>                        DoingCount = <span class="hljs-number">10</span>;<br>                        msg.channel.send(<span class="hljs-string">&#x27;請輸入要編輯的權限組&#x27;</span>);<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">default</span>:<br>                        DoingCount--;<br>                        msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入1/2來選擇&#x27;</span>);<br>                        <span class="hljs-keyword">break</span>;<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                <span class="hljs-keyword">if</span> (msg.content == <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;指令關閉&#x27;</span>);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">if</span> (CheckID(msg, <span class="hljs-literal">null</span>, msg.content, <span class="hljs-function">(<span class="hljs-params">msg, cmd, haveUserData</span>) =&gt;</span> &#123; <span class="hljs-keyword">return</span> haveUserData &#125;)) &#123;<br>                        DoData.push(msg.content); <span class="hljs-comment">//userID</span><br>                        DoData.push(msg.author.id); <span class="hljs-comment">//userName</span><br>                        msg.channel.send(<span class="hljs-string">&#x27;請輸入要刪除的群組權限&#x27;</span>);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        DoingCount--;<br>                        msg.channel.send(<span class="hljs-string">&#x27;此用戶不存在資料，請確認，如果要關閉指令請輸入 N&#x27;</span>);<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">// Power</span><br>                DoData.push(<span class="hljs-literal">false</span>); <span class="hljs-comment">// IsAdmin</span><br>                msg.channel.send(<span class="hljs-string">`申請資料如下:\n申請人 &lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;\n使用者 &lt;@<span class="hljs-subst">$&#123;DoData[<span class="hljs-number">0</span>]&#125;</span>&gt;\n刪除權限組 <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">2</span>]&#125;</span>\n正確 Y / 錯誤 N`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>                <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;Y&#x27;</span>) &#123;<br>                    msg.channel.send(<span class="hljs-string">&#x27;已確認，輸入資料中...&#x27;</span>);<br>                    <span class="hljs-comment">//與舊資料比對，已有此人資料變進行更新</span><br>                    CheckID(msg, <span class="hljs-literal">null</span>, DoData[<span class="hljs-number">0</span>], DeleteOldUserPower);<br>                    GetGas.postUserPower(DoData, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                        <span class="hljs-keyword">if</span> (dataED) &#123;<br>                            <span class="hljs-comment">//bot內變數不會更新，手動更新</span><br>                            UserPowerData.unshift(&#123;<br>                                <span class="hljs-string">&#x27;userID&#x27;</span>: DoData[<span class="hljs-number">0</span>],<br>                                <span class="hljs-string">&#x27;userName&#x27;</span>: DoData[<span class="hljs-number">1</span>],<br>                                <span class="hljs-string">&#x27;Joins&#x27;</span>: DoData[<span class="hljs-number">2</span>],<br>                                <span class="hljs-string">&#x27;IsAdmin&#x27;</span>: DoData[<span class="hljs-number">3</span>]<br>                            &#125;);<br>                            msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            msg.channel.send(<span class="hljs-string">&#x27;資料輸入失敗，請重新嘗試&#x27;</span>);<br>                        &#125;<br>                        CloseAllDoingFunction();<br>                    &#125;);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;已取消行為，請重新下達指令&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    DoingCount--;<br>                    msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入Y/N來選擇&#x27;</span>);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">11</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//身分組ID</span><br>                DoData.push(<span class="hljs-string">&#x27;2&#x27;</span>); <span class="hljs-comment">//type 2</span><br>                DoData.push(<span class="hljs-string">&#x27;&#x27;</span>);<br>                msg.channel.send(<span class="hljs-string">`申請資料如下:\n申請人 &lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;\n刪除權限組 <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">0</span>]&#125;</span>\n正確 Y / 錯誤 N`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">12</span>:<br>                <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;Y&#x27;</span>) &#123;<br>                    msg.channel.send(<span class="hljs-string">&#x27;已確認，輸入資料中...&#x27;</span>);<br>                    <span class="hljs-comment">//與舊資料比對，沒有此身分組資料清除</span><br>                    DeleteOldPartyPower();<br>                    <span class="hljs-keyword">if</span> (DoData[<span class="hljs-number">0</span>] != <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>                        GetGas.postPartyPower(DoData, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                            <span class="hljs-keyword">if</span> (dataED) &#123;<br>                                <span class="hljs-comment">//bot內變數不會更新，手動更新</span><br>                                PartyPowerData.unshift(&#123;<br>                                    <span class="hljs-string">&#x27;ID&#x27;</span>: DoData[<span class="hljs-number">0</span>],<br>                                    <span class="hljs-string">&#x27;type&#x27;</span>: DoData[<span class="hljs-number">1</span>],<br>                                    <span class="hljs-string">&#x27;Power&#x27;</span>: DoData[<span class="hljs-number">2</span>]<br>                                &#125;);<br>                                msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                            &#125; <span class="hljs-keyword">else</span> &#123;<br>                                msg.channel.send(<span class="hljs-string">&#x27;資料輸入失敗，請重新嘗試&#x27;</span>);<br>                            &#125;<br>                            CloseAllDoingFunction();<br>                        &#125;);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                        CloseAllDoingFunction();<br>                    &#125;<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;已取消行為，請重新下達指令&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    DoingCount--;<br>                    msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入Y/N來選擇&#x27;</span>);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (DoUserID !== <span class="hljs-string">&#x27;&#x27;</span>) DoingCount++;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        CloseAllDoingFunction();<br>        client.channels.fetch(msg.channel.id).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;發生意外錯誤，中斷指令行為，請重新下達指令!&#x27;</span>))<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;DeleteTagNowError&#x27;</span>, err);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>創建刪除類方法</p><p><img src="https://i.imgur.com/QZUmmzj.png" alt="30-3"></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">//用戶舊資料更新</span><br><span class="hljs-keyword">function</span> <span class="hljs-constructor">DeleteOldUserPower(<span class="hljs-params">msg</span>, <span class="hljs-params">cmd</span>, <span class="hljs-params">haveUserData</span>)</span> &#123;<br>    <span class="hljs-comment">//二次確認</span><br>    <span class="hljs-keyword">if</span> (haveUserData) &#123;<br>        <span class="hljs-keyword">if</span> (DoData<span class="hljs-literal">[<span class="hljs-number">0</span>]</span><span class="hljs-operator"> == </span>haveUserData.userID) &#123;<br>            <span class="hljs-keyword">let</span> str = haveUserData.Joins;<br>            DoData<span class="hljs-literal">[<span class="hljs-number">2</span>]</span> = str.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>.replace(DoData<span class="hljs-literal">[<span class="hljs-number">2</span>]</span>, &#x27;&#x27;);<br>            DoData<span class="hljs-literal">[<span class="hljs-number">3</span>]</span> = haveUserData.IsAdmin;<br>            return <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> return <span class="hljs-literal">false</span>;<br>    &#125; <span class="hljs-keyword">else</span> return <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/6x3lpht.png" alt="30-4"></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-comment">//權限組舊資料更新</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DeleteOldPartyPower</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (PartyPowerData) &#123;<br>        const tempPartyData = PartyPowerData.find(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">return</span> element.ID == DoData[<span class="hljs-number">0</span>];<br>        &#125;)<br><br>        <span class="hljs-keyword">if</span> (tempPartyData == <span class="hljs-literal">undefined</span>) &#123;<br>            DoData[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br>            DoData[<span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br>            DoData[<span class="hljs-number">2</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>運行看看</p><p><img src="https://i.imgur.com/QrQC5iq.png" alt="30-5"></p><p><img src="https://i.imgur.com/vbEQ8EO.png" alt="30-6"></p><p><img src="https://i.imgur.com/q9MDunU.png" alt="30-7"></p><p><img src="https://i.imgur.com/RUpxxCl.png" alt="30-8"></p><p>成功</p><p>到此，番外的部分也說完了</p><p>與基本的內容不同，多說了post的API，以及程式碼的部份相對複雜<br>且比起前面的篇幅，後續的文章大多都是直接貼了程式碼的順序，很少講解</p><p>想必讀起來十分艱澀吧?能讀到這裡的你是十分了不起的，恭喜你看完了這篇文章</p><p>儘管如此，這支程式仍然是不成熟的，筆者對每個功能盡量都只是點到為止，希望能把大部份的應用都帶到，後面便是要靠各位讀者<br>根據自己遇到的需求，來改善加強他吧，相信只要努力堅持，完成後的機器人一定會帶給各位程式能力上的提升的</p><p>那麼，用Node.js製作後台零負擔的DiscordBot到此結束<br>祝各位中秋佳節愉快</p><p>底下附上完整的bot.js，供參考</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//#region 全域變數</span><br><span class="hljs-keyword">const</span> Discord = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;discord.js&#x27;</span>);<br><span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> Discord.Client();<br><span class="hljs-keyword">const</span> ytdl = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;ytdl-core&#x27;</span>);<br><span class="hljs-keyword">const</span> ytpl = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;ytpl&#x27;</span>);<br><span class="hljs-keyword">const</span> auth = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./JSONHome/auth.json&#x27;</span>);<br><span class="hljs-keyword">const</span> prefix = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./JSONHome/prefix.json&#x27;</span>);<br><span class="hljs-keyword">const</span> GetGas = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./Script/GetGas.js&#x27;</span>);<br><span class="hljs-keyword">const</span> shup = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./JSONHome/shup.json&#x27;</span>);<br><br><span class="hljs-comment">//存放BaseExcelAPI資料</span><br><span class="hljs-keyword">let</span> BaseExcelData = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">let</span> UserPowerData = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">let</span> PartyPowerData = <span class="hljs-literal">false</span>;<br><br><span class="hljs-comment">//持續執行方法</span><br><span class="hljs-keyword">let</span> nowDoFunction = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">let</span> DoingCount = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> DoUserID = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">let</span> DoData = <span class="hljs-literal">undefined</span>;<br><br><span class="hljs-comment">//#endregion</span><br><br><span class="hljs-comment">//#region 登入</span><br>client.login(auth.key);<br><br>client.on(<span class="hljs-string">&#x27;ready&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    GetGas.getBaseExcel(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (dataED) &#123;<br>            BaseExcelData = dataED <span class="hljs-comment">//有資料</span><br>        &#125;<br>        GetGas.getUserPower(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>            <span class="hljs-keyword">if</span> (dataED) &#123;<br>                UserPowerData = dataED;<br>            &#125;<br>            GetGas.getPartyPower(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (dataED) &#123;<br>                    PartyPowerData = dataED;<br>                &#125;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Logged in as <span class="hljs-subst">$&#123;client.user.tag&#125;</span>!`</span>);<br>            &#125;);<br>        &#125;)<br>    &#125;)<br>&#125;);<br><br><span class="hljs-comment">//#endregion</span><br><br><span class="hljs-comment">//#region message事件入口</span><br>client.on(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function"><span class="hljs-params">msg</span> =&gt;</span> &#123;<br>    <span class="hljs-comment">//前置判斷</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (!msg.guild || !msg.member) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//訊息內不存在guild元素 = 非群組消息(私聊)</span><br>        <span class="hljs-keyword">if</span> (!msg.member.user) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//幫bot值多拉一層，判斷上層物件是否存在</span><br>        <span class="hljs-keyword">if</span> (msg.member.user.bot) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//訊息內bot值為正 = 此消息為bot發送</span><br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//續行方法</span><br>    <span class="hljs-keyword">if</span> (nowDoFunction &amp;&amp; msg.author.id === DoUserID) &#123;<br>        nowDoFunction(msg);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//字串分析</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">let</span> tempPrefix = <span class="hljs-string">&#x27;-1&#x27;</span>;<br>        <span class="hljs-keyword">const</span> prefixED = <span class="hljs-built_in">Object</span>.keys(prefix); <span class="hljs-comment">//前綴符號定義</span><br>        prefixED.forEach(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (msg.content.substring(<span class="hljs-number">0</span>, prefix[element].Value.length) === prefix[element].Value) &#123;<br>                tempPrefix = element;<br>            &#125;<br>        &#125;);<br><br>        <span class="hljs-comment">//禁言系統判斷</span><br>        <span class="hljs-keyword">if</span> (!IsShut(msg, tempPrefix)) <span class="hljs-keyword">return</span>;<br><br>        <span class="hljs-comment">//實作</span><br>        <span class="hljs-keyword">switch</span> (tempPrefix) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;0&#x27;</span>: <span class="hljs-comment">//文字回應功能</span><br>                BasicFunction(msg, tempPrefix);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;1&#x27;</span>: <span class="hljs-comment">//音樂指令 </span><br>                MusicFunction(msg);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;2&#x27;</span>: <span class="hljs-comment">//機器人tag指令</span><br>                TagFunction(msg, tempPrefix);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                BaseExcelFunction(msg);<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;OnMessageError&#x27;</span>, err);<br>    &#125;<br>&#125;);<br><br><span class="hljs-comment">//#endregion</span><br><br><span class="hljs-comment">//#region 基本指令系統</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">BasicFunction</span>(<span class="hljs-params">msg, tempPrefix</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> cmd = msg.content.substring(prefix[tempPrefix].Value.length).split(<span class="hljs-string">&#x27; &#x27;</span>); <span class="hljs-comment">//以空白分割前綴以後的字串</span><br>    <span class="hljs-keyword">switch</span> (cmd[<span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ping&#x27;</span>:<br>            msg.channel.send(<span class="hljs-string">&#x27;pong&#x27;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;老婆&#x27;</span>:<br>            msg.reply(<span class="hljs-string">&#x27;你沒有老婆!!&#x27;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;myAvatar&#x27;</span>:<br>            <span class="hljs-keyword">const</span> avatar = GetMyAvatar(msg);<br>            <span class="hljs-keyword">if</span> (avatar.files) msg.channel.send(<span class="hljs-string">`<span class="hljs-subst">$&#123;msg.author&#125;</span>`</span>, avatar).catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123; <span class="hljs-built_in">console</span>.log(err) &#125;);<br>            <span class="hljs-keyword">break</span>;<br>            <span class="hljs-comment">// case &#x27;test&#x27;:</span><br>            <span class="hljs-comment">//     const testStr2 = msg.content.split(&#x27; &#x27;);</span><br>            <span class="hljs-comment">//     console.log(client.users.fetch(testStr2[1]).then(element =&gt; console.log(element.displayAvatarURL())));</span><br>            <span class="hljs-comment">//     break;</span><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//#endregion</span><br><br><span class="hljs-comment">//#region 音樂系統</span><br><span class="hljs-comment">//歌曲控制器</span><br><span class="hljs-keyword">let</span> dispatcher = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>();<br><span class="hljs-comment">//歌曲清單</span><br><span class="hljs-keyword">let</span> musicList = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>();<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">MusicFunction</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-comment">//將訊息內的前綴字截斷，後面的字是我們要的</span><br>    <span class="hljs-keyword">const</span> content = msg.content.substring(prefix[<span class="hljs-number">1</span>].Value.length);<br>    <span class="hljs-comment">//指定我們的間隔符號</span><br>    <span class="hljs-keyword">const</span> splitText = <span class="hljs-string">&#x27; &#x27;</span>;<br>    <span class="hljs-comment">//用間隔符號隔開訊息 contents[0] = 指令,contents[1] = 參數</span><br>    <span class="hljs-keyword">const</span> contents = content.split(splitText);<br>    <span class="hljs-comment">//因為會持續使用到，將群組ID獨立成參數</span><br>    <span class="hljs-keyword">const</span> guildID = msg.guild.id;<br><br>    <span class="hljs-keyword">switch</span> (contents[<span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;play&#x27;</span>:<br>            <span class="hljs-comment">//點歌&amp;播放歌曲功能</span><br>            playMusic(guildID, msg, contents);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;replay&#x27;</span>:<br>            <span class="hljs-comment">//重播當前歌曲</span><br>            replayMusic(guildID);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;np&#x27;</span>:<br>            <span class="hljs-comment">//當前歌曲資訊</span><br>            nowPlayMusic(guildID, msg.channel.id);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;queue&#x27;</span>:<br>            <span class="hljs-comment">//歌曲清單</span><br>            queueShow(guildID, msg.channel.id);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;skip&#x27;</span>:<br>            <span class="hljs-comment">//中斷歌曲</span><br>            skipMusic(guildID);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;disconnect&#x27;</span>:<br>            <span class="hljs-comment">//退出語音頻道並且清空歌曲清單</span><br>            disconnectMusic(guildID, msg.channel.id);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;playList&#x27;</span>:<br>            <span class="hljs-comment">//載入歌單</span><br>            playListMusic(guildID, msg);<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?play</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">playMusic</span>(<span class="hljs-params">guildID, msg, contents</span>) </span>&#123;<br>    <span class="hljs-comment">//定義我們的第一個參數必需是網址</span><br>    <span class="hljs-keyword">const</span> urlED = contents[<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//第一個參數不是連結就要篩選掉</span><br>        <span class="hljs-keyword">if</span> (urlED.substring(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>) !== <span class="hljs-string">&#x27;http&#x27;</span>) <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.1&#x27;</span>);<br><br>        <span class="hljs-comment">//透過library判斷連結是否可運行</span><br>        <span class="hljs-keyword">const</span> validate = <span class="hljs-keyword">await</span> ytdl.validateURL(urlED);<br>        <span class="hljs-keyword">if</span> (!validate) <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.2&#x27;</span>);<br><br>        <span class="hljs-comment">//獲取歌曲資訊</span><br>        <span class="hljs-keyword">const</span> info = <span class="hljs-keyword">await</span> ytdl.getInfo(urlED);<br>        <span class="hljs-comment">//判斷資訊是否正常</span><br>        <span class="hljs-keyword">if</span> (info.videoDetails) &#123;<br>            <span class="hljs-comment">//指令下達者是否在語音頻道</span><br>            <span class="hljs-keyword">if</span> (msg.member.voice.channel) &#123;<br>                <span class="hljs-comment">//判斷bot是否已經連到語音頻道 是:將歌曲加入歌單 不是:進入語音頻道並且播放歌曲</span><br>                <span class="hljs-keyword">if</span> (!client.voice.connections.get(msg.guild.id)) &#123;<br>                    <span class="hljs-comment">//因為是第一次加入，宣告新的歌曲列表</span><br>                    musicList.set(guildID, <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>());<br><br>                    <span class="hljs-comment">//將歌曲加入歌單</span><br>                    musicList.get(guildID).push(urlED);<br>                    <span class="hljs-comment">//進入語音頻道</span><br>                    msg.member.voice.channel.join()<br>                        .then(<span class="hljs-function"><span class="hljs-params">connection</span> =&gt;</span> &#123;<br>                            msg.reply(<span class="hljs-string">&#x27;來了~&#x27;</span>);<br>                            <span class="hljs-comment">//const guildID = msg.guild.id;</span><br>                            <span class="hljs-keyword">const</span> channelID = msg.channel.id;<br>                            <span class="hljs-comment">//播放歌曲</span><br>                            playMusic2(connection, guildID, channelID);<br>                        &#125;)<br>                        .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>                            msg.reply(<span class="hljs-string">&#x27;bot進入語音頻道時發生錯誤，請再試一次&#x27;</span>);<br>                            <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playMusicError2&#x27;</span>);<br>                        &#125;)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-comment">//將歌曲加入歌單</span><br>                    musicList.get(guildID).push(urlED);<br>                    msg.reply(<span class="hljs-string">&#x27;已將歌曲加入歌單!&#x27;</span>);<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;請先進入頻道:3...&#x27;</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.3&#x27;</span>);<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?play 遞迴函式</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">playMusic2</span>(<span class="hljs-params">connection, guildID, channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//播放前歌曲清單不能沒有網址</span><br>        <span class="hljs-keyword">if</span> (musicList.get(guildID).length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">//設定音樂相關參數</span><br>            <span class="hljs-keyword">const</span> streamOptions = &#123;<br>                <span class="hljs-attr">seek</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-attr">volume</span>: <span class="hljs-number">0.5</span>,<br>                <span class="hljs-attr">Bitrate</span>: <span class="hljs-number">192000</span>,<br>                <span class="hljs-attr">Passes</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-attr">highWaterMark</span>: <span class="hljs-number">1</span><br>            &#125;;<br>            <span class="hljs-comment">//讀取清單第一位網址</span><br>            <span class="hljs-keyword">const</span> stream = <span class="hljs-keyword">await</span> ytdl(musicList.get(guildID)[<span class="hljs-number">0</span>], &#123;<br>                <span class="hljs-attr">filter</span>: <span class="hljs-string">&#x27;audioonly&#x27;</span>,<br>                <span class="hljs-attr">quality</span>: <span class="hljs-string">&#x27;highestaudio&#x27;</span>,<br>                <span class="hljs-attr">highWaterMark</span>: <span class="hljs-number">26214400</span> <span class="hljs-comment">//25ms</span><br>            &#125;)<br><br>            <span class="hljs-comment">//播放歌曲，並且存入dispatcher</span><br>            dispatcher.set(guildID, connection.play(stream, streamOptions));<br>            <span class="hljs-comment">//監聽歌曲播放結束事件</span><br>            dispatcher.get(guildID).on(<span class="hljs-string">&quot;finish&quot;</span>, <span class="hljs-function"><span class="hljs-params">finish</span> =&gt;</span> &#123;<br>                <span class="hljs-comment">//將清單中第一首歌清除</span><br>                <span class="hljs-keyword">if</span> (musicList.get(guildID).length &gt; <span class="hljs-number">0</span>) musicList.get(guildID).shift();<br>                <span class="hljs-comment">//播放歌曲</span><br>                playMusic2(connection, guildID, channelID);<br>            &#125;)<br>        &#125; <span class="hljs-keyword">else</span> disconnectMusic(guildID, channelID); <span class="hljs-comment">//清空歌單並且退出語音頻道</span><br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playMusic2Error&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?disconnect</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">disconnectMusic</span>(<span class="hljs-params">guildID, channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//判斷bot是否在此群組的語音頻道</span><br>        <span class="hljs-keyword">if</span> (client.voice.connections.get(guildID)) &#123;<br>            <span class="hljs-comment">//清空歌曲清單</span><br>            musicList.set(guildID, <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>());<br>            <span class="hljs-comment">//退出語音頻道</span><br>            client.voice.connections.get(guildID).disconnect();<br><br>            client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;晚安~&#x27;</span>));<br>        &#125; <span class="hljs-keyword">else</span> client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;可是..我還沒進來:3&#x27;</span>))<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;disconnectMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?replay</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">replayMusic</span>(<span class="hljs-params">guildID</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (musicList.get(guildID).length &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-comment">//把當前曲目再推一個到最前面</span><br>        musicList.get(guildID).unshift(musicList[<span class="hljs-number">0</span>]);<br>        <span class="hljs-comment">//將歌曲關閉，觸發finish事件</span><br>        <span class="hljs-comment">//finish事件將清單第一首歌排出，然後繼續播放下一首</span><br>        <span class="hljs-keyword">if</span> (dispatcher.get(guildID) !== <span class="hljs-literal">undefined</span>) dispatcher.get(guildID).end();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?skip</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">skipMusic</span>(<span class="hljs-params">guildID</span>) </span>&#123;<br>    <span class="hljs-comment">//將歌曲關閉，觸發finish事件</span><br>    <span class="hljs-keyword">if</span> (dispatcher.get(guildID) !== <span class="hljs-literal">undefined</span>) dispatcher.get(guildID).end();<br>&#125;<br><br><span class="hljs-comment">//?np</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">nowPlayMusic</span>(<span class="hljs-params">guildID, channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (dispatcher.get(guildID) !== <span class="hljs-literal">undefined</span> &amp;&amp; musicList.get(guildID).length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">//從連結中獲取歌曲資訊 標題 總長度等</span><br>            <span class="hljs-keyword">const</span> info = <span class="hljs-keyword">await</span> ytdl.getInfo(musicList.get(guildID)[<span class="hljs-number">0</span>]);<br>            <span class="hljs-comment">//歌曲標題</span><br>            <span class="hljs-keyword">const</span> title = info.videoDetails.title;<br>            <span class="hljs-comment">//歌曲全長(s)</span><br>            <span class="hljs-keyword">const</span> songLength = info.videoDetails.lengthSeconds;<br>            <span class="hljs-comment">//當前播放時間(ms)</span><br>            <span class="hljs-keyword">const</span> nowSongLength = <span class="hljs-built_in">Math</span>.floor(dispatcher.get(guildID).streamTime / <span class="hljs-number">1000</span>);<br>            <span class="hljs-comment">//串字串</span><br>            <span class="hljs-keyword">const</span> message = <span class="hljs-string">`<span class="hljs-subst">$&#123;title&#125;</span>\n<span class="hljs-subst">$&#123;streamString(songLength,nowSongLength)&#125;</span>`</span>;<br>            client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(message))<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;nowPlayMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//▬▬▬▬▬▬▬▬▬?▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">streamString</span>(<span class="hljs-params">songLength, nowSongLength</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> mainText = <span class="hljs-string">&#x27;?&#x27;</span>;<br>    <span class="hljs-keyword">const</span> secondText = <span class="hljs-string">&#x27;▬&#x27;</span>;<br>    <span class="hljs-keyword">const</span> whereMain = <span class="hljs-built_in">Math</span>.floor((nowSongLength / songLength) * <span class="hljs-number">100</span>);<br>    <span class="hljs-keyword">let</span> message = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">30</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span> (i * <span class="hljs-number">3.3</span> + <span class="hljs-number">1</span> &gt;= whereMain) &#123;<br>            message = message + mainText;<br>            mainText = secondText;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            message = message + secondText;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> message;<br>&#125;<br><br><span class="hljs-comment">//?queue</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">queueShow</span>(<span class="hljs-params">guildID, channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (musicList.get(guildID).length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">let</span> info;<br>            <span class="hljs-keyword">let</span> message = <span class="hljs-string">&#x27;&#x27;</span>;<br>            <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; musicList.get(guildID).length; i++) &#123;<br>                <span class="hljs-comment">//從連結中獲取歌曲資訊 標題 總長度等</span><br>                info = <span class="hljs-keyword">await</span> ytdl.getInfo(musicList.get(guildID)[i]);<br>                <span class="hljs-comment">//歌曲標題</span><br>                title = info.videoDetails.title;<br>                <span class="hljs-comment">//串字串</span><br>                message = message + <span class="hljs-string">`\n<span class="hljs-subst">$&#123;i+<span class="hljs-number">1</span>&#125;</span>. <span class="hljs-subst">$&#123;title&#125;</span>`</span>;<br>            &#125;<br>            <span class="hljs-comment">//把最前面的\n拿掉</span><br>            message = message.substring(<span class="hljs-number">1</span>, message.length);<br>            <span class="hljs-keyword">if</span> (message.length &gt; <span class="hljs-number">1900</span>) message = message.substring(<span class="hljs-number">0</span>, <span class="hljs-number">1900</span>);<br>            client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(message))<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;queueShowError&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?playList</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">playListMusic</span>(<span class="hljs-params">guildID, msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//沒在音樂廳不能使用此功能</span><br>        <span class="hljs-keyword">if</span> (!client.voice.connections.get(guildID)) &#123;<br>            msg.channel.send(<span class="hljs-string">`請先正常啟用音樂指令後，再使用歌單載入喔`</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-comment">//網址</span><br>        <span class="hljs-keyword">const</span> valueED = msg.content.split(<span class="hljs-string">&#x27; &#x27;</span>);<br>        <span class="hljs-comment">//先用library自帶的方式檢查一次能不能用</span><br>        <span class="hljs-keyword">const</span> canPlay = <span class="hljs-keyword">await</span> ytpl.validateID(valueED[<span class="hljs-number">1</span>]);<br>        <span class="hljs-comment">//讀取到幾首歌，上限默認100首</span><br>        <span class="hljs-keyword">let</span> a = <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">//幾首成功放入歌單</span><br>        <span class="hljs-keyword">let</span> b = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">if</span> (canPlay) &#123;<br>            <span class="hljs-keyword">const</span> listED = <span class="hljs-keyword">await</span> ytpl(valueED[<span class="hljs-number">1</span>]);<br>            <span class="hljs-keyword">await</span> listED.items.forEach(<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">element</span>) </span>&#123;<br>                a = a + <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">if</span> (element.title !== <span class="hljs-string">&#x27;[Deleted video]&#x27;</span>) &#123;<br>                    canPlay2 = <span class="hljs-keyword">await</span> ytdl.validateURL(element.url_simple);<br>                    <span class="hljs-keyword">if</span> (canPlay2) &#123;<br>                        b = b + <span class="hljs-number">1</span>;<br>                        musicList.get(guildID).push(element.url_simple);<br>                    &#125;<br>                &#125;<br>            &#125;);<br>            <span class="hljs-comment">//回傳統計資訊</span><br>            msg.channel.send(<span class="hljs-string">`歌單 <span class="hljs-subst">$&#123;listED.title&#125;</span>\n共載入<span class="hljs-subst">$&#123;b&#125;</span>首歌曲\n<span class="hljs-subst">$&#123;a-b&#125;</span>首載入失敗`</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            msg.channel.send(<span class="hljs-string">`This Url isn&#x27;t working in function.`</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playListMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//#endregion</span><br><br><span class="hljs-comment">//#region tag系統</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">TagFunction</span>(<span class="hljs-params">msg, tempPrefix</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> cmd = msg.content.substring(prefix[tempPrefix].Value.length).split(<span class="hljs-string">&#x27; &#x27;</span>); <span class="hljs-comment">//以空白分割前綴以後的字串</span><br><br>    <span class="hljs-keyword">switch</span> (cmd[<span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;AddUser&#x27;</span>: <span class="hljs-comment">//將使用者加入身份組</span><br>            addUserFunction(msg);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;CreateParty&#x27;</span>: <span class="hljs-comment">//創建身分組&amp;增加身分組可tag對象</span><br>            CreatePartyFunction(msg);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;Delete&#x27;</span>: <span class="hljs-comment">//從權限組中刪除使用者 OR 刪除權限組</span><br>            DeleteTag(msg);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>: <span class="hljs-comment">//身份組ID</span><br>            tagOther(msg, cmd);<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//tag人</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">tagOther</span>(<span class="hljs-params">msg, cmd</span>) </span>&#123;<br>    CheckID(msg, cmd, msg.author.id, <span class="hljs-function">(<span class="hljs-params">msg, cmd, haveUserData</span>) =&gt;</span> &#123;<br>        CheckParty(msg, cmd, haveUserData, SendTagMessage);<br>    &#125;);<br>&#125;<br><br><span class="hljs-comment">//判斷此人有沒有登記資料</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckID</span>(<span class="hljs-params">msg, cmd, userID, OtherFunction</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> haveUserData = UserPowerData.find(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> element.userID == userID;<br>    &#125;)<br><br>    <span class="hljs-keyword">if</span> (haveUserData !== <span class="hljs-literal">undefined</span>) &#123;<br>        <span class="hljs-comment">//有資料</span><br>        <span class="hljs-keyword">return</span> OtherFunction(msg, cmd, haveUserData);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> OtherFunction(msg, cmd, <span class="hljs-literal">false</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//根據UserPower獲得Party</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckParty</span>(<span class="hljs-params">msg, cmd, haveUserData, OtherFunction</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> havePartyPower;<br>    havePartyPower = PartyPowerData.filter(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (haveUserData.Joins[i].indexOf(element.ID) != -<span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span> element.Power.indexOf(cmd[<span class="hljs-number">1</span>]) != -<span class="hljs-number">1</span><br>        &#125;<br>    &#125;)<br><br>    <span class="hljs-keyword">if</span> (isEmptyObject(havePartyPower)) &#123;<br>        <span class="hljs-keyword">return</span> OtherFunction(msg, cmd, haveUserData, <span class="hljs-literal">false</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> OtherFunction(msg, cmd, haveUserData, havePartyPower);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//傳送訊息單獨實例</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">SendTagMessage</span>(<span class="hljs-params">msg, cmd, haveUserData, havePartyPower</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (haveUserData.IsAdmin) &#123;<br>        msg.channel.send(<span class="hljs-string">`&lt;@&amp;<span class="hljs-subst">$&#123;cmd[<span class="hljs-number">1</span>]&#125;</span>&gt;\n來自管理員&lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;的指令呼叫`</span>);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (havePartyPower) &#123;<br>        msg.channel.send(<span class="hljs-string">`&lt;@&amp;<span class="hljs-subst">$&#123;cmd[<span class="hljs-number">1</span>]&#125;</span>&gt;\n來自&lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;的指令呼叫`</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        msg.channel.send(<span class="hljs-string">&#x27;無權限，請確認參數是否正確&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//將xxx加入身分組</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addUserFunction</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (DoUserID === <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>            tempIsAdmin = CheckID(msg, <span class="hljs-literal">null</span>, msg.author.id, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">msg, cmd, haveUserData</span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (haveUserData.IsAdmin) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;);<br>            <span class="hljs-keyword">if</span> (tempIsAdmin) &#123;<br>                nowDoFunction = addUserFunctionNow;<br>                DoUserID = msg.author.id;<br>                DoData = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>;<br>                msg.channel.send(<span class="hljs-string">&#x27;請輸入要加入的使用者id&#x27;</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                msg.channel.send(<span class="hljs-string">&#x27;此指令只有管理員可執行&#x27;</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            msg.channel.send(<span class="hljs-string">&#x27;有其他人正在使用續行中，請稍等&#x27;</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;addUserFunctionError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//將xxx加入身份組(續行方法)</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addUserFunctionNow</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">switch</span> (DoingCount) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//加入使用者id</span><br>                DoData.push(msg.author.username); <span class="hljs-comment">//加入申請者名字</span><br>                msg.channel.send(<span class="hljs-string">`請輸入要加入的群組`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//加入群組</span><br>                DoData.push(<span class="hljs-literal">false</span>); <span class="hljs-comment">//IsAdmin預設False不可修改</span><br>                msg.channel.send(<span class="hljs-string">`申請資料如下:\n申請人 &lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;\n使用者 &lt;@<span class="hljs-subst">$&#123;DoData[<span class="hljs-number">0</span>]&#125;</span>&gt;\n加入權限組 <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">2</span>]&#125;</span>\n正確 Y / 錯誤 N`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;Y&#x27;</span>) &#123;<br>                    msg.channel.send(<span class="hljs-string">&#x27;已確認，輸入資料中...&#x27;</span>);<br>                    <span class="hljs-comment">//與舊資料比對，已有此人資料變進行更新</span><br>                    CheckID(msg, <span class="hljs-literal">null</span>, DoData[<span class="hljs-number">0</span>], EditOldUserPower);<br>                    GetGas.postUserPower(DoData, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                        <span class="hljs-keyword">if</span> (dataED) &#123;<br>                            <span class="hljs-comment">//bot內變數不會更新，手動更新</span><br>                            UserPowerData.unshift(&#123;<br>                                <span class="hljs-string">&#x27;userID&#x27;</span>: DoData[<span class="hljs-number">0</span>],<br>                                <span class="hljs-string">&#x27;userName&#x27;</span>: DoData[<span class="hljs-number">1</span>],<br>                                <span class="hljs-string">&#x27;Joins&#x27;</span>: DoData[<span class="hljs-number">2</span>],<br>                                <span class="hljs-string">&#x27;IsAdmin&#x27;</span>: DoData[<span class="hljs-number">3</span>]<br>                            &#125;);<br>                            msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            msg.channel.send(<span class="hljs-string">&#x27;資料輸入失敗，請重新嘗試&#x27;</span>);<br>                        &#125;<br>                        CloseAllDoingFunction();<br>                    &#125;);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;已取消行為，請重新下達指令&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    DoingCount--;<br>                    msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入Y/N來選擇&#x27;</span>);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (DoUserID !== <span class="hljs-string">&#x27;&#x27;</span>) DoingCount++;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        CloseAllDoingFunction();<br>        client.channels.fetch(msg.channel.id).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;發生意外錯誤，中斷指令行為，請重新下達指令!&#x27;</span>))<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;addUserFunctionNowError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//用戶舊資料更新</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">EditOldUserPower</span>(<span class="hljs-params">msg, cmd, haveUserData</span>) </span>&#123;<br>    <span class="hljs-comment">//二次確認</span><br>    <span class="hljs-keyword">if</span> (haveUserData) &#123;<br>        <span class="hljs-keyword">if</span> (DoData[<span class="hljs-number">0</span>] == haveUserData.userID) &#123;<br>            DoData[<span class="hljs-number">2</span>] = haveUserData.Joins + <span class="hljs-string">&#x27;;&#x27;</span> + DoData[<span class="hljs-number">2</span>];<br>            DoData[<span class="hljs-number">3</span>] = haveUserData.IsAdmin;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-comment">//用戶舊資料更新</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DeleteOldUserPower</span>(<span class="hljs-params">msg, cmd, haveUserData</span>) </span>&#123;<br>    <span class="hljs-comment">//二次確認</span><br>    <span class="hljs-keyword">if</span> (haveUserData) &#123;<br>        <span class="hljs-keyword">if</span> (DoData[<span class="hljs-number">0</span>] == haveUserData.userID) &#123;<br>            <span class="hljs-keyword">let</span> str = haveUserData.Joins;<br>            DoData[<span class="hljs-number">2</span>] = str.toString().replace(DoData[<span class="hljs-number">2</span>], <span class="hljs-string">&#x27;&#x27;</span>);<br>            DoData[<span class="hljs-number">3</span>] = haveUserData.IsAdmin;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-comment">//創建身分組&amp;增加身分組可tag對象</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CreatePartyFunction</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (DoUserID === <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>            tempIsAdmin = CheckID(msg, <span class="hljs-literal">null</span>, msg.author.id, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">msg, cmd, haveUserData</span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (haveUserData) &#123;<br>                    <span class="hljs-keyword">if</span> (haveUserData.IsAdmin) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;);<br>            <span class="hljs-keyword">if</span> (tempIsAdmin) &#123;<br>                nowDoFunction = CreatePartyFunctionNow;<br>                DoUserID = msg.author.id;<br>                DoData = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>;<br>                msg.channel.send(<span class="hljs-string">&#x27;請輸入身份組名稱&#x27;</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                msg.channel.send(<span class="hljs-string">&#x27;此指令只有管理員可執行&#x27;</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            msg.channel.send(<span class="hljs-string">&#x27;有其他人正在使用續行中，請稍等&#x27;</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;CreatePartyFunctionError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//創建身分組&amp;增加身分組可tag對象(續行)</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CreatePartyFunctionNow</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">switch</span> (DoingCount) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//身分組ID</span><br>                DoData.push(<span class="hljs-string">&#x27;2&#x27;</span>); <span class="hljs-comment">//type 2</span><br>                msg.channel.send(<span class="hljs-string">`請輸入要加入的tagID`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//加入tagID</span><br>                msg.channel.send(<span class="hljs-string">`申請資料如下:\n申請人 &lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;\n權限組 <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">0</span>]&#125;</span>\ntagID <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">2</span>]&#125;</span>\n正確 Y / 錯誤 N`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;Y&#x27;</span>) &#123;<br>                    msg.channel.send(<span class="hljs-string">&#x27;已確認，輸入資料中...&#x27;</span>);<br>                    <span class="hljs-comment">//與舊資料比對，已有此人資料變進行更新</span><br>                    EditOldPartyPower();<br>                    GetGas.postPartyPower(DoData, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                        <span class="hljs-keyword">if</span> (dataED) &#123;<br>                            <span class="hljs-comment">//bot內變數不會更新，手動更新</span><br>                            PartyPowerData.unshift(&#123;<br>                                <span class="hljs-string">&#x27;ID&#x27;</span>: DoData[<span class="hljs-number">0</span>],<br>                                <span class="hljs-string">&#x27;type&#x27;</span>: DoData[<span class="hljs-number">1</span>],<br>                                <span class="hljs-string">&#x27;Power&#x27;</span>: DoData[<span class="hljs-number">2</span>]<br>                            &#125;);<br>                            msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            msg.channel.send(<span class="hljs-string">&#x27;資料輸入失敗，請重新嘗試&#x27;</span>);<br>                        &#125;<br>                        CloseAllDoingFunction();<br>                    &#125;);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;已取消行為，請重新下達指令&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    DoingCount--;<br>                    msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入Y/N來選擇&#x27;</span>);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (DoUserID !== <span class="hljs-string">&#x27;&#x27;</span>) DoingCount++;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        CloseAllDoingFunction();<br>        client.channels.fetch(msg.channel.id).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;發生意外錯誤，中斷指令行為，請重新下達指令!&#x27;</span>))<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;CreatePartyFunctionNowError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//權限組舊資料更新</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">EditOldPartyPower</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (PartyPowerData) &#123;<br>        <span class="hljs-keyword">const</span> tempPartyData = PartyPowerData.find(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">return</span> element.ID == DoData[<span class="hljs-number">0</span>];<br>        &#125;)<br><br>        <span class="hljs-keyword">if</span> (tempPartyData !== <span class="hljs-literal">undefined</span>) &#123;<br>            DoData[<span class="hljs-number">2</span>] = tempPartyData.Power + <span class="hljs-string">&#x27;;&#x27;</span> + DoData[<span class="hljs-number">2</span>];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//權限組舊資料更新</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DeleteOldPartyPower</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (PartyPowerData) &#123;<br>        <span class="hljs-keyword">const</span> tempPartyData = PartyPowerData.find(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">return</span> element.ID == DoData[<span class="hljs-number">0</span>];<br>        &#125;)<br><br>        <span class="hljs-keyword">if</span> (tempPartyData == <span class="hljs-literal">undefined</span>) &#123;<br>            DoData[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br>            DoData[<span class="hljs-number">1</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br>            DoData[<span class="hljs-number">2</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//從權限組中刪除使用者 OR 刪除權限組</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DeleteTag</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (DoUserID === <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>            tempIsAdmin = CheckID(msg, <span class="hljs-literal">null</span>, msg.author.id, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">msg, cmd, haveUserData</span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (haveUserData.IsAdmin) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;);<br>            <span class="hljs-keyword">if</span> (tempIsAdmin) &#123;<br>                nowDoFunction = DeleteTagNow;<br>                DoUserID = msg.author.id;<br>                DoData = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>;<br>                msg.channel.send(<span class="hljs-string">&#x27;請問要編輯使用者權限還是權限組?\n1 使用者權限 / 2 權限組&#x27;</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                msg.channel.send(<span class="hljs-string">&#x27;此指令只有管理員可執行&#x27;</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            msg.channel.send(<span class="hljs-string">&#x27;有其他人正在使用續行中，請稍等&#x27;</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;DeleteTagError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//從權限組中刪除使用者 OR 刪除權限組(續行)</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DeleteTagNow</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">switch</span> (DoingCount) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">switch</span> (msg.content) &#123;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;1&#x27;</span>:<br>                        msg.channel.send(<span class="hljs-string">&#x27;請輸入要編輯的使用者ID&#x27;</span>);<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;2&#x27;</span>:<br>                        DoingCount = <span class="hljs-number">10</span>;<br>                        msg.channel.send(<span class="hljs-string">&#x27;請輸入要編輯的權限組&#x27;</span>);<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">default</span>:<br>                        DoingCount--;<br>                        msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入1/2來選擇&#x27;</span>);<br>                        <span class="hljs-keyword">break</span>;<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                <span class="hljs-keyword">if</span> (msg.content == <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;指令關閉&#x27;</span>);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">if</span> (CheckID(msg, <span class="hljs-literal">null</span>, msg.content, <span class="hljs-function">(<span class="hljs-params">msg, cmd, haveUserData</span>) =&gt;</span> &#123; <span class="hljs-keyword">return</span> haveUserData &#125;)) &#123;<br>                        DoData.push(msg.content); <span class="hljs-comment">//userID</span><br>                        DoData.push(msg.author.id); <span class="hljs-comment">//userName</span><br>                        msg.channel.send(<span class="hljs-string">&#x27;請輸入要刪除的群組權限&#x27;</span>);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        DoingCount--;<br>                        msg.channel.send(<span class="hljs-string">&#x27;此用戶不存在資料，請確認，如果要關閉指令請輸入 N&#x27;</span>);<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">// Power</span><br>                DoData.push(<span class="hljs-literal">false</span>); <span class="hljs-comment">// IsAdmin</span><br>                msg.channel.send(<span class="hljs-string">`申請資料如下:\n申請人 &lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;\n使用者 &lt;@<span class="hljs-subst">$&#123;DoData[<span class="hljs-number">0</span>]&#125;</span>&gt;\n刪除權限組 <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">2</span>]&#125;</span>\n正確 Y / 錯誤 N`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>                <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;Y&#x27;</span>) &#123;<br>                    msg.channel.send(<span class="hljs-string">&#x27;已確認，輸入資料中...&#x27;</span>);<br>                    <span class="hljs-comment">//與舊資料比對，已有此人資料變進行更新</span><br>                    CheckID(msg, <span class="hljs-literal">null</span>, DoData[<span class="hljs-number">0</span>], DeleteOldUserPower);<br>                    GetGas.postUserPower(DoData, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                        <span class="hljs-keyword">if</span> (dataED) &#123;<br>                            <span class="hljs-comment">//bot內變數不會更新，手動更新</span><br>                            UserPowerData.unshift(&#123;<br>                                <span class="hljs-string">&#x27;userID&#x27;</span>: DoData[<span class="hljs-number">0</span>],<br>                                <span class="hljs-string">&#x27;userName&#x27;</span>: DoData[<span class="hljs-number">1</span>],<br>                                <span class="hljs-string">&#x27;Joins&#x27;</span>: DoData[<span class="hljs-number">2</span>],<br>                                <span class="hljs-string">&#x27;IsAdmin&#x27;</span>: DoData[<span class="hljs-number">3</span>]<br>                            &#125;);<br>                            msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            msg.channel.send(<span class="hljs-string">&#x27;資料輸入失敗，請重新嘗試&#x27;</span>);<br>                        &#125;<br>                        CloseAllDoingFunction();<br>                    &#125;);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;已取消行為，請重新下達指令&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    DoingCount--;<br>                    msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入Y/N來選擇&#x27;</span>);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">11</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//身分組ID</span><br>                DoData.push(<span class="hljs-string">&#x27;2&#x27;</span>); <span class="hljs-comment">//type 2</span><br>                DoData.push(<span class="hljs-string">&#x27;&#x27;</span>);<br>                msg.channel.send(<span class="hljs-string">`申請資料如下:\n申請人 &lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;\n刪除權限組 <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">0</span>]&#125;</span>\n正確 Y / 錯誤 N`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">12</span>:<br>                <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;Y&#x27;</span>) &#123;<br>                    msg.channel.send(<span class="hljs-string">&#x27;已確認，輸入資料中...&#x27;</span>);<br>                    <span class="hljs-comment">//與舊資料比對，沒有此身分組資料清除</span><br>                    DeleteOldPartyPower();<br>                    <span class="hljs-keyword">if</span> (DoData[<span class="hljs-number">0</span>] != <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>                        GetGas.postPartyPower(DoData, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                            <span class="hljs-keyword">if</span> (dataED) &#123;<br>                                <span class="hljs-comment">//bot內變數不會更新，手動更新</span><br>                                PartyPowerData.unshift(&#123;<br>                                    <span class="hljs-string">&#x27;ID&#x27;</span>: DoData[<span class="hljs-number">0</span>],<br>                                    <span class="hljs-string">&#x27;type&#x27;</span>: DoData[<span class="hljs-number">1</span>],<br>                                    <span class="hljs-string">&#x27;Power&#x27;</span>: DoData[<span class="hljs-number">2</span>]<br>                                &#125;);<br>                                msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                            &#125; <span class="hljs-keyword">else</span> &#123;<br>                                msg.channel.send(<span class="hljs-string">&#x27;資料輸入失敗，請重新嘗試&#x27;</span>);<br>                            &#125;<br>                            CloseAllDoingFunction();<br>                        &#125;);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                        CloseAllDoingFunction();<br>                    &#125;<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;已取消行為，請重新下達指令&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    DoingCount--;<br>                    msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入Y/N來選擇&#x27;</span>);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (DoUserID !== <span class="hljs-string">&#x27;&#x27;</span>) DoingCount++;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        CloseAllDoingFunction();<br>        client.channels.fetch(msg.channel.id).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;發生意外錯誤，中斷指令行為，請重新下達指令!&#x27;</span>))<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;DeleteTagNowError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//#endregion</span><br><br><span class="hljs-comment">//#region 對話資料庫系統</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">BaseExcelFunction</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> messageED = GetBaseExcelData(msg);<br>    <span class="hljs-keyword">if</span> (messageED) msg.channel.send(messageED);<br>&#125;<br><br><span class="hljs-comment">//#endregion</span><br><br><span class="hljs-comment">//#region 子類方法</span><br><span class="hljs-comment">//獲取頭像</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetMyAvatar</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">return</span> &#123;<br>            <span class="hljs-attr">files</span>: [&#123;<br>                <span class="hljs-attr">attachment</span>: msg.users.author.displayAvatarURL(<span class="hljs-string">&#x27;png&#x27;</span>, <span class="hljs-literal">true</span>),<br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;avatar.jpg&#x27;</span><br>            &#125;]<br>        &#125;;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;GetMyAvatar,Error&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//BaseExcel字串比對</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetBaseExcelData</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (BaseExcelData) &#123;<br>            <span class="hljs-keyword">const</span> userMessage = msg.content;<br><br>            e = BaseExcelData.filter(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>                <span class="hljs-keyword">return</span> element.NAME === userMessage;<br>            &#125;)<br><br>            <span class="hljs-keyword">if</span> (e.length != <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> e[<span class="hljs-number">0</span>].VALUE;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;GetBaseExcelDataError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//禁言系統判斷</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">IsShut</span>(<span class="hljs-params">msg, tempPrefix</span>) </span>&#123;<br>    <span class="hljs-comment">//群組id</span><br>    <span class="hljs-keyword">const</span> guildID = msg.guild.id;<br>    <span class="hljs-comment">//頻道id</span><br>    <span class="hljs-keyword">const</span> channelID = msg.channel.id;<br>    <span class="hljs-comment">//當前狀態</span><br>    <span class="hljs-keyword">let</span> status = <span class="hljs-literal">true</span>;<br><br>    <span class="hljs-comment">//先判斷群組，群組判斷完判斷頻道(頻道權限優先於群組)</span><br>    <span class="hljs-keyword">const</span> guildIF = shup.Group.find(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (element.GroupID == guildID) &#123;<br>            <span class="hljs-keyword">return</span> element.Power.indexOf(tempPrefix) !== -<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;)<br><br>    <span class="hljs-comment">//找到資料 = 此群組存在Group中且Power存在此次指令代碼</span><br>    <span class="hljs-keyword">if</span> (guildIF !== <span class="hljs-literal">undefined</span>) &#123;<br>        status = <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//頻道</span><br>    <span class="hljs-keyword">const</span> channelIF = shup.Channel.find(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (element.ChannelID == channelID) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;)<br><br>    <span class="hljs-comment">//找到資料 = 此頻道存在Channel中</span><br>    <span class="hljs-keyword">if</span> (channelIF !== <span class="hljs-literal">undefined</span>) &#123;<br>        <span class="hljs-comment">//Power有此資料=&gt;禁用功能 無資料=&gt;不設限</span><br>        <span class="hljs-keyword">if</span> (channelIF.Power.indexOf(tempPrefix) !== -<span class="hljs-number">1</span>) &#123;<br>            status = <span class="hljs-literal">false</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            status = <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> status;<br>&#125;<br><br><span class="hljs-comment">//ArrayIsEmpty</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isEmptyObject</span>(<span class="hljs-params">obj</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> !<span class="hljs-built_in">Object</span>.keys(obj).length;<br>&#125;<br><br><span class="hljs-comment">//關閉續行方法</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CloseAllDoingFunction</span>(<span class="hljs-params"></span>) </span>&#123;<br>    nowDoFunction = <span class="hljs-literal">false</span>;<br>    DoingCount = <span class="hljs-number">0</span>;<br>    DoUserID = <span class="hljs-string">&#x27;&#x27;</span>;<br>    DoData = <span class="hljs-literal">undefined</span>;<br>&#125;<br><span class="hljs-comment">//#endregion</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day29 - tag控管機制(3)</title>
    <link href="/2020/09/29/12thDay29/"/>
    <url>/2020/09/29/12thDay29/</url>
    
    <content type="html"><![CDATA[<p>昨天我們做好了 將使用者加入身份組指令<br>今天把 創建身分組的指令做好</p><p>跟昨天一樣，請先開啟GAS，身分組的GAS叫做getPartyPower<br>新增以下</p><p><img src="https://i.imgur.com/eqoYtRi.png" alt="29-1"></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">function</span> <span class="hljs-keyword">do</span><span class="hljs-constructor">Post(<span class="hljs-params">e</span>)</span>&#123;<br>  var para = e.parameter; <span class="hljs-comment">// 存放 post 所有傳送的參數</span><br>  <br>  var id = &#x27;<span class="hljs-number">1</span>mQ6qTJfOs3Gv5--K9r87w56wmDc3hUcpHm5hF1YKTms&#x27;; <span class="hljs-comment">//抓取表單</span><br>  var spreadsheet = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">SpreadsheetApp</span>.</span></span><span class="hljs-keyword">open</span><span class="hljs-constructor">ById(<span class="hljs-params">id</span>)</span>; <span class="hljs-comment">// Sheet id</span><br>  var sheet1 = spreadsheet.get<span class="hljs-constructor">SheetByName(<span class="hljs-string">&quot;PartyPower&quot;</span>)</span>; <span class="hljs-comment">// 根據表格名稱取表</span><br>  var rowLength = sheet1.get<span class="hljs-constructor">LastRow()</span>-<span class="hljs-number">1</span>;<br>  var columnLength = sheet1.get<span class="hljs-constructor">LastColumn()</span>;<br>  var data = sheet1.get<span class="hljs-constructor">Range(2,1,<span class="hljs-params">rowLength</span>,<span class="hljs-params">columnLength</span>)</span>.get<span class="hljs-constructor">Values()</span>; <span class="hljs-comment">// 取得的資料</span><br>  var ID   = para.ID,<br>      <span class="hljs-keyword">type</span> = para.<span class="hljs-keyword">type</span>,<br>      Power    = para.Power;<br>  <br>  var upData = <span class="hljs-literal">[]</span>;<br>  <br>  <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;=rowLength-<span class="hljs-number">1</span>;i++)&#123;<br>    upData = data<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span><br>    <span class="hljs-keyword">if</span>((upData<span class="hljs-literal">[<span class="hljs-number">0</span>]</span>==ID)<span class="hljs-operator"> == </span><span class="hljs-literal">false</span>)&#123;<br>      upData = undefined;<br>    &#125;<br>  <br>  <br>    <span class="hljs-keyword">if</span>(upData != undefined)&#123;<br>      sheet1.get<span class="hljs-constructor">Range(<span class="hljs-params">i</span>+2, 1)</span>.set<span class="hljs-constructor">Value(ID)</span>;<br>      sheet1.get<span class="hljs-constructor">Range(<span class="hljs-params">i</span>+2, 2)</span>.set<span class="hljs-constructor">Value(<span class="hljs-params">type</span>)</span>;<br>      sheet1.get<span class="hljs-constructor">Range(<span class="hljs-params">i</span>+2, 3)</span>.set<span class="hljs-constructor">Value(Power)</span>;<br>      return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ContentService</span>.</span></span>create<span class="hljs-constructor">TextOutput(<span class="hljs-params">upData</span>)</span>.set<span class="hljs-constructor">MimeType(ContentService.MimeType.JSON)</span>;<br>    &#125;<br>  &#125;<br>  <br>  <br>  sheet1.append<span class="hljs-constructor">Row([ID,<span class="hljs-params">type</span>,Power])</span>; <span class="hljs-comment">// 插入一列新的資料</span><br>  var dataExportFormat = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>stringify(para);<br>  return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ContentService</span>.</span></span>create<span class="hljs-constructor">TextOutput(<span class="hljs-params">dataExportFormat</span>)</span>.set<span class="hljs-constructor">MimeType(ContentService.MimeType.JSON)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>加到auth.json</p><p><img src="https://i.imgur.com/0brSMZw.png" alt="29-2"></p><p>GetGas.js</p><p><img src="https://i.imgur.com/9KlDFkj.png" alt="29-3"></p><p>bot.js</p><p><img src="https://i.imgur.com/oKcdCTg.png" alt="29-4"></p><p><img src="https://i.imgur.com/nQgPf3p.png" alt="29-5"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//創建身分組&amp;增加身分組可tag對象(續行)</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CreatePartyFunctionNow</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">switch</span> (DoingCount) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//身分組ID</span><br>                DoData.push(<span class="hljs-string">&#x27;2&#x27;</span>); <span class="hljs-comment">//type 2</span><br>                msg.channel.send(<span class="hljs-string">`請輸入要加入的tagID`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//加入tagID</span><br>                msg.channel.send(<span class="hljs-string">`申請資料如下:\n申請人 &lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;\n權限組 &lt;@<span class="hljs-subst">$&#123;DoData[<span class="hljs-number">0</span>]&#125;</span>&gt;\ntagID <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">2</span>]&#125;</span>\n正確 Y / 錯誤 N`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;Y&#x27;</span>) &#123;<br>                    msg.channel.send(<span class="hljs-string">&#x27;已確認，輸入資料中...&#x27;</span>);<br>                    <span class="hljs-comment">//與舊資料比對，已有此人資料變進行更新</span><br>                    EditOldPartyPower();<br>                    GetGas.postPartyPower(DoData, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                        <span class="hljs-keyword">if</span> (dataED) &#123;<br>                            <span class="hljs-comment">//bot內變數不會更新，手動更新</span><br>                            PartyPowerData.unshift(&#123;<br>                                <span class="hljs-string">&#x27;ID&#x27;</span>: DoData[<span class="hljs-number">0</span>],<br>                                <span class="hljs-string">&#x27;type&#x27;</span>: DoData[<span class="hljs-number">1</span>],<br>                                <span class="hljs-string">&#x27;Power&#x27;</span>: DoData[<span class="hljs-number">2</span>]<br>                            &#125;);<br>                            msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            msg.channel.send(<span class="hljs-string">&#x27;資料輸入失敗，請重新嘗試&#x27;</span>);<br>                        &#125;<br>                        CloseAllDoingFunction();<br>                    &#125;);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;已取消行為，請重新下達指令&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    DoingCount--;<br>                    msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入Y/N來選擇&#x27;</span>);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (DoUserID !== <span class="hljs-string">&#x27;&#x27;</span>) DoingCount++;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        CloseAllDoingFunction();<br>        client.channels.fetch(msg.channel.id).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;發生意外錯誤，中斷指令行為，請重新下達指令!&#x27;</span>))<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;CreatePartyFunctionNowError&#x27;</span>, err);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/FB6RfAd.png" alt="29-6"></p><p>作法基本上跟上次新增使用者一樣<br>試著運行看看</p><p><img src="https://i.imgur.com/x3Qx41S.png" alt="29-7"></p><p><img src="https://i.imgur.com/Mf6vO49.png" alt="29-8"></p><p><img src="https://i.imgur.com/VH2f5L2.png" alt="29-9"></p><p>成功<br>明天就是最後一篇了，筆者會把刪除的指令做好<br>其實跟現在新增的作法是大同小異的，各位不彷試試看</p><p>為了將CheckID與CheckParty的分工化更明確一點，因此有稍微修改程式碼<br>這邊貼上程式碼</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//#region tag系統</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">TagFunction</span>(<span class="hljs-params">msg, tempPrefix</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> cmd = msg.content.substring(prefix[tempPrefix].Value.length).split(<span class="hljs-string">&#x27; &#x27;</span>); <span class="hljs-comment">//以空白分割前綴以後的字串</span><br><br>    <span class="hljs-keyword">switch</span> (cmd[<span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;AddUser&#x27;</span>: <span class="hljs-comment">//將使用者加入身份組</span><br>            addUserFunction(msg);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;CreateParty&#x27;</span>: <span class="hljs-comment">//創建身分組&amp;增加身分組可tag對象</span><br>            CreatePartyFunction(msg);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>: <span class="hljs-comment">//身份組ID</span><br>            tagOther(msg, cmd);<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//tag人</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">tagOther</span>(<span class="hljs-params">msg, cmd</span>) </span>&#123;<br>    CheckID(msg, cmd, msg.author.id, <span class="hljs-function">(<span class="hljs-params">msg, cmd, haveUserData</span>) =&gt;</span> &#123;<br>        CheckParty(msg, cmd, haveUserData, SendTagMessage);<br>    &#125;);<br>&#125;<br><br><span class="hljs-comment">//判斷此人有沒有登記資料</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckID</span>(<span class="hljs-params">msg, cmd, userID, OtherFunction</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> haveUserData = UserPowerData.find(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> element.userID == userID;<br>    &#125;)<br><br>    <span class="hljs-keyword">if</span> (haveUserData !== <span class="hljs-literal">undefined</span>) &#123;<br>        <span class="hljs-comment">//有資料</span><br>        <span class="hljs-keyword">return</span> OtherFunction(msg, cmd, haveUserData);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> OtherFunction(msg, cmd, <span class="hljs-literal">false</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//根據UserPower獲得Party</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckParty</span>(<span class="hljs-params">msg, cmd, haveUserData, OtherFunction</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> havePartyPower;<br>    havePartyPower = PartyPowerData.filter(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (haveUserData.Joins[i].indexOf(element.ID) != -<span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span> element.Power.indexOf(cmd[<span class="hljs-number">1</span>]) != -<span class="hljs-number">1</span><br>        &#125;<br>    &#125;)<br><br>    <span class="hljs-keyword">if</span> (isEmptyObject(havePartyPower)) &#123;<br>        OtherFunction(msg, cmd, haveUserData, <span class="hljs-literal">false</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        OtherFunction(msg, cmd, haveUserData, havePartyPower);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//傳送訊息單獨實例</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">SendTagMessage</span>(<span class="hljs-params">msg, cmd, haveUserData, havePartyPower</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (haveUserData.IsAdmin) &#123;<br>        msg.channel.send(<span class="hljs-string">`&lt;@&amp;<span class="hljs-subst">$&#123;cmd[<span class="hljs-number">1</span>]&#125;</span>&gt;\n來自管理員&lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;的指令呼叫`</span>);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (havePartyPower) &#123;<br>        msg.channel.send(<span class="hljs-string">`&lt;@&amp;<span class="hljs-subst">$&#123;cmd[<span class="hljs-number">1</span>]&#125;</span>&gt;\n來自&lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;的指令呼叫`</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        msg.channel.send(<span class="hljs-string">&#x27;無權限，請確認參數是否正確&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//將xxx加入身分組</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addUserFunction</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (DoUserID === <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>            tempIsAdmin = CheckID(msg, <span class="hljs-literal">null</span>, msg.author.id, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">msg, cmd, haveUserData</span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (haveUserData.IsAdmin) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;);<br>            <span class="hljs-keyword">if</span> (tempIsAdmin) &#123;<br>                nowDoFunction = addUserFunctionNow;<br>                DoUserID = msg.author.id;<br>                DoData = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>;<br>                msg.channel.send(<span class="hljs-string">&#x27;請輸入要加入的使用者id&#x27;</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                msg.channel.send(<span class="hljs-string">&#x27;此指令只有管理員可執行&#x27;</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            msg.channel.send(<span class="hljs-string">&#x27;有其他人正在使用續行中，請稍等&#x27;</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;addUserFunctionError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//將xxx加入身份組(續行方法)</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addUserFunctionNow</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">switch</span> (DoingCount) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//加入使用者id</span><br>                DoData.push(msg.author.username); <span class="hljs-comment">//加入申請者名字</span><br>                msg.channel.send(<span class="hljs-string">`請輸入要加入的群組`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//加入群組</span><br>                DoData.push(<span class="hljs-literal">false</span>); <span class="hljs-comment">//IsAdmin預設False不可修改</span><br>                msg.channel.send(<span class="hljs-string">`申請資料如下:\n申請人 &lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;\n使用者 &lt;@<span class="hljs-subst">$&#123;DoData[<span class="hljs-number">0</span>]&#125;</span>&gt;\n加入權限組 <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">2</span>]&#125;</span>\n正確 Y / 錯誤 N`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;Y&#x27;</span>) &#123;<br>                    msg.channel.send(<span class="hljs-string">&#x27;已確認，輸入資料中...&#x27;</span>);<br>                    <span class="hljs-comment">//與舊資料比對，已有此人資料變進行更新</span><br>                    CheckID(msg, <span class="hljs-literal">null</span>, DoData[<span class="hljs-number">0</span>], EditOldUserPower);<br>                    GetGas.postUserPower(DoData, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                        <span class="hljs-keyword">if</span> (dataED) &#123;<br>                            <span class="hljs-comment">//bot內變數不會更新，手動更新</span><br>                            UserPowerData.unshift(&#123;<br>                                <span class="hljs-string">&#x27;userID&#x27;</span>: DoData[<span class="hljs-number">0</span>],<br>                                <span class="hljs-string">&#x27;userName&#x27;</span>: DoData[<span class="hljs-number">1</span>],<br>                                <span class="hljs-string">&#x27;Joins&#x27;</span>: DoData[<span class="hljs-number">2</span>],<br>                                <span class="hljs-string">&#x27;IsAdmin&#x27;</span>: DoData[<span class="hljs-number">3</span>]<br>                            &#125;);<br>                            msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            msg.channel.send(<span class="hljs-string">&#x27;資料輸入失敗，請重新嘗試&#x27;</span>);<br>                        &#125;<br>                        CloseAllDoingFunction();<br>                    &#125;);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;已取消行為，請重新下達指令&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    DoingCount--;<br>                    msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入Y/N來選擇&#x27;</span>);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (DoUserID !== <span class="hljs-string">&#x27;&#x27;</span>) DoingCount++;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        CloseAllDoingFunction();<br>        client.channels.fetch(msg.channel.id).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;發生意外錯誤，中斷指令行為，請重新下達指令!&#x27;</span>))<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;addUserFunctionNowError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//用戶舊資料更新</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">EditOldUserPower</span>(<span class="hljs-params">msg, cmd, haveUserData</span>) </span>&#123;<br>    <span class="hljs-comment">//二次確認</span><br>    <span class="hljs-keyword">if</span> (haveUserData) &#123;<br>        <span class="hljs-keyword">if</span> (DoData[<span class="hljs-number">0</span>] == haveUserData.userID) &#123;<br>            DoData[<span class="hljs-number">2</span>] = haveUserData.Joins + <span class="hljs-string">&#x27;;&#x27;</span> + DoData[<span class="hljs-number">2</span>];<br>            DoData[<span class="hljs-number">3</span>] = haveUserData.IsAdmin;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-comment">//創建身分組&amp;增加身分組可tag對象</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CreatePartyFunction</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (DoUserID === <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>            tempIsAdmin = CheckID(msg, <span class="hljs-literal">null</span>, msg.author.id, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">msg, cmd, haveUserData</span>) </span>&#123;<br>                <span class="hljs-keyword">if</span> (haveUserData) &#123;<br>                    <span class="hljs-keyword">if</span> (haveUserData.IsAdmin) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>                    <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;);<br>            <span class="hljs-keyword">if</span> (tempIsAdmin) &#123;<br>                nowDoFunction = CreatePartyFunctionNow;<br>                DoUserID = msg.author.id;<br>                DoData = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>;<br>                msg.channel.send(<span class="hljs-string">&#x27;請輸入身份組名稱&#x27;</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                msg.channel.send(<span class="hljs-string">&#x27;此指令只有管理員可執行&#x27;</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            msg.channel.send(<span class="hljs-string">&#x27;有其他人正在使用續行中，請稍等&#x27;</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;CreatePartyFunctionError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//創建身分組&amp;增加身分組可tag對象(續行)</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CreatePartyFunctionNow</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">switch</span> (DoingCount) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//身分組ID</span><br>                DoData.push(<span class="hljs-string">&#x27;2&#x27;</span>); <span class="hljs-comment">//type 2</span><br>                msg.channel.send(<span class="hljs-string">`請輸入要加入的tagID`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//加入tagID</span><br>                msg.channel.send(<span class="hljs-string">`申請資料如下:\n申請人 &lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;\n權限組 <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">0</span>]&#125;</span>\ntagID <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">2</span>]&#125;</span>\n正確 Y / 錯誤 N`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;Y&#x27;</span>) &#123;<br>                    msg.channel.send(<span class="hljs-string">&#x27;已確認，輸入資料中...&#x27;</span>);<br>                    <span class="hljs-comment">//與舊資料比對，已有此人資料變進行更新</span><br>                    EditOldPartyPower();<br>                    GetGas.postPartyPower(DoData, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                        <span class="hljs-keyword">if</span> (dataED) &#123;<br>                            <span class="hljs-comment">//bot內變數不會更新，手動更新</span><br>                            PartyPowerData.unshift(&#123;<br>                                <span class="hljs-string">&#x27;ID&#x27;</span>: DoData[<span class="hljs-number">0</span>],<br>                                <span class="hljs-string">&#x27;type&#x27;</span>: DoData[<span class="hljs-number">1</span>],<br>                                <span class="hljs-string">&#x27;Power&#x27;</span>: DoData[<span class="hljs-number">2</span>]<br>                            &#125;);<br>                            msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            msg.channel.send(<span class="hljs-string">&#x27;資料輸入失敗，請重新嘗試&#x27;</span>);<br>                        &#125;<br>                        CloseAllDoingFunction();<br>                    &#125;);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;已取消行為，請重新下達指令&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    DoingCount--;<br>                    msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入Y/N來選擇&#x27;</span>);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (DoUserID !== <span class="hljs-string">&#x27;&#x27;</span>) DoingCount++;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        CloseAllDoingFunction();<br>        client.channels.fetch(msg.channel.id).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;發生意外錯誤，中斷指令行為，請重新下達指令!&#x27;</span>))<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;CreatePartyFunctionNowError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//權限組舊資料更新</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">EditOldPartyPower</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (PartyPowerData) &#123;<br>        <span class="hljs-keyword">const</span> tempPartyData = PartyPowerData.find(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">return</span> element.ID == DoData[<span class="hljs-number">0</span>];<br>        &#125;)<br><br>        <span class="hljs-keyword">if</span> (tempPartyData !== <span class="hljs-literal">undefined</span>) &#123;<br>            DoData[<span class="hljs-number">2</span>] = tempPartyData.Power + <span class="hljs-string">&#x27;;&#x27;</span> + DoData[<span class="hljs-number">2</span>];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//#endregion</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day28 - tag控管機制(2)</title>
    <link href="/2020/09/28/12thDay28/"/>
    <url>/2020/09/28/12thDay28/</url>
    
    <content type="html"><![CDATA[<p>今天來把postAPI跟續行的框架與加入使用者至身份組的功能寫好</p><p>請打開之前再google雲端上創建的GAS ， getUserPower</p><p><img src="https://i.imgur.com/cPksdp2.png" alt="28-1"></p><p>原本的程式寫在doGet方法，我們在doGet方法下新增一個doPost方法，然後寫上這些東西</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">function</span> <span class="hljs-keyword">do</span><span class="hljs-constructor">Post(<span class="hljs-params">e</span>)</span>&#123;<br>  var para = e.parameter; <span class="hljs-comment">// 存放 post 所有傳送的參數</span><br>  <br>  var id = &#x27;<span class="hljs-number">1</span>mQ6qTJfOs3Gv5--K9r87w56wmDc3hUcpHm5hF1YKTms&#x27;; <span class="hljs-comment">//抓取表單</span><br>  var spreadsheet = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">SpreadsheetApp</span>.</span></span><span class="hljs-keyword">open</span><span class="hljs-constructor">ById(<span class="hljs-params">id</span>)</span>; <span class="hljs-comment">// Sheet id</span><br>  var sheet1 = spreadsheet.get<span class="hljs-constructor">SheetByName(<span class="hljs-string">&quot;UserPower&quot;</span>)</span>; <span class="hljs-comment">// 根據表格名稱取表</span><br>  var rowLength = sheet1.get<span class="hljs-constructor">LastRow()</span>-<span class="hljs-number">1</span>;<br>  var columnLength = sheet1.get<span class="hljs-constructor">LastColumn()</span>;<br>  var data = sheet1.get<span class="hljs-constructor">Range(2,1,<span class="hljs-params">rowLength</span>,<span class="hljs-params">columnLength</span>)</span>.get<span class="hljs-constructor">Values()</span>; <span class="hljs-comment">// 取得的資料</span><br>  var userID   = para.userID,<br>      userName = para.userName,<br>      Joins    = para.Joins,<br>      IsAdmin  = para.IsAdmin;<br>  <br>  var upData = <span class="hljs-literal">[]</span>;<br>  <br>  <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;=rowLength-<span class="hljs-number">1</span>;i++)&#123;<br>    upData = data<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span><br>    <span class="hljs-keyword">if</span>((upData<span class="hljs-literal">[<span class="hljs-number">0</span>]</span>==userID)<span class="hljs-operator"> == </span><span class="hljs-literal">false</span>)&#123;<br>      upData = undefined;<br>    &#125;<br>  <br>  <br>    <span class="hljs-keyword">if</span>(upData != undefined)&#123;<br>      sheet1.get<span class="hljs-constructor">Range(<span class="hljs-params">i</span>+2, 1)</span>.set<span class="hljs-constructor">Value(<span class="hljs-params">userID</span>)</span>;<br>      sheet1.get<span class="hljs-constructor">Range(<span class="hljs-params">i</span>+2, 2)</span>.set<span class="hljs-constructor">Value(<span class="hljs-params">userName</span>)</span>;<br>      sheet1.get<span class="hljs-constructor">Range(<span class="hljs-params">i</span>+2, 3)</span>.set<span class="hljs-constructor">Value(Joins)</span>;<br>      sheet1.get<span class="hljs-constructor">Range(<span class="hljs-params">i</span>+2, 4)</span>.set<span class="hljs-constructor">Value(IsAdmin)</span>;<br>      return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ContentService</span>.</span></span>create<span class="hljs-constructor">TextOutput(<span class="hljs-params">upData</span>)</span>.set<span class="hljs-constructor">MimeType(ContentService.MimeType.JSON)</span>;<br>    &#125;<br>  &#125;<br>  <br>  <br>  sheet1.append<span class="hljs-constructor">Row([<span class="hljs-params">userID</span>,<span class="hljs-params">userName</span>,Joins,IsAdmin])</span>; <span class="hljs-comment">// 插入一列新的資料</span><br>  var dataExportFormat = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>stringify(para);<br>  return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ContentService</span>.</span></span>create<span class="hljs-constructor">TextOutput(<span class="hljs-params">dataExportFormat</span>)</span>.set<span class="hljs-constructor">MimeType(ContentService.MimeType.JSON)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>doGet與doPost是GAS默認的Get與Post方法<br>使用他的Url執行Get請求就會進doGet<br>反之post就會進doPost</p><p>回到程序，一樣在auth加入url<br>雖然值跟Get方法時的Url一樣，不過這樣寫會比較好分辨，之後想改成兩個檔案也可以</p><p><img src="https://i.imgur.com/znAkUYg.png" alt="28-2"></p><p>因為我們要在post請求帶入參數，這邊將請求URL的宣告直接放到實作裡面<br>這樣在創建的同時也會帶入參數</p><p><img src="https://i.imgur.com/tiDcUkk.png" alt="28-3"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">exports</span>.postUserPower = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">bodyData, callback</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> userPowerPost = &#123;<br>        <span class="hljs-string">&#x27;method&#x27;</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>        <span class="hljs-string">&#x27;url&#x27;</span>: auth.Gas.Post.UserPower,<br>        <span class="hljs-string">&#x27;headers&#x27;</span>: &#123;&#125;,<br>        <span class="hljs-attr">form</span>: &#123;<br>            <span class="hljs-string">&#x27;userID&#x27;</span>: bodyData[<span class="hljs-number">0</span>],<br>            <span class="hljs-string">&#x27;userName&#x27;</span>: bodyData[<span class="hljs-number">1</span>],<br>            <span class="hljs-string">&#x27;Joins&#x27;</span>: bodyData[<span class="hljs-number">2</span>],<br>            <span class="hljs-string">&#x27;IsAdmin&#x27;</span>: bodyData[<span class="hljs-number">3</span>]<br>        &#125;<br>    &#125;;<br>    request(userPowerPost, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error, response</span>) </span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">if</span> (error) &#123;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;postUserPowerError1&#x27;</span>, error);<br>                callback(<span class="hljs-literal">false</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                callback(<span class="hljs-literal">true</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;postUserPowerError2&#x27;</span>, err);<br>            callback(<span class="hljs-literal">false</span>);<br>        &#125;<br>    &#125;);<br>&#125;;<br></code></pre></td></tr></table></figure><p>在全域變數(最上方)新增這四個東西</p><p><img src="https://i.imgur.com/qJhS30L.png" alt="28-4"></p><p>在子類方法(最下方)加入初始化方法</p><p><img src="https://i.imgur.com/bSFGj1I.png" alt="28-5"></p><p>在onMessage中間加入續行方法入口</p><p><img src="https://i.imgur.com/4NE1BQC.png" alt="28-6"></p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gml"><span class="hljs-comment">//續行方法</span><br><span class="hljs-keyword">if</span> (nowDoFunction &amp;&amp; msg.author.<span class="hljs-symbol">id</span> === DoUserID) &#123;<br>    nowDoFunction(msg);<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>在tag系統入口加入addUser</p><p><img src="https://i.imgur.com/66thUHz.png" alt="28-7"></p><p>實例addUserFunction</p><p><img src="https://i.imgur.com/Fxh4bSy.png" alt="28-8"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//將xxx加入身分組</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addUserFunction</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (DoUserID === <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>            nowDoFunction = addUserFunctionNow;<br>            DoUserID = msg.author.id;<br>            DoData = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>;<br>            msg.channel.send(<span class="hljs-string">&#x27;請輸入要加入的使用者id&#x27;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            msg.channel.send(<span class="hljs-string">&#x27;有其他人正在使用續行中，請稍等&#x27;</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;addUserFunctionError&#x27;</span>, err);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>實例addUserFunctionNow(續行方法)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//將xxx加入身份組(續行方法)</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addUserFunctionNow</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">switch</span> (DoingCount) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//加入使用者id</span><br>                DoData.push(msg.author.username); <span class="hljs-comment">//加入申請者名字</span><br>                msg.channel.send(<span class="hljs-string">`請輸入要加入的群組`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//加入群組</span><br>                DoData.push(<span class="hljs-literal">false</span>); <span class="hljs-comment">//IsAdmin預設False不可修改</span><br>                msg.channel.send(<span class="hljs-string">`申請資料如下:\n申請人 &lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;\n使用者 &lt;@<span class="hljs-subst">$&#123;DoData[<span class="hljs-number">0</span>]&#125;</span>&gt;\n加入權限組 <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">2</span>]&#125;</span>\n正確 Y / 錯誤 N`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;Y&#x27;</span>) &#123;<br>                    msg.channel.send(<span class="hljs-string">&#x27;已確認，輸入資料中...&#x27;</span>);<br>                    <span class="hljs-comment">//與舊資料比對，已有此人資料變進行更新</span><br>                    CheckID(msg, <span class="hljs-literal">null</span>, EditOldUserPower, DoData[<span class="hljs-number">0</span>]);<br>                    GetGas.postUserPower(DoData, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                        <span class="hljs-keyword">if</span> (dataED) &#123;<br>                            <span class="hljs-comment">//bot內變數不會更新，手動更新</span><br>                            UserPowerData.unshift(&#123;<br>                                <span class="hljs-string">&#x27;userID&#x27;</span>: DoData[<span class="hljs-number">0</span>],<br>                                <span class="hljs-string">&#x27;userName&#x27;</span>: DoData[<span class="hljs-number">1</span>],<br>                                <span class="hljs-string">&#x27;Joins&#x27;</span>: DoData[<span class="hljs-number">2</span>],<br>                                <span class="hljs-string">&#x27;IsAdmin&#x27;</span>: DoData[<span class="hljs-number">3</span>]<br>                            &#125;);<br>                            msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            msg.channel.send(<span class="hljs-string">&#x27;資料輸入失敗，請重新嘗試&#x27;</span>);<br>                        &#125;<br>                        CloseAllDoingFunction();<br>                    &#125;);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;已取消行為，請重新下達指令&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    DoingCount--;<br>                    msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入Y/N來選擇&#x27;</span>);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (DoUserID !== <span class="hljs-string">&#x27;&#x27;</span>) DoingCount++;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        CloseAllDoingFunction();<br>        client.channels.fetch(msg.channel.id).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;發生意外錯誤，中斷指令行為，請重新下達指令!&#x27;</span>))<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;addUserFunctionNowError&#x27;</span>, err);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>微調CheckID與CheckParty<br>將userID的取值獨立，將admin判斷拉到CheckParty</p><p><img src="https://i.imgur.com/EFqmBqa.png" alt="28-9"></p><p><img src="https://i.imgur.com/6Oos50b.png" alt="28-10"></p><p>實例EditOldUserPower</p><p><img src="https://i.imgur.com/0HXohq7.png" alt="28-11"></p><hr><h1 id="測試環節"><a href="#測試環節" class="headerlink" title="測試環節"></a>測試環節</h1><p><img src="https://i.imgur.com/HWloU7g.png" alt="28-12"></p><p><img src="https://i.imgur.com/dJplXOG.png" alt="28-13"></p><p><img src="https://i.imgur.com/ppMXmB4.png" alt="28-14"> </p><p><img src="https://i.imgur.com/EO9pkZt.png" alt="28-15"></p><p>完成</p><p>因為今天有修改到Day26的東西，這可能導致教學有點雜亂<br>底下附上tag系統目前的程式碼，當作彌補</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//#region tag系統</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">TagFunction</span>(<span class="hljs-params">msg, tempPrefix</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> cmd = msg.content.substring(prefix[tempPrefix].Value.length).split(<span class="hljs-string">&#x27; &#x27;</span>); <span class="hljs-comment">//以空白分割前綴以後的字串</span><br><br>    <span class="hljs-keyword">switch</span> (cmd[<span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;addUser&#x27;</span>: <span class="hljs-comment">//將使用者加入身份組</span><br>            addUserFunction(msg);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>: <span class="hljs-comment">//身份組ID</span><br>            CheckID(msg, cmd, CheckParty, msg.author.id);<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//判斷此人有沒有登記資料</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckID</span>(<span class="hljs-params">msg, cmd, OtherFunction, userID</span>) </span>&#123;<br>    <span class="hljs-keyword">const</span> haveUserData = UserPowerData.find(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> element.userID == userID;<br>    &#125;)<br><br>    <span class="hljs-keyword">if</span> (haveUserData !== <span class="hljs-literal">undefined</span>) &#123;<br>        <span class="hljs-comment">//有資料</span><br>        <span class="hljs-keyword">return</span> OtherFunction(msg, cmd, haveUserData);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//根據UserPower獲得Party</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckParty</span>(<span class="hljs-params">msg, cmd, haveUserData</span>) </span>&#123;<br><br>    <span class="hljs-keyword">if</span> (haveUserData.IsAdmin) &#123;<br>        <span class="hljs-comment">//是管理員，直接做後續事情</span><br>        <span class="hljs-keyword">return</span> SendTagMessage(msg, <span class="hljs-string">`&lt;@&amp;<span class="hljs-subst">$&#123;cmd[<span class="hljs-number">1</span>]&#125;</span>&gt;\n來自管理員&lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;的指令呼叫`</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">let</span> havePartyPower;<br>    havePartyPower = PartyPowerData.filter(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (haveUserData.Joins[i].indexOf(element.ID) != -<span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span> element.Power.indexOf(cmd[<span class="hljs-number">1</span>]) != -<span class="hljs-number">1</span><br>        &#125;<br>    &#125;)<br><br>    <span class="hljs-keyword">if</span> (isEmptyObject(havePartyPower)) &#123;<br>        SendTagMessage(msg, <span class="hljs-string">&#x27;無權限，請確認參數是否正確&#x27;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        SendTagMessage(msg, <span class="hljs-string">`&lt;@&amp;<span class="hljs-subst">$&#123;cmd[<span class="hljs-number">1</span>]&#125;</span>&gt;\n來自&lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;的指令呼叫`</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//傳送訊息單獨實例</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">SendTagMessage</span>(<span class="hljs-params">msg, data</span>) </span>&#123;<br>    msg.channel.send(data);<br>&#125;<br><br><span class="hljs-comment">//將xxx加入身分組</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addUserFunction</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (DoUserID === <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br>            nowDoFunction = addUserFunctionNow;<br>            DoUserID = msg.author.id;<br>            DoData = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>;<br>            msg.channel.send(<span class="hljs-string">&#x27;請輸入要加入的使用者id&#x27;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            msg.channel.send(<span class="hljs-string">&#x27;有其他人正在使用續行中，請稍等&#x27;</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;addUserFunctionError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//將xxx加入身份組(續行方法)</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addUserFunctionNow</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">switch</span> (DoingCount) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//加入使用者id</span><br>                DoData.push(msg.author.username); <span class="hljs-comment">//加入申請者名字</span><br>                msg.channel.send(<span class="hljs-string">`請輸入要加入的群組`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                DoData.push(msg.content); <span class="hljs-comment">//加入群組</span><br>                DoData.push(<span class="hljs-literal">false</span>); <span class="hljs-comment">//IsAdmin預設False不可修改</span><br>                msg.channel.send(<span class="hljs-string">`申請資料如下:\n申請人 &lt;@<span class="hljs-subst">$&#123;msg.author.id&#125;</span>&gt;\n使用者 &lt;@<span class="hljs-subst">$&#123;DoData[<span class="hljs-number">0</span>]&#125;</span>&gt;\n加入權限組 <span class="hljs-subst">$&#123;DoData[<span class="hljs-number">2</span>]&#125;</span>\n正確 Y / 錯誤 N`</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;Y&#x27;</span>) &#123;<br>                    msg.channel.send(<span class="hljs-string">&#x27;已確認，輸入資料中...&#x27;</span>);<br>                    <span class="hljs-comment">//與舊資料比對，已有此人資料變進行更新</span><br>                    CheckID(msg, <span class="hljs-literal">null</span>, EditOldUserPower, DoData[<span class="hljs-number">0</span>]);<br>                    GetGas.postUserPower(DoData, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">dataED</span>) </span>&#123;<br>                        <span class="hljs-keyword">if</span> (dataED) &#123;<br>                            <span class="hljs-comment">//bot內變數不會更新，手動更新</span><br>                            UserPowerData.unshift(&#123;<br>                                <span class="hljs-string">&#x27;userID&#x27;</span>: DoData[<span class="hljs-number">0</span>],<br>                                <span class="hljs-string">&#x27;userName&#x27;</span>: DoData[<span class="hljs-number">1</span>],<br>                                <span class="hljs-string">&#x27;Joins&#x27;</span>: DoData[<span class="hljs-number">2</span>],<br>                                <span class="hljs-string">&#x27;IsAdmin&#x27;</span>: DoData[<span class="hljs-number">3</span>]<br>                            &#125;);<br>                            msg.channel.send(<span class="hljs-string">&#x27;輸入完畢!&#x27;</span>);<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            msg.channel.send(<span class="hljs-string">&#x27;資料輸入失敗，請重新嘗試&#x27;</span>);<br>                        &#125;<br>                        CloseAllDoingFunction();<br>                    &#125;);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;N&#x27;</span>) &#123;<br>                    CloseAllDoingFunction();<br>                    msg.channel.send(<span class="hljs-string">&#x27;已取消行為，請重新下達指令&#x27;</span>)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    DoingCount--;<br>                    msg.channel.send(<span class="hljs-string">&#x27;無法辨識訊息，請輸入Y/N來選擇&#x27;</span>);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (DoUserID !== <span class="hljs-string">&#x27;&#x27;</span>) DoingCount++;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        CloseAllDoingFunction();<br>        client.channels.fetch(msg.channel.id).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;發生意外錯誤，中斷指令行為，請重新下達指令!&#x27;</span>))<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;addUserFunctionNowError&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//用戶舊資料更新</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">EditOldUserPower</span>(<span class="hljs-params">msg, cmd, haveUserData</span>) </span>&#123;<br>    <span class="hljs-comment">//二次確認</span><br>    <span class="hljs-keyword">if</span> (DoData[<span class="hljs-number">0</span>] == haveUserData.userID) &#123;<br>        DoData[<span class="hljs-number">2</span>] = haveUserData.Joins + <span class="hljs-string">&#x27;;&#x27;</span> + DoData[<span class="hljs-number">2</span>];<br>        DoData[<span class="hljs-number">3</span>] = haveUserData.IsAdmin;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><span class="hljs-comment">//#endregion</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day27 - tag控管 - 續行方法解說</title>
    <link href="/2020/09/27/12thDay27/"/>
    <url>/2020/09/27/12thDay27/</url>
    
    <content type="html"><![CDATA[<p>昨天我們實作了tag身份組功能<br>使用者透過機器人tag一整個身份組的功能<br>我們希望還可以有</p><ul><li>創建身分組的指令</li><li>將使用者加入身份組指令</li><li>刪除身分組的指令</li><li>將使用者從某個身份組中刪除的指令</li></ul><p>這些功能與以往的做法不同<br>API會從原本的Get改成使用Post方法<br>bot程序會需要用到續行方法，來彌補當前機器人框架無法實現的功能</p><h1 id="續行方法"><a href="#續行方法" class="headerlink" title="續行方法"></a>續行方法</h1><p>程式上並沒有這種寫法的稱呼，只是在當前框架下，我給這個寫法的一種叫法而已</p><p>目前我們機器人指令的呼叫方式基本模式是</p><p>前綴字 + 指令 + 間隔符 + 參數(如果有)</p><p>如果前綴字沒有匹配，就對資料庫做判斷，是否有相同觸發字來自動回應(卡米狗模式)</p><p>這種做法會面臨到一個問題，指令都是在一行內完成的</p><p>如果希望先下達指令，等待機器人給予回饋，再繼續輸入指令呢?</p><p>沒錯，使用者的操作會變得相對複雜<br>假設一個指令叫做 !AFK ，然後要輸入三次且三次的參數都正確，機器人才會醒來<br>那使用者就要連續輸入三次</p><p>!AFK 1<br>!AFK 2<br>!AFK 3</p><p>而不是</p><p>!AFK<br>1<br>2<br>3</p><p>讓使用者不斷重複的輸入指令顯然不是我們希望的</p><p>因此我們會需要使用續行，讓BOT觸發到特定指令後，綁定此用戶進行接下來的行為</p><p>明天我們會實作postAPI，以及將 將使用者加入特定身分組的功能 寫好<br>如果篇幅足夠會再講 將使用者從某個身份組中刪除</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day26 - tag控管機制(1)</title>
    <link href="/2020/09/26/12thDay26/"/>
    <url>/2020/09/26/12thDay26/</url>
    
    <content type="html"><![CDATA[<p>昨天我們描繪了權限系統的架構，今天來建立身份組環境</p><p>打開我們之前的試算表，新增兩個table</p><p><img src="https://i.imgur.com/uoHRTQ9.png" alt="26-1"></p><p>UserPower<br>代表成員table</p><p>userID<br>discord的userID，主要用來辨識訊息方是否是此用戶</p><p>userName<br>用處一樣不大，給人看的</p><p>Joins<br>表示此用戶有哪些身份組的權限，筆者打算之後把所有身份都寫在這欄，用分號來做區隔</p><p>IsAdmin<br>管理員開關，開啟後不做任何身份組判斷，可以使用任何功能</p><p>下圖中，筆者的userID有E有+的，這是Excel自動給予的格式，可以在左上角看到實際數值，讀取時仍然是讀取165753385385984000，不用修改</p><p><img src="https://i.imgur.com/2ilbHq9.png" alt="26-2"></p><p>PartyPower<br>代表身份組table</p><p>ID<br>該身份組的ID，使用者透過這個ID來判斷自己有哪些權限</p><p>type<br>代表這個身份組的類型<br>目前暫定1是禁言類身份組，2是tag權限身份組</p><p>Power<br>代表實際可行駛的權限，會根據type的不同有不同的含意<br>在tag權限下，Power帶入tagID，代表可以行使此tag<br>這邊帶入Power的是身份組ID</p><p><img src="https://i.imgur.com/uNgxfC1.png" alt="26-3"></p><p>教一下手動獲取身份組ID</p><p>把人點開，對身份組右鍵</p><p><img src="https://i.imgur.com/Z2t6akk.png" alt="26-4"></p><p>或是先拉出tag，然後在tag前方加上一個反斜線</p><p><img src="https://i.imgur.com/vtlv8pE.png" alt="26-5"></p><p><img src="https://i.imgur.com/tlpvlge.png" alt="26-6"></p><p>如果以上操作遇到問題，甚至是UserID也抓不到<br>可以看一下<a href="https://support.discord.com/hc/zh-tw/articles/206346498-%E6%88%91%E5%9C%A8%E5%93%AA%E8%A3%A1%E5%8F%AF%E4%BB%A5%E6%89%BE%E5%88%B0%E6%88%91%E7%9A%84%E7%94%A8%E6%88%B6-%E6%9C%8D%E5%8B%99%E5%99%A8-%E6%B6%88%E6%81%AFID-">這篇文章</a></p><p>或是找找怎麼開啟Discord的開發者模式</p><hr><p>再來我們要新增兩個GAS檔案</p><p><img src="https://i.imgur.com/L7WOiyD.png" alt="26-7"></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">function</span> <span class="hljs-keyword">do</span><span class="hljs-constructor">Get(<span class="hljs-params">e</span>)</span> &#123;<br>  var id = &#x27;你的ID&#x27;; <span class="hljs-comment">//抓取表單</span><br>  var spreadsheet = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">SpreadsheetApp</span>.</span></span><span class="hljs-keyword">open</span><span class="hljs-constructor">ById(<span class="hljs-params">id</span>)</span>; <span class="hljs-comment">// Sheet id</span><br>  var sheet = spreadsheet.get<span class="hljs-constructor">SheetByName(<span class="hljs-string">&quot;UserPower&quot;</span>)</span>; <span class="hljs-comment">// 根據表格名稱取表</span><br>  var rowLength = sheet.get<span class="hljs-constructor">LastRow()</span>-<span class="hljs-number">1</span>; <span class="hljs-comment">//取行長度</span><br>  var columnLength = sheet.get<span class="hljs-constructor">LastColumn()</span>; <span class="hljs-comment">//取列長度</span><br>  var data = sheet.get<span class="hljs-constructor">Range(2,1,<span class="hljs-params">rowLength</span>,<span class="hljs-params">columnLength</span>)</span>.get<span class="hljs-constructor">Values()</span>; <span class="hljs-comment">// 取得的資料</span><br>  <br>  var dataExport = <span class="hljs-literal">[]</span>;<br>  <br>  <span class="hljs-keyword">for</span>(i <span class="hljs-keyword">in</span> data)&#123;<br>    <span class="hljs-keyword">if</span>(data<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span><span class="hljs-literal">[<span class="hljs-number">0</span>]</span> != <span class="hljs-string">&quot;&quot;</span>)&#123;<br>    dataExport<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span> = &#123;<br>      userID:     data<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span><span class="hljs-literal">[<span class="hljs-number">0</span>]</span>,<br>      userName:   data<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span><span class="hljs-literal">[<span class="hljs-number">1</span>]</span>,<br>      Joins:   data<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span><span class="hljs-literal">[<span class="hljs-number">2</span>]</span>,<br>      IsAdmin: data<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span><span class="hljs-literal">[<span class="hljs-number">3</span>]</span><br>      &#125;<br>    &#125;<br>  &#125;<br>  <br>  <br>  var dataExportFormat = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>stringify(dataExport);<br>  return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ContentService</span>.</span></span>create<span class="hljs-constructor">TextOutput(<span class="hljs-params">dataExportFormat</span>)</span>.set<span class="hljs-constructor">MimeType(ContentService.MimeType.JSON)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/7P09NvS.png" alt="26-8"></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">function</span> <span class="hljs-keyword">do</span><span class="hljs-constructor">Get(<span class="hljs-params">e</span>)</span> &#123;<br>  var id = &#x27;你的ID&#x27;; <span class="hljs-comment">//抓取表單</span><br>  var spreadsheet = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">SpreadsheetApp</span>.</span></span><span class="hljs-keyword">open</span><span class="hljs-constructor">ById(<span class="hljs-params">id</span>)</span>; <span class="hljs-comment">// Sheet id</span><br>  var sheet = spreadsheet.get<span class="hljs-constructor">SheetByName(<span class="hljs-string">&quot;PartyPower&quot;</span>)</span>; <span class="hljs-comment">// 根據表格名稱取表</span><br>  var rowLength = sheet.get<span class="hljs-constructor">LastRow()</span>-<span class="hljs-number">1</span>; <span class="hljs-comment">//取行長度</span><br>  var columnLength = sheet.get<span class="hljs-constructor">LastColumn()</span>; <span class="hljs-comment">//取列長度</span><br>  var data = sheet.get<span class="hljs-constructor">Range(2,1,<span class="hljs-params">rowLength</span>,<span class="hljs-params">columnLength</span>)</span>.get<span class="hljs-constructor">Values()</span>; <span class="hljs-comment">// 取得的資料</span><br>  <br>  var dataExport = <span class="hljs-literal">[]</span>;<br>  <br>  <span class="hljs-keyword">for</span>(i <span class="hljs-keyword">in</span> data)&#123;<br>    <span class="hljs-keyword">if</span>(data<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span><span class="hljs-literal">[<span class="hljs-number">0</span>]</span> != <span class="hljs-string">&quot;&quot;</span>)&#123;<br>    dataExport<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span> = &#123;<br>      ID:     data<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span><span class="hljs-literal">[<span class="hljs-number">0</span>]</span>,<br>      <span class="hljs-keyword">type</span>:   data<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span><span class="hljs-literal">[<span class="hljs-number">1</span>]</span>,<br>      Power:   data<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span><span class="hljs-literal">[<span class="hljs-number">2</span>]</span><br>      &#125;<br>    &#125;<br>  &#125;<br>  <br>  <br>  var dataExportFormat = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>stringify(dataExport);<br>  return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ContentService</span>.</span></span>create<span class="hljs-constructor">TextOutput(<span class="hljs-params">dataExportFormat</span>)</span>.set<span class="hljs-constructor">MimeType(ContentService.MimeType.JSON)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>記得都要存檔後，發佈成網路應用，獲取URL</p><p><img src="https://i.imgur.com/iohSLWG.png" alt="26-9"></p><p>(之前示範JSONArray的[]，可以拿掉)<br>跟baseExcel一樣，我們會希望bot在啟動時就把表都讀取進來，從雲端下載成本地db的感覺，順便做資料二次處理</p><p><img src="https://i.imgur.com/s3bibHM.png" alt="26-10"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs routeros">const userPower = &#123;<br>    <span class="hljs-string">&#x27;method&#x27;</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>    <span class="hljs-string">&#x27;url&#x27;</span>: auth.Gas.<span class="hljs-builtin-name">Get</span>[0].UserPower,<br>    <span class="hljs-string">&#x27;headers&#x27;</span>: &#123;&#125;<br>&#125;;<br><br>const partyPower = &#123;<br>    <span class="hljs-string">&#x27;method&#x27;</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>    <span class="hljs-string">&#x27;url&#x27;</span>: auth.Gas.<span class="hljs-builtin-name">Get</span>[0].PartyPower,<br>    <span class="hljs-string">&#x27;headers&#x27;</span>: &#123;&#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/hykI0wE.png" alt="26-11"></p><p><img src="https://i.imgur.com/2K8yobJ.png" alt="26-12"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">exports</span>.getUserPower = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">callback</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> backValue = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>;<br>    request(userPower, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error, response</span>) </span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">if</span> (error) &#123;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;getUserPowerError1&#x27;</span>, error);<br>                callback(<span class="hljs-literal">false</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">const</span> data = <span class="hljs-built_in">JSON</span>.parse(response.body); <span class="hljs-comment">//接收回傳(response)的body</span><br>                <span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> data) &#123;<br>                    backValue.push(data[i]);<br>                    backValue[i].Joins = backValue[i].Joins.split(<span class="hljs-string">&#x27;;&#x27;</span>);<br>                &#125;<br>                callback(backValue);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;getUserPowerError2&#x27;</span>, err);<br>            callback(<span class="hljs-literal">false</span>);<br>        &#125;<br>    &#125;);<br>&#125;;<br><br><span class="hljs-built_in">exports</span>.getPartyPower = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">callback</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> backValue = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>;<br>    request(partyPower, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error, response</span>) </span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">if</span> (error) &#123;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;getPartyPowerError1&#x27;</span>, error);<br>                callback(<span class="hljs-literal">false</span>);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">const</span> data = <span class="hljs-built_in">JSON</span>.parse(response.body); <span class="hljs-comment">//接收回傳(response)的body</span><br>                <span class="hljs-keyword">for</span> (i <span class="hljs-keyword">in</span> data) &#123;<br>                    backValue.push(data[i]);<br>                    backValue[i].Power = backValue[i].Power.split(<span class="hljs-string">&#x27;;&#x27;</span>);<br>                &#125;<br>                callback(backValue);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;getPartyPowerError2&#x27;</span>, err);<br>            callback(<span class="hljs-literal">false</span>);<br>        &#125;<br>    &#125;);<br>&#125;;<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/PEI3XAU.png" alt="26-13"></p><p>(開始變成callback地獄了)</p><p>資料都接到也處理好了，再來要用這些資料實作功能</p><p>增加指令列表的一個新系統</p><p><img src="https://i.imgur.com/8g2yKAQ.png" alt="26-14"></p><p>在message事件新增入口</p><p><img src="https://i.imgur.com/5k6UBOp.png" alt="26-15"></p><p>然後做出實際功能</p><p><img src="https://i.imgur.com/f4FEeTh.png" alt="26-16"></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">//#region tag系統</span><br><span class="hljs-keyword">function</span> <span class="hljs-constructor">TagFunction(<span class="hljs-params">msg</span>, <span class="hljs-params">tempPrefix</span>)</span> &#123;<br>    const cmd = msg.content.substring(prefix<span class="hljs-literal">[<span class="hljs-identifier">tempPrefix</span>]</span>.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Value</span>.</span></span>length).split(<span class="hljs-character">&#x27; &#x27;</span>); <span class="hljs-comment">//以空白分割前綴以後的字串</span><br><br>    switch (cmd<span class="hljs-literal">[<span class="hljs-number">0</span>]</span>) &#123;<br>        case &#x27;其餘指令&#x27;:<br>            break;<br>        default: <span class="hljs-comment">//身份組ID</span><br>            <span class="hljs-constructor">CheckID(<span class="hljs-params">msg</span>, <span class="hljs-params">cmd</span>, CheckParty)</span>;<br>            break;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//判斷此人有沒有登記資料</span><br><span class="hljs-keyword">function</span> <span class="hljs-constructor">CheckID(<span class="hljs-params">msg</span>, <span class="hljs-params">cmd</span>, OtherFunction)</span> &#123;<br>    const haveUserData = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">UserPowerData</span>.</span></span>find(element =&gt; &#123;<br>        return element.userID<span class="hljs-operator"> == </span>msg.author.id;<br>    &#125;)<br><br>    <span class="hljs-keyword">if</span> (haveUserData !== undefined) &#123;<br>        <span class="hljs-comment">//有資料</span><br>        <span class="hljs-keyword">if</span> (haveUserData.IsAdmin) &#123;<br>            <span class="hljs-comment">//是管理員，直接做後續事情</span><br>            return <span class="hljs-constructor">SendTagMessage(<span class="hljs-params">msg</span>, `&lt;@&amp;$&#123;<span class="hljs-params">cmd</span>[1]&#125;&gt;\<span class="hljs-params">n</span>來自管理員&lt;@$&#123;<span class="hljs-params">msg</span>.<span class="hljs-params">author</span>.<span class="hljs-params">id</span>&#125;&gt;的指令呼叫`)</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">//不是管理員，先看有甚麼群組</span><br>            return <span class="hljs-constructor">OtherFunction(<span class="hljs-params">msg</span>, <span class="hljs-params">cmd</span>, <span class="hljs-params">haveUserData</span>)</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//根據UserPower獲得Party</span><br><span class="hljs-keyword">function</span> <span class="hljs-constructor">CheckParty(<span class="hljs-params">msg</span>, <span class="hljs-params">cmd</span>, <span class="hljs-params">haveUserData</span>)</span> &#123;<br>    <span class="hljs-keyword">let</span> havePartyPower;<br>    havePartyPower = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">PartyPowerData</span>.</span></span>filter(element =&gt; &#123;<br>        <span class="hljs-keyword">if</span> (haveUserData.Joins<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.index<span class="hljs-constructor">Of(<span class="hljs-params">element</span>.ID)</span> != -<span class="hljs-number">1</span>) &#123;<br>            return element.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Power</span>.</span></span>index<span class="hljs-constructor">Of(<span class="hljs-params">cmd</span>[1])</span> != -<span class="hljs-number">1</span><br>        &#125;<br>    &#125;)<br><br>    <span class="hljs-keyword">if</span> (is<span class="hljs-constructor">EmptyObject(<span class="hljs-params">havePartyPower</span>)</span>) &#123;<br>        <span class="hljs-constructor">SendTagMessage(<span class="hljs-params">msg</span>, &#x27;無權限，請確認參數是否正確&#x27;)</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-constructor">SendTagMessage(<span class="hljs-params">msg</span>, `&lt;@&amp;$&#123;<span class="hljs-params">cmd</span>[1]&#125;&gt;\<span class="hljs-params">n</span>來自&lt;@$&#123;<span class="hljs-params">msg</span>.<span class="hljs-params">author</span>.<span class="hljs-params">id</span>&#125;&gt;的指令呼叫`)</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//傳送訊息單獨實例</span><br><span class="hljs-keyword">function</span> <span class="hljs-constructor">SendTagMessage(<span class="hljs-params">msg</span>, <span class="hljs-params">data</span>)</span> &#123;<br>    msg.channel.send(data);<br>&#125;<br></code></pre></td></tr></table></figure><p>最後補個判斷Array是不是空集合的小function</p><p><img src="https://i.imgur.com/LWubzzI.png" alt="26-17"></p><hr><p>大致解說一下</p><p><img src="https://i.imgur.com/I4egiAN.png" alt="26-18"></p><p>Tag系統的入口function<br>跟其他系統一樣，判斷要使用甚麼指令<br>今天先把預設(default)指令，也就是tag身分組做出來</p><p><img src="https://i.imgur.com/leRaRUt.png" alt="26-19"></p><p>檢查UserPower中是否有此人資料，以及是否是管理員<br>如果有資料且不是管理員，繼續檢查其所屬身份組權限</p><p><img src="https://i.imgur.com/5u8N8DC.png" alt="26-20"></p><p>檢查身份組中是否有權限符合這次要tag的對象id，有的話代表此次指令滿足權限，給予tag</p><p>我們跑看看</p><p><img src="https://i.imgur.com/R4VEGBa.png" alt="26-21"></p><p>成功</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day25 - 權限系統規格</title>
    <link href="/2020/09/25/12thDay25/"/>
    <url>/2020/09/25/12thDay25/</url>
    
    <content type="html"><![CDATA[<p>最近在編寫群組權限相關的功能，就說說這個吧</p><p>先說明此功能需求情境:</p><p>群組人數過多，管理層不希望群組人員可以使用 every 或 身分組 或 頻道等會群體呼叫的tag</p><p>但又希望在必要的時候，其他人可以使用此功能</p><p>因此希望將此權限關閉，並且給予機器人此權限<br>透過機器人做二次權限管理，並且對使用人與時間等進行紀錄</p><hr><p>為了完成需求，我們假設機器人權限是admin，我們需要…</p><p>三層身份組<br>群主-&gt;管理員-&gt;自定義身份<br>不是dc的身份組，是寫在機器人內的身份組<br>身分組內有此人id-&gt;可以行使此身份組下所開通的功能<br>例如管理員身份組下的人可以指派新的身份組，此身份組可以使用哪幾種tag<br>要把誰加入身份組等</p><p>指派管理員<br>可以將指定人員加入管理員身份組<br>此指令只有群主身份組可以行使</p><p>創建新身份組<br>創建自定義的身份組，會給予一組id，後續此id代表身份組</p><p>修改身份組名稱<br>修改身份組名稱，便於管理，參數需帶入身份組id</p><p>新增身份組可tag內容<br>新增身份組內可以tag的類型，參數需帶入身份組id與要tag內容的id</p><p>刪除身分組可tag內容<br>同上</p><p>新增身份組成員<br>將群組成員加入身份組，參數帶入身份組id與成員id</p><p>刪除身份組成員<br>同上</p><p>使用tag<br>透過bot tag指定id，參數需帶入tagID，可額外帶入要說的話</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day24 - 愛麗絲安靜!</title>
    <link href="/2020/09/24/12thDay24/"/>
    <url>/2020/09/24/12thDay24/</url>
    
    <content type="html"><![CDATA[<p>今天想教怎麼讓機器人安靜/啟動<br>這樣才能說之後想教的東西</p><h1 id="情境描述"><a href="#情境描述" class="headerlink" title="情境描述"></a>情境描述</h1><p>機器人需要有個控制是否啟動的開關<br>可設定在該群組 or 頻道是否可以接收指令</p><p>因為我們的機器人會有多組系統(文字回答&amp;音樂系統)<br>會希望再額外設定可以在指定的群組 or 頻道是否可以接收特定系統的指令</p><h1 id="實作開始"><a href="#實作開始" class="headerlink" title="實作開始"></a>實作開始</h1><p>首先請先幫我新建一個JSON檔案，叫做shup.json…或是你喜歡的名字xD</p><p><img src="https://i.imgur.com/A3FgZSp.png" alt="24-1"></p><p>記得JSON檔案都要放在JSONHome喔</p><p>type<br>型態，代表這一筆JSONObject是甚麼類型<br>目前還用不到，都設1就好</p><p>GroupID<br>群組ID，主要給後續判定的部份</p><p>GroupName<br>群組名稱，用處不大、主要給使用者好分辨的</p><p>Power<br>代表不可使用的權限，後面會一邊寫一邊解說</p><p>禁言指令，顧名思義、希望機器人是否被禁言的開關<br>這開關需要放在所有指令之前，這樣才可以判斷出內容是否需要被禁止</p><p>老樣子，我們要先引入json</p><p><img src="https://i.imgur.com/P7TjmyD.png" alt="24-2"></p><p>放在message事件的上方，當判斷權限為false，就停止後續行為</p><p><img src="https://i.imgur.com/Ijtpyyk.png" alt="24-3"></p><p>接著我們實作IsShut<br>IsShut根據shup.json，先判斷訊息群組&amp;訊息有沒有資料，再來判斷資料中存不存在tempPrefix，存在的話就要禁用功能，因為默認不存在時文檔中不會有資料，自然就不該設限</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">//禁言系統判斷</span><br><span class="hljs-keyword">function</span> <span class="hljs-constructor">IsShut(<span class="hljs-params">msg</span>, <span class="hljs-params">tempPrefix</span>)</span> &#123;<br>    <span class="hljs-comment">//群組id</span><br>    const guildID = msg.guild.id;<br>    <span class="hljs-comment">//頻道id</span><br>    const channelID = msg.channel.id;<br>    <span class="hljs-comment">//當前狀態</span><br>    <span class="hljs-keyword">let</span> status = <span class="hljs-literal">true</span>;<br><br>    <span class="hljs-comment">//先判斷群組，群組判斷完判斷頻道(頻道權限優先於群組)</span><br>    const guildIF = shup.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Group</span>.</span></span>find(element =&gt; &#123;<br>        <span class="hljs-keyword">if</span> (element.GroupID<span class="hljs-operator"> == </span>guildID) &#123;<br>            return element.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Power</span>.</span></span>index<span class="hljs-constructor">Of(<span class="hljs-params">tempPrefix</span>)</span> !== -<span class="hljs-number">1</span>;<br>        &#125;<br>        return <span class="hljs-literal">false</span>;<br>    &#125;)<br><br>    <span class="hljs-comment">//找到資料 = 此群組存在Group中且Power存在此次指令代碼</span><br>    <span class="hljs-keyword">if</span> (guildIF !== undefined) &#123;<br>        status = <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//頻道</span><br>    const channelIF = shup.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Channel</span>.</span></span>find(element =&gt; &#123;<br>        <span class="hljs-keyword">if</span> (element.ChannelID<span class="hljs-operator"> == </span>channelID) &#123;<br>            return <span class="hljs-literal">true</span>;<br>        &#125;<br>        return <span class="hljs-literal">false</span>;<br>    &#125;)<br><br>    <span class="hljs-comment">//找到資料 = 此頻道存在Channel中</span><br>    <span class="hljs-keyword">if</span> (channelIF !== undefined) &#123;<br>        <span class="hljs-comment">//Power有此資料=&gt;禁用功能 無資料=&gt;不設限</span><br>        <span class="hljs-keyword">if</span> (channelIF.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Power</span>.</span></span>index<span class="hljs-constructor">Of(<span class="hljs-params">tempPrefix</span>)</span> !== -<span class="hljs-number">1</span>) &#123;<br>            status = <span class="hljs-literal">false</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            status = <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br><br>    return status;<br>&#125;<br></code></pre></td></tr></table></figure><p>接著我們將資料實際key入shup.json看看</p><p><img src="https://i.imgur.com/r2YX14O.png" alt="24-4"></p><p>不知道同學有沒有看出Power的判斷依據了?</p><p><img src="https://i.imgur.com/IQw9uKQ.png" alt="24-5"></p><p>沒錯，就是依據prefix時設置的各系統代表ID</p><p>我們試著跑看看</p><p><img src="https://i.imgur.com/fPPlTwE.png" alt="24-6"></p><p>另一個頻道</p><p><img src="https://i.imgur.com/uV9zJ4q.png" alt="24-7"></p><p>大成功~<br>這樣就做到各頻道各功能權限設置了</p><p>不過存在一些問題<br>例如放在預設(default)的資料庫文字比對功能要怎麼判，應該是預設的-1吧<br>如果是-1要怎麼判斷呢?</p><p>以及目前這樣的做法只做到判斷禁言功能的實作，還沒有辦法在前台讓使用者手動新增</p><p>這部份筆者先賣個關子，各位可以嘗試寫看看，明天我們繼續做別的功能，之後再繞回來</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day23 - 音樂系統的歌單批量載入(額外)</title>
    <link href="/2020/09/23/12thDay23/"/>
    <url>/2020/09/23/12thDay23/</url>
    
    <content type="html"><![CDATA[<p>昨天我們把音樂系統的多群組支援做好了<br>今天想講一下怎麼直接導入歌單</p><p>首先請在專案目錄下的終端機安裝</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> ytpl<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Ugc2fg4.png" alt="23-1"> </p><p>安裝完成後，我們打開看package.json</p><p><img src="https://i.imgur.com/BZIUj5U.png" alt="23-2"> </p><p>最後一行出現了ytpl<br>請到這個網站比對ytpl的版本，如果像筆者一樣版本過低的話，請將package.json內的ytpl版本拉高，然後更新一次ytpl<br><a href="https://www.npmjs.com/package/ytpl">https://www.npmjs.com/package/ytpl</a></p><p><img src="https://i.imgur.com/prueQ8r.png" alt="23-3"> </p><p>官方文檔版本1.0.1</p><p><img src="https://i.imgur.com/zDoQ0ox.png" alt="23-4"> </p><p>手動把0.3.0改成1.0.1然後下指令</p><p><img src="https://i.imgur.com/XAAeYn1.png" alt="23-5"> </p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> update ytpl<br></code></pre></td></tr></table></figure><p>這樣就會更新你的ytpl函式庫</p><hr><p>一安裝完就去確認版本是否最新，是因為舊版本的ytpl在抓取歌單資料時十分不穩，甚至有可能直接被yt擋下</p><p>原因不明，但這道理可以套到ytdl-core上，之後同學們有任何問題都可以先更新版本看看</p><hr><p>更新好後，我們在bot.js引用ytpl</p><p><img src="https://i.imgur.com/saOcdBI.png" alt="23-6"> </p><p>在音樂指令底下加入歌單載入功能</p><p><img src="https://i.imgur.com/r8rRLh7.png" alt="23-7">  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//?playList</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">playListMusic</span>(<span class="hljs-params">guildID, msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//沒在音樂廳不能使用此功能</span><br>        <span class="hljs-keyword">if</span> (!client.voice.connections.get(guildID)) &#123;<br>            msg.channel.send(<span class="hljs-string">`請先正常啟用音樂指令後，再使用歌單載入喔`</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-comment">//網址</span><br>        <span class="hljs-keyword">const</span> valueED = msg.content.split(<span class="hljs-string">&#x27; &#x27;</span>);<br>        <span class="hljs-comment">//先用library自帶的方式檢查一次能不能用</span><br>        <span class="hljs-keyword">const</span> canPlay = <span class="hljs-keyword">await</span> ytpl.validateID(valueED[<span class="hljs-number">1</span>]);<br>        <span class="hljs-comment">//讀取到幾首歌，上限默認100首</span><br>        <span class="hljs-keyword">let</span> a = <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">//幾首成功放入歌單</span><br>        <span class="hljs-keyword">let</span> b = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">if</span> (canPlay) &#123;<br>            <span class="hljs-keyword">const</span> listED = <span class="hljs-keyword">await</span> ytpl(valueED[<span class="hljs-number">1</span>]);<br>            <span class="hljs-keyword">await</span> listED.items.forEach(<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">element</span>) </span>&#123;<br>                a = a + <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">if</span> (element.title !== <span class="hljs-string">&#x27;[Deleted video]&#x27;</span>) &#123;<br>                    canPlay2 = <span class="hljs-keyword">await</span> ytdl.validateURL(element.url_simple);<br>                    <span class="hljs-keyword">if</span> (canPlay2) &#123;<br>                        b = b + <span class="hljs-number">1</span>;<br>                        musicList.get(guildID).push(element.url_simple);<br>                    &#125;<br>                &#125;<br>            &#125;);<br>            <span class="hljs-comment">//回傳統計資訊</span><br>            msg.channel.send(<span class="hljs-string">`歌單 <span class="hljs-subst">$&#123;listED.title&#125;</span>\n共載入<span class="hljs-subst">$&#123;b&#125;</span>首歌曲\n<span class="hljs-subst">$&#123;a-b&#125;</span>首載入失敗`</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            msg.channel.send(<span class="hljs-string">`This Url isn&#x27;t working in function.`</span>);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playListMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>由上而下依序說明…</p><p><img src="https://i.imgur.com/06WUq7e.png" alt="23-8"> </p><p>因為歌單功能僅提供將yt歌單放入bot歌單的功能<br>正常使用play指令，不在語音廳的情況下是會直接進入語音廳並開始播放歌曲<br>筆者這邊寫成不能從歌單指令開始播歌</p><p><img src="https://i.imgur.com/v9gRPGn.png" alt="23-9"> </p><p>宣告了四份參數</p><p>valueED<br>第一個單純是使用空白做字串分割，valueED[0]是前綴字+playList<br>valueED[1]則是一格空白後加上網址</p><p>canPlay<br>使用ytpl自帶的檢查語法，會根據帶入的url回傳布林</p><p>a<br>載入迴圈的每一次都會+1，代表著載入幾首歌</p><p>b<br>載入迴圈的每一次，當成功將歌曲加入歌單時+1，表示成功抓取幾首歌</p><p><img src="https://i.imgur.com/dBhEpU2.png" alt="23-10"> </p><p>當canPlay等於ture後，正式查詢歌單並且將資料回傳給listED<br>listED底下有一items為JSONArray，他就是歌單的集合<br>對他使用迴圈，並在迴圈內用ytdl驗證一次網址是否可用<br>驗證全部通過後將歌曲加入該群組歌單<br>最後統計數字</p><hr><p>因為加入批量歌曲載入的緣故，當機器人在列出queueShow時，極有可能回傳大量文字<br>discord單封文字的上限數是2000，我們取1900就好</p><p><img src="https://i.imgur.com/fdzjXHy.png" alt="23-11"> </p><p>都好了後，試著運行看看</p><p><img src="https://i.imgur.com/G0vZbae.png" alt="23-12"> </p><p><img src="https://i.imgur.com/06dEnP9.png" alt="23-13"> </p><p><img src="https://i.imgur.com/qSyICGj.png" alt="23-14"> </p><p>這樣音樂系統也能做到批量載入音樂了<br>其餘還剩一些瑕疵，如歌單功能有限制，歌曲詳細資訊載入偏慢，沒有過濾私人影片還有更多可能的問題等…就讓各位自己嘗試看看吧</p><p>那音樂系統就教到這，我們明天見</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day22 - 音樂系統的多群組化(額外)</title>
    <link href="/2020/09/22/12thDay22/"/>
    <url>/2020/09/22/12thDay22/</url>
    
    <content type="html"><![CDATA[<p>這兩天來把音樂系統教完好了</p><p>目前為止的音樂系統只支援一隻機器人 for 一個群組的模式<br>如果有多群組同時要使用音樂系統，會導致歌單列表共用</p><p>這是因為機器人的系統中，並沒有將群組納入判斷<br>要改起來並不難，但邏輯要清晰</p><p>不知道當時有沒有小夥伴自己搞定這一塊的?我們今天會再帶過</p><p>程式碼是依照之前的進度，不會重頭開始，如果需要但沒有基礎程式碼的話可以回去看音樂系統的教學</p><hr><h1 id="MusicFunction"><a href="#MusicFunction" class="headerlink" title="MusicFunction"></a>MusicFunction</h1><p><img src="https://i.imgur.com/sKuhlfp.png" alt="22-1"></p><p>首先請把宣告成全域變數的兩個參數，初始化都設為Map()</p><p><img src="https://i.imgur.com/KSRmbTG.png" alt="22-2"></p><p>再來我們在音樂指令的入口提取guildID，並且放入每一個function內</p><h1 id="playMusic"><a href="#playMusic" class="headerlink" title="playMusic"></a>playMusic</h1><p><img src="https://i.imgur.com/gax5Dun.png" alt="22-3"></p><p>修改了151,155跟171行<br>(可以根據左側顏色判斷)</p><p>第一次進入語音廳的群組需要先以群組ID宣告一個歌曲列表<br>原本歌曲列表放入資料的方法是這樣</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">musicList.push<span class="hljs-comment">(網址)</span><br></code></pre></td></tr></table></figure><p>現在變成</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">music.<span class="hljs-keyword">get</span>(群組<span class="hljs-built_in">id</span>).push(網址)<br></code></pre></td></tr></table></figure><p>也就是根據群組id提取歌曲列表</p><h1 id="playMusic2"><a href="#playMusic2" class="headerlink" title="playMusic2"></a>playMusic2</h1><p><img src="https://i.imgur.com/MpGvBiu.png" alt="22-4"></p><p>改了185,195,202,204跟206行<br>(可以根據左側顏色判斷)</p><p>原則上都跟剛剛一樣，注意歌曲清單跟播放遙控器應該是一個群組一個而已</p><h1 id="disconnectMusic"><a href="#disconnectMusic" class="headerlink" title="disconnectMusic"></a>disconnectMusic</h1><p><img src="https://i.imgur.com/GHYrwdz.png" alt="22-5"></p><p>修改了222行<br>(可以根據左側顏色判斷)</p><h1 id="replayMusic"><a href="#replayMusic" class="headerlink" title="replayMusic"></a>replayMusic</h1><p><img src="https://i.imgur.com/0noksiD.png" alt="22-6"></p><p>改了235,237與240行<br>(可以根據左側顏色判斷)</p><h1 id="skipMusic"><a href="#skipMusic" class="headerlink" title="skipMusic"></a>skipMusic</h1><p><img src="https://i.imgur.com/j3vClrt.png" alt="22-7"></p><p>只有一行</p><h1 id="nowPlayMusic"><a href="#nowPlayMusic" class="headerlink" title="nowPlayMusic"></a>nowPlayMusic</h1><p><img src="https://i.imgur.com/0mjB6g9.png" alt="22-8"></p><p>修改了253,255跟261行<br>(可以根據左側顏色判斷)</p><p>字串串接部分拿的是已經處理好的參數，所以不用修改streamString</p><h1 id="queueShow"><a href="#queueShow" class="headerlink" title="queueShow"></a>queueShow</h1><p><img src="https://i.imgur.com/6ekTspK.png" alt="22-9"></p><p>修改了291,294跟296行<br>(可以根據左側顏色判斷)</p><hr><p>這樣基本就都改好了，我們試著運行看看</p><p>運行前，因為之前我們已經上傳機器人到heroku上，理論上現在機器人是在運行狀態的<br>這時候如果我們使用node bot，雖然不會有bug，但會造成bot裡面同時有兩隻程序登入，會造成很有趣的現象，各位有興趣可以試試</p><p>那這邊筆者為了繞過這問題，想直接上傳至heroku，這樣就可以只跑一個程序，也剛好介紹怎麼用heroku瀏覽程序歷程</p><h1 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h1><p>我們先回到專案資料夾底下，將.git改名gitHub，然後將gitHeroku改回.git</p><p>回到vsCode，將專案推上heroku</p><p>推完看到Build succeeded後幫我下</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">heroku <span class="hljs-built_in">log</span> -<span class="hljs-built_in">t</span><br></code></pre></td></tr></table></figure><p>之前應該有提到<br>這是觀察專案在heroku上的託管狀態<br>如果我們要透過heroku來直接跑程序，或是之後出問題都是來這邊看error訊息</p><p>開好訊息後，我們試著測試看看機器人是不是真的可以分群播音樂了</p><p><img src="https://i.imgur.com/BMVGiLi.png" alt="22-10"></p><p><img src="https://i.imgur.com/5dS1Qmq.png" alt="22-11"></p><p><img src="https://i.imgur.com/7rysBLk.png" alt="22-12"></p><p><img src="https://i.imgur.com/GdOBJIn.png" alt="22-13"></p><p><img src="https://i.imgur.com/Eu0wFM2.png" alt="22-14"></p><p><img src="https://i.imgur.com/FgMco0X.png" alt="22-15"></p><p><img src="https://i.imgur.com/3J61doA.png" alt="22-16"></p><hr><p>大致如此，我們可以看到，機器人確實在兩個群組收到指令時，不會影響到對方了</p><p>音樂系統的多群組支援教到這<br>明天看看要不要教一些額外的功能，我們明天見</p><h1 id="主程序"><a href="#主程序" class="headerlink" title="主程序"></a>主程序</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//#region 音樂系統</span><br><span class="hljs-comment">//歌曲控制器</span><br><span class="hljs-keyword">let</span> dispatcher = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>();<br><span class="hljs-comment">//歌曲清單</span><br><span class="hljs-keyword">let</span> musicList = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>();<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">MusicFunction</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-comment">//將訊息內的前綴字截斷，後面的字是我們要的</span><br>    <span class="hljs-keyword">const</span> content = msg.content.substring(prefix[<span class="hljs-number">1</span>].Value.length);<br>    <span class="hljs-comment">//指定我們的間隔符號</span><br>    <span class="hljs-keyword">const</span> splitText = <span class="hljs-string">&#x27; &#x27;</span>;<br>    <span class="hljs-comment">//用間隔符號隔開訊息 contents[0] = 指令,contents[1] = 參數</span><br>    <span class="hljs-keyword">const</span> contents = content.split(splitText);<br>    <span class="hljs-comment">//因為會持續使用到，將群組ID獨立成參數</span><br>    <span class="hljs-keyword">const</span> guildID = msg.guild.id;<br><br>    <span class="hljs-keyword">switch</span> (contents[<span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;play&#x27;</span>:<br>            <span class="hljs-comment">//點歌&amp;播放歌曲功能</span><br>            playMusic(guildID, msg, contents);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;replay&#x27;</span>:<br>            <span class="hljs-comment">//重播當前歌曲</span><br>            replayMusic(guildID);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;np&#x27;</span>:<br>            <span class="hljs-comment">//當前歌曲資訊</span><br>            nowPlayMusic(guildID, msg.channel.id);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;queue&#x27;</span>:<br>            <span class="hljs-comment">//歌曲清單</span><br>            queueShow(guildID, msg.channel.id);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;skip&#x27;</span>:<br>            <span class="hljs-comment">//中斷歌曲</span><br>            skipMusic(guildID);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;disconnect&#x27;</span>:<br>            <span class="hljs-comment">//退出語音頻道並且清空歌曲清單</span><br>            disconnectMusic(guildID, msg.channel.id);<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?play</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">playMusic</span>(<span class="hljs-params">guildID, msg, contents</span>) </span>&#123;<br>    <span class="hljs-comment">//定義我們的第一個參數必需是網址</span><br>    <span class="hljs-keyword">const</span> urlED = contents[<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//第一個參數不是連結就要篩選掉</span><br>        <span class="hljs-keyword">if</span> (urlED.substring(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>) !== <span class="hljs-string">&#x27;http&#x27;</span>) <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.1&#x27;</span>);<br><br>        <span class="hljs-comment">//透過library判斷連結是否可運行</span><br>        <span class="hljs-keyword">const</span> validate = <span class="hljs-keyword">await</span> ytdl.validateURL(urlED);<br>        <span class="hljs-keyword">if</span> (!validate) <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.2&#x27;</span>);<br><br>        <span class="hljs-comment">//獲取歌曲資訊</span><br>        <span class="hljs-keyword">const</span> info = <span class="hljs-keyword">await</span> ytdl.getInfo(urlED);<br>        <span class="hljs-comment">//判斷資訊是否正常</span><br>        <span class="hljs-keyword">if</span> (info.videoDetails) &#123;<br>            <span class="hljs-comment">//指令下達者是否在語音頻道</span><br>            <span class="hljs-keyword">if</span> (msg.member.voice.channel) &#123;<br>                <span class="hljs-comment">//判斷bot是否已經連到語音頻道 是:將歌曲加入歌單 不是:進入語音頻道並且播放歌曲</span><br>                <span class="hljs-keyword">if</span> (!client.voice.connections.get(msg.guild.id)) &#123;<br>                    <span class="hljs-comment">//因為是第一次加入，宣告新的歌曲列表</span><br>                    musicList.set(guildID, <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>());<br><br>                    <span class="hljs-comment">//將歌曲加入歌單</span><br>                    musicList.get(guildID).push(urlED);<br>                    <span class="hljs-comment">//進入語音頻道</span><br>                    msg.member.voice.channel.join()<br>                        .then(<span class="hljs-function"><span class="hljs-params">connection</span> =&gt;</span> &#123;<br>                            msg.reply(<span class="hljs-string">&#x27;來了~&#x27;</span>);<br>                            <span class="hljs-comment">//const guildID = msg.guild.id;</span><br>                            <span class="hljs-keyword">const</span> channelID = msg.channel.id;<br>                            <span class="hljs-comment">//播放歌曲</span><br>                            playMusic2(connection, guildID, channelID);<br>                        &#125;)<br>                        .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>                            msg.reply(<span class="hljs-string">&#x27;bot進入語音頻道時發生錯誤，請再試一次&#x27;</span>);<br>                            <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playMusicError2&#x27;</span>);<br>                        &#125;)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-comment">//將歌曲加入歌單</span><br>                    musicList.get(guildID).push(urlED);<br>                    msg.reply(<span class="hljs-string">&#x27;已將歌曲加入歌單!&#x27;</span>);<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;請先進入頻道:3...&#x27;</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.3&#x27;</span>);<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?play 遞迴函式</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">playMusic2</span>(<span class="hljs-params">connection, guildID, channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//播放前歌曲清單不能沒有網址</span><br>        <span class="hljs-keyword">if</span> (musicList.get(guildID).length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">//設定音樂相關參數</span><br>            <span class="hljs-keyword">const</span> streamOptions = &#123;<br>                <span class="hljs-attr">seek</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-attr">volume</span>: <span class="hljs-number">0.5</span>,<br>                <span class="hljs-attr">Bitrate</span>: <span class="hljs-number">192000</span>,<br>                <span class="hljs-attr">Passes</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-attr">highWaterMark</span>: <span class="hljs-number">1</span><br>            &#125;;<br>            <span class="hljs-comment">//讀取清單第一位網址</span><br>            <span class="hljs-keyword">const</span> stream = <span class="hljs-keyword">await</span> ytdl(musicList.get(guildID)[<span class="hljs-number">0</span>], &#123;<br>                <span class="hljs-attr">filter</span>: <span class="hljs-string">&#x27;audioonly&#x27;</span>,<br>                <span class="hljs-attr">quality</span>: <span class="hljs-string">&#x27;highestaudio&#x27;</span>,<br>                <span class="hljs-attr">highWaterMark</span>: <span class="hljs-number">26214400</span> <span class="hljs-comment">//25ms</span><br>            &#125;)<br><br>            <span class="hljs-comment">//播放歌曲，並且存入dispatcher</span><br>            dispatcher.set(guildID, connection.play(stream, streamOptions));<br>            <span class="hljs-comment">//監聽歌曲播放結束事件</span><br>            dispatcher.get(guildID).on(<span class="hljs-string">&quot;finish&quot;</span>, <span class="hljs-function"><span class="hljs-params">finish</span> =&gt;</span> &#123;<br>                <span class="hljs-comment">//將清單中第一首歌清除</span><br>                <span class="hljs-keyword">if</span> (musicList.get(guildID).length &gt; <span class="hljs-number">0</span>) musicList.get(guildID).shift();<br>                <span class="hljs-comment">//播放歌曲</span><br>                playMusic2(connection, guildID, channelID);<br>            &#125;)<br>        &#125; <span class="hljs-keyword">else</span> disconnectMusic(guildID, channelID); <span class="hljs-comment">//清空歌單並且退出語音頻道</span><br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playMusic2Error&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?disconnect</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">disconnectMusic</span>(<span class="hljs-params">guildID, channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//判斷bot是否在此群組的語音頻道</span><br>        <span class="hljs-keyword">if</span> (client.voice.connections.get(guildID)) &#123;<br>            <span class="hljs-comment">//清空歌曲清單</span><br>            musicList.set(guildID, <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>());<br>            <span class="hljs-comment">//退出語音頻道</span><br>            client.voice.connections.get(guildID).disconnect();<br><br>            client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;晚安~&#x27;</span>));<br>        &#125; <span class="hljs-keyword">else</span> client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;可是..我還沒進來:3&#x27;</span>))<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;disconnectMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?replay</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">replayMusic</span>(<span class="hljs-params">guildID</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (musicList.get(guildID).length &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-comment">//把當前曲目再推一個到最前面</span><br>        musicList.get(guildID).unshift(musicList[<span class="hljs-number">0</span>]);<br>        <span class="hljs-comment">//將歌曲關閉，觸發finish事件</span><br>        <span class="hljs-comment">//finish事件將清單第一首歌排出，然後繼續播放下一首</span><br>        <span class="hljs-keyword">if</span> (dispatcher.get(guildID) !== <span class="hljs-literal">undefined</span>) dispatcher.get(guildID).end();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?skip</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">skipMusic</span>(<span class="hljs-params">guildID</span>) </span>&#123;<br>    <span class="hljs-comment">//將歌曲關閉，觸發finish事件</span><br>    <span class="hljs-keyword">if</span> (dispatcher.get(guildID) !== <span class="hljs-literal">undefined</span>) dispatcher.get(guildID).end();<br>&#125;<br><br><span class="hljs-comment">//?np</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">nowPlayMusic</span>(<span class="hljs-params">guildID, channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (dispatcher.get(guildID) !== <span class="hljs-literal">undefined</span> &amp;&amp; musicList.get(guildID).length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">//從連結中獲取歌曲資訊 標題 總長度等</span><br>            <span class="hljs-keyword">const</span> info = <span class="hljs-keyword">await</span> ytdl.getInfo(musicList.get(guildID)[<span class="hljs-number">0</span>]);<br>            <span class="hljs-comment">//歌曲標題</span><br>            <span class="hljs-keyword">const</span> title = info.videoDetails.title;<br>            <span class="hljs-comment">//歌曲全長(s)</span><br>            <span class="hljs-keyword">const</span> songLength = info.videoDetails.lengthSeconds;<br>            <span class="hljs-comment">//當前播放時間(ms)</span><br>            <span class="hljs-keyword">const</span> nowSongLength = <span class="hljs-built_in">Math</span>.floor(dispatcher.get(guildID).streamTime / <span class="hljs-number">1000</span>);<br>            <span class="hljs-comment">//串字串</span><br>            <span class="hljs-keyword">const</span> message = <span class="hljs-string">`<span class="hljs-subst">$&#123;title&#125;</span>\n<span class="hljs-subst">$&#123;streamString(songLength,nowSongLength)&#125;</span>`</span>;<br>            client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(message))<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;nowPlayMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//▬▬▬▬▬▬▬▬▬?▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">streamString</span>(<span class="hljs-params">songLength, nowSongLength</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> mainText = <span class="hljs-string">&#x27;?&#x27;</span>;<br>    <span class="hljs-keyword">const</span> secondText = <span class="hljs-string">&#x27;▬&#x27;</span>;<br>    <span class="hljs-keyword">const</span> whereMain = <span class="hljs-built_in">Math</span>.floor((nowSongLength / songLength) * <span class="hljs-number">100</span>);<br>    <span class="hljs-keyword">let</span> message = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">30</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span> (i * <span class="hljs-number">3.3</span> + <span class="hljs-number">1</span> &gt;= whereMain) &#123;<br>            message = message + mainText;<br>            mainText = secondText;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            message = message + secondText;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> message;<br>&#125;<br><br><span class="hljs-comment">//?queue</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">queueShow</span>(<span class="hljs-params">guildID, channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (musicList.get(guildID).length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">let</span> info;<br>            <span class="hljs-keyword">let</span> message = <span class="hljs-string">&#x27;&#x27;</span>;<br>            <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; musicList.get(guildID).length; i++) &#123;<br>                <span class="hljs-comment">//從連結中獲取歌曲資訊 標題 總長度等</span><br>                info = <span class="hljs-keyword">await</span> ytdl.getInfo(musicList.get(guildID)[i]);<br>                <span class="hljs-comment">//歌曲標題</span><br>                title = info.videoDetails.title;<br>                <span class="hljs-comment">//串字串</span><br>                message = message + <span class="hljs-string">`\n<span class="hljs-subst">$&#123;i+<span class="hljs-number">1</span>&#125;</span>. <span class="hljs-subst">$&#123;title&#125;</span>`</span>;<br>            &#125;<br>            <span class="hljs-comment">//把最前面的\n拿掉</span><br>            message = message.substring(<span class="hljs-number">1</span>, message.length);<br>            client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(message))<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;queueShowError&#x27;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//#endregion</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day21 - 認識GitHub</title>
    <link href="/2020/09/21/12thDay21/"/>
    <url>/2020/09/21/12thDay21/</url>
    
    <content type="html"><![CDATA[<p>今天想先說該怎麼把專案推上github，可以順便複習與heroku配套的git指令</p><p>heroku會用到git是因為heroku推程序這個動作跟github一樣，都是將專案推到網路上某個地方，推到github或heroku的差別而已</p><p>既然如此，heroku理所當然也可以做到跟github一樣的事情<br>那又為什麼還要額外放在github呢?</p><h1 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h1><p><img src="https://i.imgur.com/J0tiaEH.png" alt="21-1"></p><p>GitHub是基於Git語言的開源專案庫<br>他提供任何人將自己的程序打包成專案，透過Git推上GitHub進行開發&amp;版本紀錄<br>GitHub對開源有著良好的圖形介面支持，所有人都可以在GitHub上看到對方的專案，並且提出協作要求、讓多位工程師來協同完成一件專案</p><p>一言以蔽之、將我們的機器人推上GitHub就像是展示你自己的作品，讓所有人都看的到你做過哪些東西，又是何時更新、更新了甚麼，是資訊人要讓人了解自己最快速的一步</p><p>推GitHub專案雖然也要使用Git語言，但因為GitHub是圍繞著Git開發的網站，其對Git語言的支援十分強大，除了網站本身按一按就能把專案推上去以外，他還推出了專案管理的圖形使用者介面</p><h1 id="GitHub-Desktop"><a href="#GitHub-Desktop" class="headerlink" title="GitHub Desktop"></a>GitHub Desktop</h1><p><a href="https://desktop.github.com/">https://desktop.github.com/</a><br>請點擊連結並且下載GitHub Desktop</p><p><img src="https://i.imgur.com/rIGrdAg.png" alt="21-2"></p><p>安裝完開啟後會要求你登入，請直接登入<br>可以選擇亮或暗主題<br>一開始會問你要不要直接新增專案，請拒絕，想辦法進到這個畫面 </p><p><img src="https://i.imgur.com/1YNrkrT.png" alt="21-3"></p><p>點擊左上角，拉出Add下拉框，點開後有個Create new repository</p><p><img src="https://i.imgur.com/ZAwEqcQ.png" alt="21-4"></p><p>這是新增一個新專案，點下去後他會先要你選擇本機上的路徑</p><p><img src="https://i.imgur.com/bj3clLV.png" alt="21-5"></p><p>第一個是資料夾名稱，我們取DiscordBot<br>第二個是專案簡介，可以隨便寫、但注意不要太多，一行就好<br>第三個是路徑，請放在原專案外面<br>Initialize this repository with a README記得打勾<br>下面兩個是使用語言之類的，這部份GitHub上傳後會自動判斷，可以不管</p><p>都好了之後我們按…..不對!還不能按Create repository!<br>我們先進到專案資料夾</p><p><img src="https://i.imgur.com/G02dXTW.png" alt="21-6"></p><p>我們把.git資料夾改名成Herokugit<br>如果看不到.git資料夾請上網查一下怎麼看到隱藏資料夾</p><p><img src="https://i.imgur.com/g4EsJIR.png" alt="21-7"></p><p>好了之後我們回去按Create repository<br>按完會發現資料夾內多了</p><p>README.md<br>.gitattributes<br>.git</p><p><img src="https://i.imgur.com/r8bUU7S.png" alt="21-8"></p><p>記得我們一開始建Heroku有提到嗎，只要是Git專案都會有.git檔案<br>因為使用Heroku的同時，他就是屬於Heroku的專案了，我們如果也要推上GitHub的話，就要先讓他不是Heroku的專案，不然會覆蓋掉!</p><p>然後我們新增一個.gitignore，注意沒有副檔名喔</p><p><img src="https://i.imgur.com/HWtBE6s.png" alt="21-9"></p><p><img src="https://i.imgur.com/JbUJatt.png" alt="21-10"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">auth<span class="hljs-selector-class">.json</span><br><span class="hljs-selector-class">.gitignore</span><br>Herokugit<br></code></pre></td></tr></table></figure><p>這是給GitHub看的文件，可以讓GitHub在將專案commit前，選擇要忽略哪些檔案<br>我們的私密資料都在auth.json，所以auth.json自然不能推到任何人都能看得GitHub上<br>Herokugit是讓GitHub不會上傳到Heroku的.git檔案</p><p><img src="https://i.imgur.com/CeXOZni.png" alt="21-11"></p><p>這時我們回到GitHubDesktop，可以看到左下角告訴你，專案commit好了，並且版號是init(初始化)</p><p>在宣告一個新專案庫時，相當於他幫你下了</p><p>git add .<br>git commit init</p><p>這兩個指令，我們可以點左上角的history看到我們有哪些檔案被commit，只要等等再下push就會被推上網際網路</p><p>那我們點一下右上角的Publish repository</p><p><img src="https://i.imgur.com/8oMDTIu.png" alt="21-12"></p><p>第一次push時會有像這樣的提示框，他會二次確認你在GitHub上的專案要叫甚麼名字</p><p>Keep this code private打勾的話，這個專案就會是私人的，只有你登錄帳號時看的見<br>我們希望程序是可以被人看見的，所以我們要把打勾取消掉</p><p>好了之後我們點Publish repository，他就會開始上傳專案，第一次比較久，我們等一下，可以去到杯水再回來看看</p><p><img src="https://i.imgur.com/2UQueAh.png" alt="21-13"></p><p>畫面長這樣就是成功了，左下角的commit消失(被推上去)</p><p><img src="https://i.imgur.com/RZ42yiU.png" alt="21-14"></p><p>History可以看到我們的歷史版本，以及做了那些變動</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day20 - GAS抓表(4)</title>
    <link href="/2020/09/20/12thDay20/"/>
    <url>/2020/09/20/12thDay20/</url>
    
    <content type="html"><![CDATA[<p>昨天我們成功把API跟程式做了連結，並且可以在dc使用</p><p>但從GAS到程序寫法都存在問題，今天筆者會一一修正</p><p><img src="https://i.imgur.com/fR5A15o.png" alt="20-1"></p><p>首先請開啟GAS，這是我們目前的樣子</p><p>為了讓搜尋方式從JSONObject轉成JSONArray，第9~19行請改寫如下</p><p><img src="https://i.imgur.com/T9RPJMS.png" alt="20-2"></p><p>重點在於宣告dataExport的時候，從{}變成了[]<br>這就是JSONObject跟JSONArray的差別了<br>{}表示JSONObject，而[]表示JSONArray</p><p>做好後我們跟上次一樣發布成網頁應用程式</p><p><img src="https://i.imgur.com/ilA3YVL.png" alt="20-3"></p><p>以後要記得，只要想修改GAS，修改完就一定要發布，然後版本一定要+1<br>版本只會越來越高，如果選擇舊的版號的話，API是抓不到你最新的修改的喔!</p><p>成功改成JSONArray後，原本的寫法就不適用了，不過我們也不打算繼續使用舊的邏輯<br>先來整理目前程序接收到API後的邏輯</p><p>discord訊息事件觸發 -&gt; 沒有前綴字，進入API字串比對 -&gt; 比對完成，反饋結果 -&gt; 將結果反饋回discord</p><p>這樣做最明顯的問題就是每有一個訊息事件，bot就要打一次API上去<br>花費的時間過長，容易增加bot錯誤<br>且沒有考量過GAS每日免費額度問題</p><p>那麼該怎麼解決這問題呢?其實也很簡單，只要讓抓取API的行為只要執行一次就好</p><p>整個DiscordBot，唯一只會執行一次的地方就在ready事件</p><p><img src="https://i.imgur.com/XBnoUg1.png" alt="20-4"></p><p>當程序啟動，程序自動執行login方法，login成功就會收到唯一一次的ready</p><p><img src="https://i.imgur.com/xRZkc3k.png" alt="20-5"></p><p>將原本在下面的API事件拉上ready，並且將messageED改成dataED<br>我們之後就不讓GetGas做字串比對了，只要幫我們打API並且整理好資料後反饋就好</p><p><img src="https://i.imgur.com/Tcb5HJq.png" alt="20-6"></p><p><img src="https://i.imgur.com/lif9ZJN.png" alt="20-7"></p><p>處理好上面後，做字串比對</p><p><img src="https://i.imgur.com/xSzaxE8.png" alt="20-8"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//BaseExcel字串比對</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetBaseExcelData</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (BaseExcelData) &#123;<br>            <span class="hljs-keyword">const</span> userMessage = msg.content;<br><br>            e = BaseExcelData.filter(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>                <span class="hljs-keyword">return</span> element.NAME === userMessage;<br>            &#125;)<br><br>            <span class="hljs-keyword">if</span> (e) <span class="hljs-keyword">return</span> e[<span class="hljs-number">0</span>].VALUE;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;GetBaseExcelDataError&#x27;</span>, err);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然後將字串比對的function拉到原本請求API的地方</p><p><img src="https://i.imgur.com/jnV3w2k.png" alt="20-9"></p><p>都完成後，我們試著執行看看</p><p><img src="https://i.imgur.com/Y4k84C8.png" alt="20-10"></p><p>成了!<br>這樣我們的bot只在執行時會去取API<br>解決了GAS限制的問題，並且每次的讀寫速度也提升許多</p><p>到此，DiscordBot後台0負擔這個主題的基本設置大致說完了<br>這邊附上完整的教學專案<br><a href="https://supr.link/MePIY">https://supr.link/MePIY</a></p><p>剩下十天會教一些額外的內容，例如昨天提到GAS的訊息應該是分群組的，音樂系統如何分群使用等，以及GitHub使用….如果讀者有想看的也可以留言給筆者知道，筆者會的話再做安排</p><p>最後我們將檔案推上Heroku，記得怎麼推嗎?</p><p>git add .<br>git commit -m ‘版本說明’<br>git push heroku master</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day19 - GAS抓表(3)</title>
    <link href="/2020/09/19/12thDay19/"/>
    <url>/2020/09/19/12thDay19/</url>
    
    <content type="html"><![CDATA[<p>昨天我們的程式成功抓到API的資料並且對他做分析了<br>現在要串回主程序(bot.js)上</p><p><img src="https://i.imgur.com/lLXAqcN.png" alt="19-1"></p><p>請幫我在bot.js引用GetGas.js</p><p><img src="https://i.imgur.com/mwE3NRg.png" alt="19-2"></p><p><img src="https://i.imgur.com/xMGI9Fa.png" alt="19-3"> </p><p>然後之前的文字回應系統，跟音樂系統一樣用一個function包起來，比較好看</p><p><img src="https://i.imgur.com/uvfVZ2Q.png" alt="19-4"></p><p>我們希望當訊息不符合任一前綴系統的情況，就要拿字串跟資料庫比對<br>所以我們把function放在default(默認)，只要前面的case都沒進去就會到default</p><p><img src="https://i.imgur.com/N0R0NAW.png" alt="19-5"> </p><p>之後新增BaseExcelFunction方法<br>內容是執行GetGas底下的getBaseExcel元素</p><p><img src="https://i.imgur.com/lg1t1wq.png" alt="19-6"></p><p>回來看GetGas的getBaseExcel<br>getBaseExcel元素指向一callback方法<br>帶了一個參數userTalk，callback方法使用callback代表方法的結束，呼叫方會在callback欄位宣告function，其帶回參數(messageED)就是getBaseExcel的方法中callback的值</p><p><img src="https://i.imgur.com/XXBAW5u.png" alt="19-7"></p><p>這樣寫完，機器人就能做簡單的回話了!</p><hr><p>雖然功能做好了，但有許多問題</p><p>依嚴重性依序列舉的話</p><ol><li>   bot每從discord收到一則訊息就會使用一次API</li><li>   使用JsonObject做迴圈查詢十分沒有效率</li><li>   缺乏防呆&amp;參數替換</li></ol><p>理論上，機器人對對應的詞句回話這個動作是即時的，透過這個寫法，我們每次查詢API都必須等待2~3秒的時間，API才會將結果反饋給bot<br>而且多次傳送API不僅降低了程序的穩定，也要考慮GAS提供的每日配額<br>如果bot所在的群組一天訊息超過2萬筆，API就一定會被花光，而一天兩萬筆訊息、對於一個支援多群組的bot來說其實並不困難</p><p>GetGas中對於data的處理方式也是極其低效的，雖然在捨棄SQL這種專為優化資料存取的系統時，就難以追求最高效的方法，但目前的做法也仍是相對低效的</p><p>以及程序目前只是簡單的判A給B，功能十分單一<br>我沒辦法針對特定群組，有該群組專屬的詞彙，或是對特定回應帶tag等</p><p>明天我們會將程序做一次翻新</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day18 - GAS抓表(2)</title>
    <link href="/2020/09/18/12thDay18/"/>
    <url>/2020/09/18/12thDay18/</url>
    
    <content type="html"><![CDATA[<p>昨天我們在雲端上建好了試算表<br>將GAS發布成API的GET方法，只要我們訪問就能成功獲取試算表資料</p><p>今天我們來寫點程式</p><p>我們來回顧一下，目前機器人在Message下可以做到的事情</p><ul><li>文字回應</li><li>音樂系統</li></ul><p>我們希望增加一個可以針對表格內容，動態觸發回應的功能<br>這種功能因為不會直接知道有哪些指令，應該要是沒有前綴字的，只要字串符合就會觸發</p><p>由此可知，我們應該要將這個方法添加在所有功能的最底層<br>只有當前綴字都不符合時，才會來辨識表格資料</p><p>觀念大致帶過，我們開始動手</p><p>先幫我在專案目錄下建立一個Script資料夾，在裡面放一個GetGas.js</p><p><img src="https://i.imgur.com/OJB3z4l.png" alt="18-1"></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autoit">//<span class="hljs-meta">#<span class="hljs-meta-keyword">region</span> 全域引用</span><br><span class="hljs-keyword">const</span> auth = require(<span class="hljs-string">&#x27;../JSONHome/auth.json&#x27;</span>)<span class="hljs-comment">;</span><br><span class="hljs-keyword">const</span> request = require(<span class="hljs-string">&#x27;request&#x27;</span>)<span class="hljs-comment">;</span><br><br>//<span class="hljs-meta">#<span class="hljs-meta-keyword">endregion</span></span><br><br></code></pre></td></tr></table></figure><p>裡面請先幫我引用auth.json跟request</p><p>auth目前只有存放機器人的key，跟key一樣，我們不希望自己與GAS串接的API暴露&amp;寫死在程式裡面，所以之後要把連結寫在auth，之後透過auth來讀取連結<br>務必注意引用auth的路徑比bot.js多了一個點，這是因為GetGas.js要先從Script路徑出來才找的到JSONHome。</p><p>request是提供給js的網路請求library，我們之後都會透過他來傳遞Get方法</p><p><img src="https://i.imgur.com/pwcJ7OJ.png" alt="18-2"></p><p>auth.json目前的樣子</p><p>在原本的Key後面加上一個逗號，然後新增Gas參數，內涵一個JsonObject{}<br>{}裡面再包一個Get參數，內涵一個JsonArray[]<br>第一個JsonObject內包一個baseExcel參數<br>baseExcel參數會帶回我們昨天做的API連結</p><p>包三層是為了增加程式含意，方便之後閱讀<br>跟Get同一層之後可以再添加post等<br>不過Get原本是包JsonObject就好，這邊為了多介紹JsonArray所以用了，原本就會的同學可以少包Array</p><p>這種架構下，如果我們要獲取Url就會是<br>auth.Gas.Get[0].baseExcel</p><p><img src="https://i.imgur.com/YcsHJpa.png" alt="18-3"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span><span class="hljs-comment">#region 宣告請求</span><br>const baseExcel = &#123;<br>    <span class="hljs-string">&#x27;method&#x27;</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>    <span class="hljs-string">&#x27;url&#x27;</span>: auth.Gas.Get[<span class="hljs-number">0</span>].baseExcel,<br>    <span class="hljs-string">&#x27;headers&#x27;</span>: &#123;&#125;<br>&#125;;<br><br><span class="hljs-regexp">//</span><span class="hljs-comment">#endregion</span><br></code></pre></td></tr></table></figure><p>再來我們宣告一個baseExcel常數，將http請求需要的參數帶給他<br>method表示我們使用的是Get方法<br>url就帶我們剛剛寫好的url<br>headers是傳送時的表頭，這邊放空值就好</p><p><img src="https://i.imgur.com/8v4kmCE.png" alt="18-4"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//#region 傳送請求</span><br><span class="hljs-built_in">exports</span>.getBaseExcel = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">userTalk, callback</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> backValue = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>;<br>    request(baseExcel, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error, response</span>) </span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">if</span> (error) &#123;<br>                callback(error);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">const</span> data = <span class="hljs-built_in">JSON</span>.parse(response.body); <span class="hljs-comment">//接收回傳(response)的body</span><br>                <span class="hljs-keyword">const</span> keysValue = <span class="hljs-built_in">Object</span>.keys(data); <span class="hljs-comment">//將JsonObject的key值輸出成Array</span><br>                <span class="hljs-comment">//迴圈判斷是否符合</span><br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; keysValue.length; i++) &#123;<br>                    <span class="hljs-keyword">if</span> (data[keysValue[i]].NAME === userTalk) &#123;<br>                        callback(data[keysValue[i]].VALUE); <span class="hljs-comment">//正確回傳結果</span><br>                    &#125;<br>                &#125;<br>                callback(<span class="hljs-literal">false</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;getBaseExcelError&#x27;</span>, err);<br>            callback(<span class="hljs-string">&#x27;getBaseExcelError&#x27;</span>);<br>        &#125;<br>    &#125;);<br>&#125;;<br><br><span class="hljs-comment">//#endregion</span><br></code></pre></td></tr></table></figure><p>最後我們實際創建一個callback方法，供外部調用<br>http請求後，將回傳值定義為JSON給data<br>之後讓data跑迴圈，判斷message是否與表格的NAME欄相符<br>叫到名字的話，機器人就要回傳VALUE值</p><p>這樣我們就把GetGas.js做好了，剩下bot.js呼叫與傳送訊息的部分<br>我們明天繼續</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day17 - GAS抓表(1)</title>
    <link href="/2020/09/17/12thDay17/"/>
    <url>/2020/09/17/12thDay17/</url>
    
    <content type="html"><![CDATA[<p>今天我們來寫GAS</p><h2 id="文件創建"><a href="#文件創建" class="headerlink" title="文件創建"></a>文件創建</h2><p>首先請打開google，登入你自己的google雲端，並且在喜歡的地方創建一個資料夾，取名為DiscordDataBaseApi</p><p><img src="https://i.imgur.com/rczINQm.png" alt="17-1"></p><p>右鍵分別創建一個試算表跟一個GAS</p><p><img src="https://i.imgur.com/gGDTERM.png" alt="17-2"></p><p><img src="https://i.imgur.com/EIbdgPE.png" alt="17-3"></p><p>兩個文件創立後都會直接開一個新視窗<br>Excel取名為MyData，像我們一樣隨便輸入一些資料<br>然後複製網址上面d/ 到 /edit 中間的亂碼，我的是<br>1mQ6qTJfOs3Gv5–K9r87w56wmDc3hUcpHm5hF1YKTms</p><p>這串英數是我們Excel的ID，只要把這串亂碼給Google看，他就知道你找的是這張表</p><p><img src="https://i.imgur.com/EPVxxkb.png" alt="17-4"></p><p>我們回到 GAS ，填入以下程式</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">var id = &#x27;你的表格ID&#x27;; <span class="hljs-comment">//抓取表單</span><br>  var spreadsheet = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">SpreadsheetApp</span>.</span></span><span class="hljs-keyword">open</span><span class="hljs-constructor">ById(<span class="hljs-params">id</span>)</span>; <span class="hljs-comment">// Sheet id</span><br>  var sheet = spreadsheet.get<span class="hljs-constructor">Sheets()</span><span class="hljs-literal">[<span class="hljs-number">0</span>]</span>; <span class="hljs-comment">// 要第幾個sheet？ 0 就是第一個</span><br>  var rowLength = sheet.get<span class="hljs-constructor">LastRow()</span>-<span class="hljs-number">1</span>; <span class="hljs-comment">//取行長度</span><br>  var columnLength = sheet.get<span class="hljs-constructor">LastColumn()</span>; <span class="hljs-comment">//取列長度</span><br>  var data = sheet.get<span class="hljs-constructor">Range(2,1,<span class="hljs-params">rowLength</span>,<span class="hljs-params">columnLength</span>)</span>.get<span class="hljs-constructor">Values()</span>; <span class="hljs-comment">// 取得的資料</span><br></code></pre></td></tr></table></figure><p>把剛剛的id給GAS抓表，抓到表後讀取行列範圍，然後從範圍中抓取資料<br>那一長串程式碼全都是google提供的function，雖然好像有library可以看，筆者是建議記下來就好</p><p>我們範圍是從第2行開始抓取資料到最底，這是因為我們表格的第一行屬於標題行，給使用者看的，我們就不抓取這行資料</p><p><img src="https://i.imgur.com/YGdSESn.png" alt="17-5"></p><p>再來幫我新增這幾行資料</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs prolog">var dataExport = &#123;&#125;;<br><br>for(i in data)&#123;<br>  if(data[i][<span class="hljs-number">0</span>] != <span class="hljs-string">&quot;&quot;</span>)&#123;<br>  dataExport[data[i][<span class="hljs-number">0</span>]] = &#123;<br>    <span class="hljs-symbol">DATE</span>:   data[i][<span class="hljs-number">1</span>],<br>    <span class="hljs-symbol">NAME</span>:   data[i][<span class="hljs-number">2</span>],<br>    <span class="hljs-symbol">VALUE</span>:  data[i][<span class="hljs-number">3</span>]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果對json操作有一點經驗的同學，對這幾行應該不陌生<br>把data中的資料一個個串成json，這樣才方便我們做後續處理</p><p><img src="https://i.imgur.com/mewJW4N.png" alt="17-6"></p><p>最後加上這行</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">var dataExportFormat = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>stringify(dataExport);<br>return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ContentService</span>.</span></span>create<span class="hljs-constructor">TextOutput(<span class="hljs-params">dataExportFormat</span>)</span>.set<span class="hljs-constructor">MimeType(ContentService.MimeType.JSON)</span>;<br></code></pre></td></tr></table></figure><p>把整理好的資料return回去<br>GAS回傳需要先經手過他們的方法，API接收到的資料才是正常的<br>這部份當成return dataExport就可以了。</p><h2 id="發布"><a href="#發布" class="headerlink" title="發布"></a>發布</h2><p>表格都填完，GAS都寫好後，我們就能抓取到表格資料了<br>但是程式該怎麼訪問GAS呢?<br>為了讓程式可以訪問到GAS，我們需要將GAS做成API<br>確認程式存檔後，幫我點左上角發布-&gt;部屬為網頁應用程式</p><p><img src="https://i.imgur.com/jR2dTYm.png" alt="17-7"></p><p>會有三個下拉框出現</p><ol><li>   是版本號</li><li>   發布者</li><li>   存取權限</li></ol><p>因為是第一次發布，版本一定是1<br>發布者是你就好不要動<br>這邊要注意第三點，務必設定成Anyone,even anonymous<br>確定無誤後我們點擊Deploy，他會要你核對權限，一路允許就好</p><p><img src="https://i.imgur.com/HD5slmK.png" alt="17-8"></p><p>都完成後，我們最後會拿到一組連結，我們試著將連結放在瀏覽器上</p><p><img src="https://i.imgur.com/mZh9b3a.png" alt="17-9"></p><p>如果成功就會像筆者這樣拿到表格上的檔案了!</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day16 - 選擇你的資料庫</title>
    <link href="/2020/09/16/12thDay16/"/>
    <url>/2020/09/16/12thDay16/</url>
    
    <content type="html"><![CDATA[<p>昨天我們成功把機器人丟到雲端託管，現在機器人可以..</p><ul><li>24小時不關機的回應大家的文字</li><li>24小時不關機的播放音樂</li><li>24小時不關機的做任何你已經自己寫好的原創功能!</li></ul><p>也就是說，原本機器人是前端(Discord)與後端(你的電腦)</p><p>現在是前端(Discord)與後端(Heroku)了，儼然是一個自成循環的軟體，自行運作<br>只要不是要更新以及沒有重大bug的話，便可以減少維護，只要當一個使用者就好</p><p>不過這樣的架構實際上是不夠完整的，Day14我們有帶到，關於面向使用者的軟體，通常會有</p><ul><li>前端</li><li>後端</li><li>與資料庫</li></ul><p>目前我們還缺乏一個資料庫，如果是之前在本機的情況，本文章只要教各位怎麼安裝MySQL就好；但是現在機器人已經被推上Heroku了，我們對對方的主機又沒有完全的控制權限，這又該怎麼辦呢?</p><hr><h2 id="Heroku的資料庫"><a href="#Heroku的資料庫" class="headerlink" title="Heroku的資料庫"></a>Heroku的資料庫</h2><p>我們來介紹Heroku的資料庫吧<br>因為這東西筆者的了解也不深，只是有必要提到<br>如果介紹有錯還望各位指正，以免誤導到人，感謝^^”</p><p>Heroku不只提供軟體&amp;網站的上傳發佈，同時也支援這些程式在Heroku專案的主機上建立專屬的本地資料庫<br>其主要使用PostgreSQL，是一種關聯性資料庫<br>關聯性資料庫是甚麼?你當成MySQL就好，總之就是相對嚴謹(麻煩)的一種資料庫語言</p><p><img src="https://i.imgur.com/COzboBR.png" alt="16-1"> </p><p>免費的Heroku Postgre提供1萬則的資料容量，只要你創建的DB總資料量超過這個數字後便無法寫入，並且會跟你收費以提高額度來支援更多的資料寫入量</p><p>1萬這個數字說大不大說小不小，雖然說對於個人戶是夠用了，但如果長久維運，缺乏資料管理、造成資料堆積<br>又或是資料儲存的方式比較複雜，紀錄一次可能就會占用許多空間的話…實際上筆者覺得1萬行是完全不夠Bot使用的</p><p>而且因為Heroku的操作都必須透過指令，只是程式的操作可能還好，在處理資料庫這種複雜的系統時，不自己寫一個圖形介面真的很難管理</p><h2 id="替代方案"><a href="#替代方案" class="headerlink" title="替代方案"></a>替代方案</h2><p>結合上述，我們整理出Heroku 原生資料庫的兩大問題</p><ul><li>免費容量低</li><li>管理困難</li></ul><p>筆者Bot的製作訴求是自動、便利、好維護<br>如果使用Heroku資料庫的話還要擔心或許哪天Heroku會忽然想不開，去更新他們的資料庫語法…這與筆者的需求是完全背道而馳的</p><p>因此，我們需要一個替代方案，這個做法就是GoogleAppsScript !</p><p><img src="https://i.imgur.com/w7gmbo5.jpg" alt="16-2"> </p><p>GoogleAppsScript，簡稱GAS，不是容易爆炸的那個</p><p>GAS是Google提供的一種程式檔，他使用JavaScript語言，並且自動引用Google提供的函式庫</p><p>因為是Google自家產品，理所當然的，GAS可以輕鬆的調用Google旗下產品的資訊(例如Google文件，試算表等)</p><p>並且GAS是一種存於Google雲端的程式，只要他正式發佈便也會是24小時自動運作的程序，不會消耗到筆者一毛錢!(重點)</p><h2 id="GAS的規格"><a href="#GAS的規格" class="headerlink" title="GAS的規格"></a>GAS的規格</h2><p><img src="https://i.imgur.com/wLtCjIq.png" alt="16-3"> </p><p>在本主題，我們將用試算表來儲存資料<br>藉由GAS來編寫API，供Bot調用&amp;獲取資料</p><p>上圖是GAS提供給使用者做各種操作的具體上限，我們看第一行的基本使用者(gmail.com)即可</p><p>Properties read/write(屬性讀寫)<br>上限50000筆/天</p><p>URL Fetch calls(URL調用)<br>上限20000筆/天</p><p>先看URL Fetch calls，這句的意思是關於Bot一天內調用API的上限次數<br>如果Bot一天內對API的請求超過2萬次，Google就會中斷你的請求、並且給你一個大大的Error</p><p>Properties read/write代表的是你的程序對試算表讀寫的次數上限<br>如果我的API被呼叫一次，程序就會對試算表做50000次的讀取，那這個API只要調用一次，今天的扣打就用完了(x</p><p>這樣，我們得出一個結論<br>理論上，只要我的每個API內讀寫資料的次數平均介於2~3次<br>那我們一天的資料請求上限就會足足有2萬筆，直接是Heroku總上限的兩倍!</p><p>當然這種做法也有他的弊端，Heroku的上限是總儲存上限，而我們的GAS上限是總調用上限<br>雖然隔天次數就會給你加滿，但只要我調用的次數足夠頻繁，理論上每天都會面臨資料無法再調用的問題，對於如何減少機器人的資料調用會需要做些功夫</p><p>遠水救不了近火，試算表資料的調用途中經過GAS，再從住在Heroku的bot程序發送API跟GAS要資料<br>速度理所當然沒有像使用Heroku Postgre一樣即時</p><p>因為試算表非正統SQL，SQL是一種專門為讀/寫資料做優化的體系；當資料量大到一個程度時，效能一定沒有SQL好</p><p>但同時GAS的好處也很明顯</p><p>資料的儲存幾乎是無上限的<br>Google自帶的使用者介面讓管理十分容易，相對不用擔心資料備份等問題<br>新增刪除資料的方式都會比Heroku Postgre來的更加直觀<br>不用擔心未來因為GoogleAppsScript改版，資料會很難帶走，替代方案也多的是</p><p>以上，便是筆者針對資料庫方案取捨的介紹<br>明天我們著手開始編寫基本的試算表資料跟GAS</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day15 - Heroku架設&amp;細部設定</title>
    <link href="/2020/09/15/12thDay15/"/>
    <url>/2020/09/15/12thDay15/</url>
    
    <content type="html"><![CDATA[<p>早安<br>昨天我們把Heroku跟Git都安裝好了，今天我們要將我們的專案變成Git專案<br>並且推上Heroku</p><h1 id="第一次推送專案"><a href="#第一次推送專案" class="headerlink" title="第一次推送專案"></a>第一次推送專案</h1><p>首先，跟之前一樣<br>我們先用VSCode開啟專案資料夾</p><p><img src="https://i.imgur.com/ACltFP5.png" alt="15-1"></p><p>確定終端機路徑正確後，輸入<br>git init</p><p><img src="https://i.imgur.com/7aVXFF2.png" alt="15-2"></p><p>左側的檔案都變得綠綠的<br>如果你有看的到隱藏資料夾的話，在專案底下還會看到一個.git的隱藏資料夾<br>那就是用來識別git專案的檔案，也是執行git語言時的依據</p><p>這樣專案就轉換成git專案了，然後我們接下來要在heroku上創建一個專案庫<br>專案名稱的命名方式大多為 aaa-bbb-ccc<br>第一個字必須為小寫，且不能與其他在heroku上的專案撞名，所以越獨特越好<br>這邊筆者的專案名稱取做 the-bot-alice-on-heroku<br>我們輸入<br>heroku create 你的專案名稱</p><p><img src="https://i.imgur.com/rpv8elG.png" alt="15-3"></p><p>這時候如果到這裡看，成功的話就會看到剛剛創建的專案了<br><a href="https://dashboard.heroku.com/">https://dashboard.heroku.com/</a></p><p><img src="https://i.imgur.com/KXLt0MO.png" alt="15-4"></p><p>我們繼續輸入</p><p>git add .<br>git commit -m init<br>git push heroku master</p><p><img src="https://i.imgur.com/FJAbH1V.png" alt="15-5"></p><p>最後有看到Build succeeded就是成功了!<br>這三個指令的意思依序是</p><p>git add .<br>將目錄下的所有檔案加入git控管</p><p>git commit -m init<br>將git控管下的檔案全部加入本次要推送的版本，因為是第一次推送所以是init，之後第n次推送的話程式碼要改成 git commit -m ‘版本說明’</p><p>git push heroku master<br>將commit起來的版本推送(上傳)到heroku的主分支，總之就是上傳檔案</p><p>所以之後如果要更新程式，都是依序使用這三個命令來上傳機器人</p><p>接著我們運行看看<br>heroku logs –t</p><p><img src="https://i.imgur.com/BezAjQn.png" alt="15-6"></p><p>這是呼叫heroku的控制後台，相當於在看遠端主機運行程序時的終端機<br>要退出時按ctrl+c退出</p><p>可以看到對方也接收到我們上傳的檔案，有一個Build succeeded<br>但是後面都是npm ERR<br>以及可以看到他嘗試使用 npm start 來運行我們的專案<br>還記得我們的程序啟動試透過甚麼方式嗎?<br>沒錯，node bot!</p><h1 id="平台設定"><a href="#平台設定" class="headerlink" title="平台設定"></a>平台設定</h1><p>我們在專案的根目錄新增一個檔案，取名叫做Procfile</p><p><img src="https://i.imgur.com/4Xl8BEd.png" alt="15-7"></p><p>裡面只有一行，寫上<br>worker: node bot</p><p>可以看到，檔案在取名為Procfile後，icon會變成Heroku的標誌<br>這是Heroku可以辨識的檔案，作用是指定Heroku的啟動命令<br>worker是代表我們要運行的啟動命令是worker(程序)<br>heroku預設的啟動命令屬於web(網頁)</p><p>寫好後，我們再做一次推送<br>git add .<br>git commit -m ‘npm bot’<br>git push heroku master</p><p><img src="https://i.imgur.com/foAIKIR.png" alt="15-8"></p><p>push完，我們打開網頁，回到heroku控制台，進入我們的專案</p><p><img src="https://i.imgur.com/gLPqwGs.png" alt="15-9"></p><p>會看到，紅框處是我們的推送日誌，這也是用git來控管程式時的日誌檔</p><p>藍框就顯示了我們程序的啟動方式，可以看到node bot已經出現在上面了，但是沒有開啟</p><p>我們點擊紫框的Resources</p><p><img src="https://i.imgur.com/s2C5V61.png" alt="15-10"></p><p>將 npm start給關閉，node bot開啟，這樣回去主頁面看node bot也會是開啟的狀態了</p><p>最後我們在終端機輸入 heroku restart</p><p><img src="https://i.imgur.com/10oZqCf.png" alt="15-11"></p><p>這是重啟專案的指令，當程序崩潰或是遇到任何問題時，都可以重啟看看</p><p>heroku logs -t</p><p><img src="https://i.imgur.com/ZVirlHw.png" alt="15-12"> </p><p><img src="https://i.imgur.com/SrXdjRa.png" alt="15-13"></p><p>成功!<br>到此為止，我們成功將Bot推送到Heroku上，以後不用我們自己運行<br>機器人也會是24小時運行了，給做到這邊的自己一個鼓勵吧^^</p><h1 id="其他設定"><a href="#其他設定" class="headerlink" title="其他設定"></a>其他設定</h1><p>Heroku的免費時數預設是550小時/月，如果說是自己幾個朋友使用是沒關係<br>當機器人在一個人數比較多的群組時，550小時是沒辦法支撐1個月的，每到月底、機器人就會想休息幾天</p><p>但是!如果你有在Heroku的帳戶綁定信用卡的話，他會免費再給你450小時，每個月的免費時數會變成1000小時，運行機器人是完全足夠的!不用擔心會扣款</p><p>我們點選右上角的設定</p><p><img src="https://i.imgur.com/84iDGli.png" alt="15-14"></p><p>點Billing，然後點Add credit card</p><p><img src="https://i.imgur.com/Rqh5IfU.png" alt="15-15"></p><p>再來就是綁卡流程，相信這部份不用截圖，各位自己會的</p><p><img src="https://i.imgur.com/A1PkaAG.png" alt="15-16"></p><p>綁完後，底下原本的550小時就會變成有1000小時的扣打了~</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day14 - Heroku與Git，介紹與安裝</title>
    <link href="/2020/09/14/12thDay14/"/>
    <url>/2020/09/14/12thDay14/</url>
    
    <content type="html"><![CDATA[<p>好勒，上禮拜我們終於把基本的音樂系統做好<br>現在你的機器人支援多種功能，加上你自己做的其他系統，已經是一個強大的機器人了!</p><p>之後如果我要使用機器人，只要打開cmd運行node bot，然後電腦一直開著就好</p><ul><li>一直開著就好</li><li>自己不在其他人就沒辦法使用bot</li><li>程序如果掛掉要自已重啟</li></ul><p>其實這就是將自己的電腦做為後端主機在運行bot<br>而這方法對於平常沒有長時間開機習慣的使用者來說是略為有些負擔了<br>就算是順便開著也要擔心程式會不會自己崩潰跳閘</p><p>也因此，今天我們就會來解決這個問題，同時也是終於能提到我們的主題啦</p><hr><h1 id="後端0負擔"><a href="#後端0負擔" class="headerlink" title="後端0負擔"></a>後端0負擔</h1><p>一個面向使用者的服務都會有<br>一個前端視覺介面(Discord)<br>一個後端(bot.js)<br>再在後端的後面獨立出一個資料庫主機就更好了(SQL)</p><p>後端0負擔的意思是我們不必再支付運行程序的電費等維護費用<br>那麼該怎麼做才能實現呢?其實也很簡單，我們把程序給其他人的電腦跑，讓他幫你管就好，也就是</p><h3 id="雲端託管"><a href="#雲端託管" class="headerlink" title="雲端託管"></a>雲端託管</h3><p><img src="https://i.imgur.com/7OKEagE.png" alt="14-1"></p><p><a href="https://www.heroku.com/">Heroku官方網站</a></p><p>Heroku是支援多語言的全自動託管平台<br>只要將你的程序放上去並且做好相關設定，程序就會在他們的主機上自動運行</p><h1 id="註冊Heroku帳號"><a href="#註冊Heroku帳號" class="headerlink" title="註冊Heroku帳號"></a>註冊Heroku帳號</h1><p>請先到<a href="https://signup.heroku.com/login">這個網址</a>註冊帳號資訊</p><p><img src="https://i.imgur.com/7PeESWm.png" alt="14-2"></p><p>First name姓<br>Last name名<br>Email Address信箱<br>Role職業<br>Primary Development Language開發語言</p><p>基本上只要信箱跟開發語言沒打錯選錯就好，填好後我們直接送出</p><p><img src="https://i.imgur.com/N7yKXIJ.png" alt="14-3"></p><p>到這個步驟就代表前面填的資料ok，請去收信</p><p><img src="https://i.imgur.com/GeRJh01.png" alt="14-4"></p><p>點擊信中的連結</p><p><img src="https://i.imgur.com/oVhFOKt.png" alt="14-5"></p><p>這邊他要你重複輸入密碼，需8碼，由英數符號組成</p><p><img src="https://i.imgur.com/1PBEoJs.png" alt="14-6"></p><p>一路確認後就會來到這裡了<br>這裡是heroku的後台，左側是創建我們的應用程序專案，右側是成立小組</p><p>不過我們通常會透過 Heroku CLI 來操作，所以不用管這兩個東東，我們繼續做</p><h1 id="安裝Heroku-CLI"><a href="#安裝Heroku-CLI" class="headerlink" title="安裝Heroku CLI"></a>安裝Heroku CLI</h1><p>點擊<a href="https://devcenter.heroku.com/articles/heroku-cli#windows">這個網址</a></p><p>按照你的作業系統安裝對應的版本，通常是Windows 64-bit</p><p><img src="https://i.imgur.com/j8Nhzgo.jpg" alt="14-7"></p><p>一路next就好，最後Close</p><p>最後我們開啟終端機(cmd)，注意必須是重新開啟的cmd，安裝前已經開啟的不行<br>在上面輸入heroku<br><img src="https://i.imgur.com/Q5PDR5H.png" alt="14-8"></p><p>只要出現類似這樣的畫面就代表安裝成功了<br>如果沒有成功出現，可以先重開機看看，再不然可能是你的安裝版本有錯，電腦不是64位元等</p><p>成功的話我們繼續輸入 heroku login</p><p><img src="https://i.imgur.com/4riBzSS.png" alt="14-9"></p><p>在鍵盤上輸入除了q以外的按鍵 = 同意他開啟瀏覽器提供登入</p><p><img src="https://i.imgur.com/hIbxrs0.png" alt="14-10"></p><p><img src="https://i.imgur.com/yUICBY3.png" alt="14-11"></p><p>chrome會自動打開，因為我們前面剛在heroku註冊，所以網頁還存著登入訊息，直接按Log In，回頭看cmd就會顯示登入成功了!</p><p>這樣Heroku CLI就裝好了，我們再來安裝Git</p><h1 id="Git安裝"><a href="#Git安裝" class="headerlink" title="Git安裝"></a>Git安裝</h1><p>Git是一種提供程式版本控制的語言，最常見的例子是GitHub<br>透過Git語言，我們可以將專案製作成Git專案，然後透過Git將程式推送到雲端，並且保證每個版本間的修改與來源都得到紀錄</p><p>Heroku正是依循Git的規則來上傳下載程式</p><p>點擊<a href="https://git-scm.com/download/win">這個網址</a></p><p>一樣選擇對應的版本<br>安裝時的選項很多，請跟我底下的圖片選擇一樣</p><p><img src="https://i.imgur.com/DprmCvj.jpg" alt="14-12"></p><p><img src="https://i.imgur.com/Y0z1v5M.jpg" alt="14-13"></p><p>路徑跟我不一樣沒關係，總之要照他預設給你的，不要改</p><p><img src="https://i.imgur.com/MqCh8g0.jpg" alt="14-14"> </p><p><img src="https://i.imgur.com/jsvzoZd.jpg" alt="14-15"></p><p><img src="https://i.imgur.com/TlaJ0d8.jpg" alt="14-16"></p><p><img src="https://i.imgur.com/ME0BGhq.jpg" alt="14-17"></p><p><img src="https://i.imgur.com/NnHcvxN.jpg" alt="14-18"></p><p><img src="https://i.imgur.com/EJs2X40.jpg" alt="14-19"></p><p><img src="https://i.imgur.com/aw4G31d.jpg" alt="14-20"></p><p><img src="https://i.imgur.com/ZJTODzR.jpg" alt="14-21"></p><p>這樣就安裝好Git了，跟剛剛一樣，我們開一個新的cmd測試是否安裝成功</p><p><img src="https://i.imgur.com/cG2Rs1B.png" alt="14-22"></p><p>失敗的話，除了版本問題以外，有可能是PATH檔不正確，可以拿這個keyword去排除問題試試看</p><p>都沒問題的話，我們輸入以下兩個指令</p><p>git config –global user.name “smile”<br>git config –global user.email “<a href="mailto:&#97;&#50;&#x38;&#x38;&#50;&#x36;&#x32;&#53;&#50;&#50;&#x35;&#50;&#64;&#x67;&#109;&#97;&#x69;&#108;&#46;&#x63;&#x6f;&#x6d;">&#97;&#50;&#x38;&#x38;&#50;&#x36;&#x32;&#53;&#50;&#50;&#x35;&#50;&#64;&#x67;&#109;&#97;&#x69;&#108;&#46;&#x63;&#x6f;&#x6d;</a>“</p><p><img src="https://i.imgur.com/VMeScbF.png" alt="14-23"></p><p>這是設定你的使用者名稱與信箱<br>我的名稱是smile，你要改成你自己的稱呼，信箱與heroku一樣就可以了</p><p>之後透過git推送時，都會以這個稱呼與信箱來識別<br>這樣Heroku跟Git的前置作業都做好了，明天將專案推上Heroku</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day13 - 嵌入式訊息embed與 bot 的指令表(額外)</title>
    <link href="/2020/09/13/12thDay13/"/>
    <url>/2020/09/13/12thDay13/</url>
    
    <content type="html"><![CDATA[<p>今天說說Discord的另一種訊息方式，embed</p><p><img src="https://i.imgur.com/6cCIVuN.png" alt="13-1"></p><p>在Discord.js中被稱為MessageEmbed，訊息嵌入元素，總之就是嵌入式訊息</p><p><img src="https://i.imgur.com/mw9N4MX.png" alt="13-2"></p><p>跟一般傳送訊息的手段一樣是使用 send ，但是傳送的屬性從原本的文字(string)轉成是嵌入元素(Embed)</p><p><img src="https://i.imgur.com/kQQYhth.png" alt="13-3"></p><p>embed宣告後，透過其文檔底下的各個方法(methods)來賦予嵌入式訊息本身，要放入哪些資訊</p><p><img src="https://i.imgur.com/rDwYLkd.png" alt="14-4"></p><p>將一個一個訊息嵌入embed元素後，最後從send方法傳送到discord上，就是一則embed訊息了</p><p><img src="https://i.imgur.com/gRPZpUI.png" alt="14-5"></p><p>底下附上標準版的embed，請各位嘗試在最初教學的 ! 方法中新增一則help觸發句，將底下範例套入後，試著替換成自己的指令文檔吧!</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">const embed = <span class="hljs-keyword">new</span> Discord.<span class="hljs-constructor">MessageEmbed()</span><br>      .set<span class="hljs-constructor">Color(&#x27;#0099ff&#x27;)</span><br>      .set<span class="hljs-constructor">Title(&#x27;Some <span class="hljs-params">title</span>&#x27;)</span><br>      .set<span class="hljs-constructor">URL(&#x27;<span class="hljs-params">https</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">discord</span>.<span class="hljs-params">js</span>.<span class="hljs-params">org</span><span class="hljs-operator">/</span>&#x27;)</span><br>      .set<span class="hljs-constructor">Author(&#x27;Some <span class="hljs-params">name</span>&#x27;, &#x27;<span class="hljs-params">https</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">i</span>.<span class="hljs-params">imgur</span>.<span class="hljs-params">com</span><span class="hljs-operator">/</span><span class="hljs-params">wSTFkRM</span>.<span class="hljs-params">png</span>&#x27;, &#x27;<span class="hljs-params">https</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">discord</span>.<span class="hljs-params">js</span>.<span class="hljs-params">org</span>&#x27;)</span><br>      .set<span class="hljs-constructor">Description(&#x27;Some <span class="hljs-params">description</span> <span class="hljs-params">here</span>&#x27;)</span><br>      .set<span class="hljs-constructor">Thumbnail(&#x27;<span class="hljs-params">https</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">i</span>.<span class="hljs-params">imgur</span>.<span class="hljs-params">com</span><span class="hljs-operator">/</span><span class="hljs-params">wSTFkRM</span>.<span class="hljs-params">png</span>&#x27;)</span><br>      .add<span class="hljs-constructor">Field(&#x27;Regular <span class="hljs-params">field</span> <span class="hljs-params">title</span>&#x27;, &#x27;Some <span class="hljs-params">value</span> <span class="hljs-params">here</span>&#x27;)</span><br>      .add<span class="hljs-constructor">Field(&#x27;\<span class="hljs-params">u200B</span>&#x27;, &#x27;\<span class="hljs-params">u200B</span>&#x27;)</span><br>      .add<span class="hljs-constructor">Field(&#x27;Inline <span class="hljs-params">field</span> <span class="hljs-params">title</span>&#x27;, &#x27;Some <span class="hljs-params">value</span> <span class="hljs-params">here</span>&#x27;, <span class="hljs-params">true</span>)</span><br>      .add<span class="hljs-constructor">Field(&#x27;Inline <span class="hljs-params">field</span> <span class="hljs-params">title</span>&#x27;, &#x27;Some <span class="hljs-params">value</span> <span class="hljs-params">here</span>&#x27;, <span class="hljs-params">true</span>)</span><br>      .add<span class="hljs-constructor">Field(&#x27;Inline <span class="hljs-params">field</span> <span class="hljs-params">title</span>&#x27;, &#x27;Some <span class="hljs-params">value</span> <span class="hljs-params">here</span>&#x27;, <span class="hljs-params">true</span>)</span><br>      .set<span class="hljs-constructor">Image(&#x27;<span class="hljs-params">https</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">i</span>.<span class="hljs-params">imgur</span>.<span class="hljs-params">com</span><span class="hljs-operator">/</span><span class="hljs-params">wSTFkRM</span>.<span class="hljs-params">png</span>&#x27;)</span><br>      .set<span class="hljs-constructor">Timestamp()</span><br>      .set<span class="hljs-constructor">Footer(&#x27;Some <span class="hljs-params">footer</span> <span class="hljs-params">text</span> <span class="hljs-params">here</span>&#x27;, &#x27;<span class="hljs-params">https</span>:<span class="hljs-operator">/</span><span class="hljs-operator">/</span><span class="hljs-params">i</span>.<span class="hljs-params">imgur</span>.<span class="hljs-params">com</span><span class="hljs-operator">/</span><span class="hljs-params">wSTFkRM</span>.<span class="hljs-params">png</span>&#x27;)</span>;<br>msg.channel.send(embed);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day12 - Discord的訊息刪除與更新事件(額外)</title>
    <link href="/2020/09/12/12thDay12/"/>
    <url>/2020/09/12/12thDay12/</url>
    
    <content type="html"><![CDATA[<p>欸…原本接下來想教後台託管與資料庫的教學的<br>但因為筆者禮拜五把文稿跟圖片還有範例程式全都留在公司了…所以這兩天筆者先教一下其他東西</p><p>就當作是惡補前面沒講到的Discord.js功能，我們今天來說說Discord.js的其他事件監聽吧</p><hr><h1 id="刪除與更新事件"><a href="#刪除與更新事件" class="headerlink" title="刪除與更新事件"></a>刪除與更新事件</h1><p>目前我們的所有事件都是建立在<br>使用者發送訊息 -&gt; Discord廣播給機器人 -&gt; 機器人的Message事件觸發</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dart">client.<span class="hljs-keyword">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, msg =&gt; &#123;&#125;)<br></code></pre></td></tr></table></figure><p>我們的 bot 是使用登入了 bot 自身 keyValue 的 client 來監聽 message 事件的</p><p><img src="https://i.imgur.com/qXdmhzO.png" alt="12-1"><br><img src="https://i.imgur.com/hbkivnR.png" alt="12-2"></p><p>這樣，我們在Client下的Event分類中，就會找的到message的內容</p><p>在程序中Client代表我們機器人本身，他的Event直接表示了他能對那些事情做出反應<br>也因此，Client的Event功能非常的多</p><p>今天我們來說說MessageDelete跟MessageUpdate事件，也就是當有人刪除訊息跟更新訊息的時要做的事情</p><p><img src="https://i.imgur.com/OZ84Nlj.png" alt="12-3"><br><img src="https://i.imgur.com/FSfPNZq.png" alt="12-4"></p><p>Discord.js的文庫其實也蠻簡單的，不用看那些英文在說甚麼，透過事件名稱跟屬性已經足夠我們知道<br>當有人刪除留言時，Discord會將Message返還給我們<br>當有人更新留言時，Discord會將oldMessage跟newMessage</p><p><img src="https://i.imgur.com/ouPctCU.png" alt="12-5"></p><p>請試著用console.log查看Discord分別給了我們甚麼內容吧!</p><p>之後我們把屬性中我們需要的元素拿出來組成字串，發送到原本的頻道去</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//抓刪 刪除事件</span><br>client.on(<span class="hljs-string">&#x27;messageDelete&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">message</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (!message.guild) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//只要是來自群組的訊息</span><br>    <span class="hljs-keyword">let</span> mStr = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">try</span>&#123;<br>        mStr = mStr+<br>            <span class="hljs-string">`事件 刪除\n`</span>+<br>            <span class="hljs-string">`使用者 <span class="hljs-subst">$&#123;message.member.user.username&#125;</span>\n`</span>+<br>            <span class="hljs-string">`群組 <span class="hljs-subst">$&#123;message.channel.name&#125;</span>\n`</span>+<br>            <span class="hljs-string">`刪除內容 <span class="hljs-subst">$&#123;message.content&#125;</span>`</span>;<br><br>        client.channels.get(message.channel.id).send(mStr);<br>    &#125;<span class="hljs-keyword">catch</span>(err)&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;messageDeleteError&quot;</span>,err);<br>    &#125;<br>&#125;);<br><br><span class="hljs-comment">//抓刪 更新事件</span><br>client.on(<span class="hljs-string">&#x27;messageUpdate&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">oldMessage, newMessage</span>) </span>&#123;<br>    <span class="hljs-keyword">if</span> (!oldMessage.guild || !newMessage.guild) <span class="hljs-keyword">return</span>;<br>    mStr = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>        mStr = mStr +<br>            <span class="hljs-string">`事件 更新\n`</span> +<br>            <span class="hljs-string">`使用者 <span class="hljs-subst">$&#123;oldMessage.member.user.username&#125;</span>\n`</span> +<br>            <span class="hljs-string">`群組   <span class="hljs-subst">$&#123;oldMessage.channel.name&#125;</span>\n`</span> +<br>            <span class="hljs-string">`舊對話 <span class="hljs-subst">$&#123;oldMessage.content&#125;</span>\n`</span> +<br>            <span class="hljs-string">`新對話 <span class="hljs-subst">$&#123;newMessage.content&#125;</span>`</span>;<br><br>        client.channels.get(oldMessage.channel.id).send(mStr);<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;messageUpdateError&#x27;</span>, err);<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p>這樣，你的bot就會在頻道有人刪除訊息時接收訊息，然後把刪除的內容貼出來玩羞恥play了(</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day11 - 音樂系統(2)</title>
    <link href="/2020/09/11/12thDay11/"/>
    <url>/2020/09/11/12thDay11/</url>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/0pmzip7.png" alt="11-1"></p><p>今天我們把剩下的功能做完</p><p>繼續做之前，我們回顧一下音樂播放的其中一小段</p><p><img src="https://i.imgur.com/LxEyK0Q.png" alt="11-2"></p><p>在playMusic2這段，我們將音樂網址與相關設定打入connection後，connection開始播放歌曲，並且返還控制項；<br>我們宣告一個dispatcher來接收控制項，並且在下一行監聽finish事件</p><p>從這一段會注意到他解決了一件事情，那就是我們該怎麼監測歌曲播放的狀態?</p><p>dispatcher這個物件在被賦予後，可以直接當成是我們的遙控器<br>不管是監聽歌曲是不是播完了，還是調整音量&amp;咖歌等，都會需要調用dispatcher</p><p>所以如果之後我們要繼續實作咖歌&amp;循環播放等功能，除了需要調用歌曲清單以外，還需要調用到dispatcher</p><p><img src="https://i.imgur.com/pcZSGNK.png" alt="11-3"></p><p>這邊在音樂系統的最上方，將dispatcher宣告成全域變數<br>並且記得原本宣告dispatcher的const要拿掉!</p><p>觀念說完，那我們繼續:</p><h2 id="中斷歌曲"><a href="#中斷歌曲" class="headerlink" title="中斷歌曲"></a>中斷歌曲</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-comment">//?skip</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">skipMusic</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-comment">//將歌曲關閉，觸發finish事件</span><br>    <span class="hljs-keyword">if</span> (dispatcher !== <span class="hljs-literal">undefined</span>) dispatcher.end();<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="重播歌曲"><a href="#重播歌曲" class="headerlink" title="重播歌曲"></a>重播歌曲</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>?replay<br><span class="hljs-keyword">function</span> replayMusic() &#123;<br>    <span class="hljs-keyword">if</span> (musicList.length &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-regexp">//</span>把當前曲目再推一個到最前面<br>        musicList.unshift(musicList[<span class="hljs-number">0</span>]);<br>        <span class="hljs-regexp">//</span>將歌曲關閉，觸發finish事件<br>        <span class="hljs-regexp">//</span>finish事件將清單第一首歌排出，然後繼續播放下一首<br>        <span class="hljs-keyword">if</span> (dispatcher !== undefined) dispatcher.end();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="顯示歌曲清單"><a href="#顯示歌曲清單" class="headerlink" title="顯示歌曲清單"></a>顯示歌曲清單</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//?queue</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">queueShow</span>(<span class="hljs-params">channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (musicList.length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">let</span> info;<br>            <span class="hljs-keyword">let</span> message = <span class="hljs-string">&#x27;&#x27;</span>;<br>            <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; musicList.length; i++) &#123;<br>                <span class="hljs-comment">//從連結中獲取歌曲資訊 標題 總長度等</span><br>                info = <span class="hljs-keyword">await</span> ytdl.getInfo(musicList[i]);<br>                <span class="hljs-comment">//歌曲標題</span><br>                title = info.videoDetails.title;<br>                <span class="hljs-comment">//串字串</span><br>                message = message + <span class="hljs-string">`\n<span class="hljs-subst">$&#123;i+<span class="hljs-number">1</span>&#125;</span>. <span class="hljs-subst">$&#123;title&#125;</span>`</span>;<br>            &#125;<br>            <span class="hljs-comment">//把最前面的\n拿掉</span><br>            message = message.substring(<span class="hljs-number">1</span>, message.length);<br>            client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(message))<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;queueShowError&#x27;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="顯示當前歌曲"><a href="#顯示當前歌曲" class="headerlink" title="顯示當前歌曲"></a>顯示當前歌曲</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//?np</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">nowPlayMusic</span>(<span class="hljs-params">channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (dispatcher !== <span class="hljs-literal">undefined</span> &amp;&amp; musicList.length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">//從連結中獲取歌曲資訊 標題 總長度等</span><br>            <span class="hljs-keyword">const</span> info = <span class="hljs-keyword">await</span> ytdl.getInfo(musicList[<span class="hljs-number">0</span>]);<br>            <span class="hljs-comment">//歌曲標題</span><br>            <span class="hljs-keyword">const</span> title = info.videoDetails.title;<br>            <span class="hljs-comment">//歌曲全長(s)</span><br>            <span class="hljs-keyword">const</span> songLength = info.videoDetails.lengthSeconds;<br>            <span class="hljs-comment">//當前播放時間(ms)</span><br>            <span class="hljs-keyword">const</span> nowSongLength = <span class="hljs-built_in">Math</span>.floor(dispatcher.streamTime / <span class="hljs-number">1000</span>);<br>            <span class="hljs-comment">//串字串</span><br>            <span class="hljs-keyword">const</span> message = <span class="hljs-string">`<span class="hljs-subst">$&#123;title&#125;</span>\n<span class="hljs-subst">$&#123;streamString(songLength,nowSongLength)&#125;</span>`</span>;<br>            client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(message))<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;nowPlayMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//▬▬▬▬▬▬▬▬▬?▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">streamString</span>(<span class="hljs-params">songLength, nowSongLength</span>) </span>&#123;<br>    <span class="hljs-keyword">let</span> mainText = <span class="hljs-string">&#x27;?&#x27;</span>;<br>    <span class="hljs-keyword">const</span> secondText = <span class="hljs-string">&#x27;▬&#x27;</span>;<br>    <span class="hljs-keyword">const</span> whereMain = <span class="hljs-built_in">Math</span>.floor((nowSongLength / songLength) * <span class="hljs-number">100</span>);<br>    <span class="hljs-keyword">let</span> message = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">30</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span> (i * <span class="hljs-number">3.3</span> + <span class="hljs-number">1</span> &gt;= whereMain) &#123;<br>            message = message + mainText;<br>            mainText = secondText;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            message = message + secondText;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> message;<br>&#125;<br></code></pre></td></tr></table></figure><hr><p>這樣，我們的音樂系統的基本教學就告一段落</p><p><img src="https://i.imgur.com/MUI4mAt.png" alt="11-4"></p><p><img src="https://i.imgur.com/4i1uqpf.png" alt="11-5"></p><p><img src="https://i.imgur.com/HBYoQl6.png" alt="11-6"></p><p>其實音樂功能除了本篇教學的基本以外，還有很多花樣可以玩<br>這個寫法有個很大的問題是，有多個群組同時在使用時，機器人的歌單會掛掉</p><p>筆者明天想先說其他主題，音樂系統的教學先告一段落<br>因為繼續完善下去的話，程式的可讀性會降低，現在的音樂系統筆者認為是最純粹，最好理解的了<br>同學們不訪想想該怎麼完善這些問題，我們明天見~</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day10 - 音樂系統(1)</title>
    <link href="/2020/09/10/12thDay10/"/>
    <url>/2020/09/10/12thDay10/</url>
    
    <content type="html"><![CDATA[<p>昨天我們把架構很籠統的說了大概<br>今天的內容會專注在編程為主，discord.js的元素不會再多贅述<br>可能會比較枯燥一點<br>萬里長路始於足下，同學們加油~</p><h2 id="音樂總方法"><a href="#音樂總方法" class="headerlink" title="音樂總方法"></a>音樂總方法</h2><p><img src="https://i.imgur.com/5wwXNdo.png" alt="10-1"></p><p>新增一個音樂系統的分類，然後在底下創建MusicFunction方法<br>一併把OnMessage事件下的音樂指令導向這個方法<br>這樣Message事件就不會因為我們的程式碼肥大，進而影響閱讀</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">MusicFunction</span><span class="hljs-params">(msg)</span> </span>&#123;<br>    <span class="hljs-comment">//將訊息內的前綴字截斷，後面的字是我們要的</span><br>    <span class="hljs-keyword">const</span> content = msg.content.substring(prefix[<span class="hljs-number">1</span>].Value.length);<br>    <span class="hljs-comment">//指定我們的間隔符號</span><br>    <span class="hljs-keyword">const</span> splitText = <span class="hljs-string">&#x27; &#x27;</span>;<br>    <span class="hljs-comment">//用間隔符號隔開訊息 contents[0] = 指令,contents[1] = 參數</span><br>    <span class="hljs-keyword">const</span> contents = content.split(splitText);<br><br>    <span class="hljs-keyword">switch</span> (contents[<span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;play&#x27;</span>:<br>            <span class="hljs-comment">//點歌&amp;播放歌曲功能</span><br>            playMusic(msg, contents);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;replay&#x27;</span>:<br>            <span class="hljs-comment">//重播當前歌曲</span><br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;np&#x27;</span>:<br>            <span class="hljs-comment">//當前歌曲資訊</span><br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;queue&#x27;</span>:<br>            <span class="hljs-comment">//歌曲清單</span><br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;skip&#x27;</span>:<br>            <span class="hljs-comment">//中斷歌曲</span><br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;disconnect&#x27;</span>:<br>            <span class="hljs-comment">//退出語音頻道並且清空歌曲清單</span><br>            disconnectMusic(msg.guild.id, msg.channel.id);<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>按照昨天說的，我們分割字串後，用switch case把每個指令獨立出來<br>後面指令也會function化，用呼叫的更加美觀</p><h2 id="歌曲指令-play"><a href="#歌曲指令-play" class="headerlink" title="歌曲指令 play"></a>歌曲指令 play</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//?play</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">playMusic</span>(<span class="hljs-params">msg, contents</span>) </span>&#123;<br>    <span class="hljs-comment">//定義我們的第一個參數必需是網址</span><br>    <span class="hljs-keyword">const</span> urlED = contents[<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//第一個參數不是連結就要篩選掉</span><br>        <span class="hljs-keyword">if</span> (urlED.substring(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>) !== <span class="hljs-string">&#x27;http&#x27;</span>) <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.1&#x27;</span>);<br><br>        <span class="hljs-comment">//透過library判斷連結是否可運行</span><br>        <span class="hljs-keyword">const</span> validate = <span class="hljs-keyword">await</span> ytdl.validateURL(urlED);<br>        <span class="hljs-keyword">if</span> (!validate) <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.2&#x27;</span>);<br><br>        <span class="hljs-comment">//獲取歌曲資訊</span><br>        <span class="hljs-keyword">const</span> info = <span class="hljs-keyword">await</span> ytdl.getInfo(urlED);<br>        <span class="hljs-comment">//判斷資訊是否正常</span><br>        <span class="hljs-keyword">if</span> (info.videoDetails) &#123;<br>            <span class="hljs-comment">//指令下達者是否在語音頻道</span><br>            <span class="hljs-keyword">if</span> (msg.member.voice.channel) &#123;<br>                <span class="hljs-comment">//判斷bot是否已經連到語音頻道 是:將歌曲加入歌單 不是:進入語音頻道並且播放歌曲</span><br>                <span class="hljs-keyword">if</span> (!client.voice.connections.get(msg.guild.id)) &#123;<br>                    <span class="hljs-comment">//將歌曲加入歌單</span><br>                    musicList.push(urlED);<br>                    <span class="hljs-comment">//進入語音頻道</span><br>                    msg.member.voice.channel.join()<br>                        .then(<span class="hljs-function"><span class="hljs-params">connection</span> =&gt;</span> &#123;<br>                            msg.reply(<span class="hljs-string">&#x27;來了~&#x27;</span>);<br>                            <span class="hljs-keyword">const</span> guildID = msg.guild.id;<br>                            <span class="hljs-keyword">const</span> channelID = msg.channel.id;<br>                            <span class="hljs-comment">//播放歌曲</span><br>                            playMusic2(connection, guildID, channelID);<br>                        &#125;)<br>                        .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>                            msg.reply(<span class="hljs-string">&#x27;bot進入語音頻道時發生錯誤，請再試一次&#x27;</span>);<br>                            <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playMusicError2&#x27;</span>);<br>                        &#125;)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-comment">//將歌曲加入歌單</span><br>                    musicList.push(urlED);<br>                    msg.reply(<span class="hljs-string">&#x27;已將歌曲加入歌單!&#x27;</span>);<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;請先進入頻道:3...&#x27;</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.3&#x27;</span>);<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://i.imgur.com/RGusrht.png" alt="10-2"></p><p>寫到這會發現需要一個填充歌曲列表的變數，歌曲列表應該是不管到哪一個音樂系統下都可以使用的，所以我們宣告在function外面(全域變數)</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>?play 遞迴函式<br>async <span class="hljs-keyword">function</span> playMusic2(connection, guildID, channelID) &#123;<br>    try &#123;<br>        <span class="hljs-regexp">//</span>播放前歌曲清單不能沒有網址<br>        <span class="hljs-keyword">if</span> (musicList.length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-regexp">//</span>設定音樂相關參數<br>            const streamOptions = &#123;<br>                seek: <span class="hljs-number">0</span>,<br>                volume: <span class="hljs-number">0.5</span>,<br>                Bitrate: <span class="hljs-number">192000</span>,<br>                Passes: <span class="hljs-number">1</span>,<br>                highWaterMark: <span class="hljs-number">1</span><br>            &#125;;<br>            <span class="hljs-regexp">//</span>讀取清單第一位網址<br>            const stream = await ytdl(musicList[<span class="hljs-number">0</span>], &#123;<br>                filter: <span class="hljs-string">&#x27;audioonly&#x27;</span>,<br>                quality: <span class="hljs-string">&#x27;highestaudio&#x27;</span>,<br>                highWaterMark: <span class="hljs-number">26214400</span> <span class="hljs-regexp">//</span><span class="hljs-number">25</span>ms<br>            &#125;)<br><br>            <span class="hljs-regexp">//</span>播放歌曲，並且存入dispatcher<br>            const dispatcher = connection.play(stream, streamOptions);<br>            <span class="hljs-regexp">//</span>監聽歌曲播放結束事件<br>            dispatcher.on(<span class="hljs-string">&quot;finish&quot;</span>, finish =&gt; &#123;<br>                <span class="hljs-regexp">//</span>將清單中第一首歌清除<br>                <span class="hljs-keyword">if</span> (musicList.length &gt; <span class="hljs-number">0</span>) musicList.shift();<br>                <span class="hljs-regexp">//</span>播放歌曲<br>                playMusic2(connection, guildID, channelID);<br>            &#125;)<br>        &#125; <span class="hljs-keyword">else</span> disconnectMusic(guildID, channelID); <span class="hljs-regexp">//</span>清空歌單並且退出語音頻道<br>    &#125; catch (err) &#123;<br>        console.log(err, <span class="hljs-string">&#x27;playMusic2Error&#x27;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="歌曲指令-disconnect"><a href="#歌曲指令-disconnect" class="headerlink" title="歌曲指令 disconnect"></a>歌曲指令 disconnect</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//?disconnect</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">disconnectMusic</span>(<span class="hljs-params">guildID, channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//判斷bot是否在此群組的語音頻道</span><br>        <span class="hljs-keyword">if</span> (client.voice.connections.get(guildID)) &#123;<br>            <span class="hljs-comment">//清空歌曲清單</span><br>            musicList = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>();<br>            <span class="hljs-comment">//退出語音頻道</span><br>            client.voice.connections.get(guildID).disconnect();<br><br>            client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;晚安~&#x27;</span>));<br>        &#125; <span class="hljs-keyword">else</span> client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;可是..我還沒進來:3&#x27;</span>))<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;disconnectMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>到此，音樂系統的一個基本循環(播放-&gt;退出)就寫完了<br>明天我們繼續完善剩下的功能</p><p>以下是今天的程式碼</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//#region 全域變數</span><br><span class="hljs-keyword">const</span> Discord = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;discord.js&#x27;</span>);<br><span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> Discord.Client();<br><span class="hljs-keyword">const</span> ytdl = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;ytdl-core&#x27;</span>);<br><span class="hljs-keyword">const</span> auth = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./JSONHome/auth.json&#x27;</span>);<br><span class="hljs-keyword">const</span> prefix = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./JSONHome/prefix.json&#x27;</span>);<br><br><span class="hljs-comment">//#endregion</span><br><br><span class="hljs-comment">//#region 登入</span><br>client.login(auth.key);<br><br>client.on(<span class="hljs-string">&#x27;ready&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Logged in as <span class="hljs-subst">$&#123;client.user.tag&#125;</span>!`</span>);<br>&#125;);<br><br><span class="hljs-comment">//#endregion</span><br><br><span class="hljs-comment">//#region message事件入口</span><br>client.on(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function"><span class="hljs-params">msg</span> =&gt;</span> &#123;<br>    <span class="hljs-comment">//前置判斷</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (!msg.guild || !msg.member) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//訊息內不存在guild元素 = 非群組消息(私聊)</span><br>        <span class="hljs-keyword">if</span> (!msg.member.user) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//幫bot值多拉一層，判斷上層物件是否存在</span><br>        <span class="hljs-keyword">if</span> (msg.member.user.bot) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//訊息內bot值為正 = 此消息為bot發送</span><br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//字串分析</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">let</span> tempPrefix = <span class="hljs-string">&#x27;-1&#x27;</span>;<br>        <span class="hljs-keyword">const</span> prefixED = <span class="hljs-built_in">Object</span>.keys(prefix); <span class="hljs-comment">//前綴符號定義</span><br>        prefixED.forEach(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (msg.content.substring(<span class="hljs-number">0</span>, prefix[element].Value.length) === prefix[element].Value) &#123;<br>                tempPrefix = element;<br>            &#125;<br>        &#125;);<br><br>        <span class="hljs-comment">//實作</span><br>        <span class="hljs-keyword">switch</span> (tempPrefix) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;0&#x27;</span>: <span class="hljs-comment">//文字回應功能</span><br>                <span class="hljs-keyword">const</span> cmd = msg.content.substring(prefix[tempPrefix].Value.length).split(<span class="hljs-string">&#x27; &#x27;</span>); <span class="hljs-comment">//以空白分割前綴以後的字串</span><br>                <span class="hljs-keyword">switch</span> (cmd[<span class="hljs-number">0</span>]) &#123;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ping&#x27;</span>:<br>                        msg.channel.send(<span class="hljs-string">&#x27;pong&#x27;</span>);<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;老婆&#x27;</span>:<br>                        msg.reply(<span class="hljs-string">&#x27;你沒有老婆!!&#x27;</span>);<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;myAvatar&#x27;</span>:<br>                        <span class="hljs-keyword">const</span> avatar = GetMyAvatar(msg);<br>                        <span class="hljs-keyword">if</span> (avatar.files) msg.channel.send(<span class="hljs-string">`<span class="hljs-subst">$&#123;msg.author&#125;</span>`</span>, avatar).catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123; <span class="hljs-built_in">console</span>.log(err) &#125;);<br>                        <span class="hljs-keyword">break</span>;<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;1&#x27;</span>: <span class="hljs-comment">//音樂指令</span><br>                MusicFunction(msg);<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;OnMessageError&#x27;</span>, err);<br>    &#125;<br>&#125;);<br><br><span class="hljs-comment">//#endregion</span><br><br><span class="hljs-comment">//#region 音樂系統</span><br><br><span class="hljs-comment">//歌曲清單</span><br><span class="hljs-keyword">let</span> musicList = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>();<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">MusicFunction</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-comment">//將訊息內的前綴字截斷，後面的字是我們要的</span><br>    <span class="hljs-keyword">const</span> content = msg.content.substring(prefix[<span class="hljs-number">1</span>].Value.length);<br>    <span class="hljs-comment">//指定我們的間隔符號</span><br>    <span class="hljs-keyword">const</span> splitText = <span class="hljs-string">&#x27; &#x27;</span>;<br>    <span class="hljs-comment">//用間隔符號隔開訊息 contents[0] = 指令,contents[1] = 參數</span><br>    <span class="hljs-keyword">const</span> contents = content.split(splitText);<br><br>    <span class="hljs-keyword">switch</span> (contents[<span class="hljs-number">0</span>]) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;play&#x27;</span>:<br>            <span class="hljs-comment">//點歌&amp;播放歌曲功能</span><br>            playMusic(msg, contents);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;replay&#x27;</span>:<br>            <span class="hljs-comment">//重播當前歌曲</span><br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;np&#x27;</span>:<br>            <span class="hljs-comment">//當前歌曲資訊</span><br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;queue&#x27;</span>:<br>            <span class="hljs-comment">//歌曲清單</span><br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;skip&#x27;</span>:<br>            <span class="hljs-comment">//中斷歌曲</span><br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;disconnect&#x27;</span>:<br>            <span class="hljs-comment">//退出語音頻道並且清空歌曲清單</span><br>            disconnectMusic(msg.guild.id, msg.channel.id);<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?play</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">playMusic</span>(<span class="hljs-params">msg, contents</span>) </span>&#123;<br>    <span class="hljs-comment">//定義我們的第一個參數必需是網址</span><br>    <span class="hljs-keyword">const</span> urlED = contents[<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//第一個參數不是連結就要篩選掉</span><br>        <span class="hljs-keyword">if</span> (urlED.substring(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>) !== <span class="hljs-string">&#x27;http&#x27;</span>) <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.1&#x27;</span>);<br><br>        <span class="hljs-comment">//透過library判斷連結是否可運行</span><br>        <span class="hljs-keyword">const</span> validate = <span class="hljs-keyword">await</span> ytdl.validateURL(urlED);<br>        <span class="hljs-keyword">if</span> (!validate) <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.2&#x27;</span>);<br><br>        <span class="hljs-comment">//獲取歌曲資訊</span><br>        <span class="hljs-keyword">const</span> info = <span class="hljs-keyword">await</span> ytdl.getInfo(urlED);<br>        <span class="hljs-comment">//判斷資訊是否正常</span><br>        <span class="hljs-keyword">if</span> (info.videoDetails) &#123;<br>            <span class="hljs-comment">//指令下達者是否在語音頻道</span><br>            <span class="hljs-keyword">if</span> (msg.member.voice.channel) &#123;<br>                <span class="hljs-comment">//判斷bot是否已經連到語音頻道 是:將歌曲加入歌單 不是:進入語音頻道並且播放歌曲</span><br>                <span class="hljs-keyword">if</span> (!client.voice.connections.get(msg.guild.id)) &#123;<br>                    <span class="hljs-comment">//將歌曲加入歌單</span><br>                    musicList.push(urlED);<br>                    <span class="hljs-comment">//進入語音頻道</span><br>                    msg.member.voice.channel.join()<br>                        .then(<span class="hljs-function"><span class="hljs-params">connection</span> =&gt;</span> &#123;<br>                            msg.reply(<span class="hljs-string">&#x27;來了~&#x27;</span>);<br>                            <span class="hljs-keyword">const</span> guildID = msg.guild.id;<br>                            <span class="hljs-keyword">const</span> channelID = msg.channel.id;<br>                            <span class="hljs-comment">//播放歌曲</span><br>                            playMusic2(connection, guildID, channelID);<br>                        &#125;)<br>                        .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>                            msg.reply(<span class="hljs-string">&#x27;bot進入語音頻道時發生錯誤，請再試一次&#x27;</span>);<br>                            <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playMusicError2&#x27;</span>);<br>                        &#125;)<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-comment">//將歌曲加入歌單</span><br>                    musicList.push(urlED);<br>                    msg.reply(<span class="hljs-string">&#x27;已將歌曲加入歌單!&#x27;</span>);<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;請先進入頻道:3...&#x27;</span>);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> msg.reply(<span class="hljs-string">&#x27;The link is not working.3&#x27;</span>);<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?play 遞迴函式</span><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">playMusic2</span>(<span class="hljs-params">connection, guildID, channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//播放前歌曲清單不能沒有網址</span><br>        <span class="hljs-keyword">if</span> (musicList.length &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">//設定音樂相關參數</span><br>            <span class="hljs-keyword">const</span> streamOptions = &#123;<br>                <span class="hljs-attr">seek</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-attr">volume</span>: <span class="hljs-number">0.5</span>,<br>                <span class="hljs-attr">Bitrate</span>: <span class="hljs-number">192000</span>,<br>                <span class="hljs-attr">Passes</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-attr">highWaterMark</span>: <span class="hljs-number">1</span><br>            &#125;;<br>            <span class="hljs-comment">//讀取清單第一位網址</span><br>            <span class="hljs-keyword">const</span> stream = <span class="hljs-keyword">await</span> ytdl(musicList[<span class="hljs-number">0</span>], &#123;<br>                <span class="hljs-attr">filter</span>: <span class="hljs-string">&#x27;audioonly&#x27;</span>,<br>                <span class="hljs-attr">quality</span>: <span class="hljs-string">&#x27;highestaudio&#x27;</span>,<br>                <span class="hljs-attr">highWaterMark</span>: <span class="hljs-number">26214400</span> <span class="hljs-comment">//25ms</span><br>            &#125;)<br><br>            <span class="hljs-comment">//播放歌曲，並且存入dispatcher</span><br>            <span class="hljs-keyword">const</span> dispatcher = connection.play(stream, streamOptions);<br>            <span class="hljs-comment">//監聽歌曲播放結束事件</span><br>            dispatcher.on(<span class="hljs-string">&quot;finish&quot;</span>, <span class="hljs-function"><span class="hljs-params">finish</span> =&gt;</span> &#123;<br>                <span class="hljs-comment">//將清單中第一首歌清除</span><br>                <span class="hljs-keyword">if</span> (musicList.length &gt; <span class="hljs-number">0</span>) musicList.shift();<br>                <span class="hljs-comment">//播放歌曲</span><br>                playMusic2(connection, guildID, channelID);<br>            &#125;)<br>        &#125; <span class="hljs-keyword">else</span> disconnectMusic(guildID, channelID); <span class="hljs-comment">//清空歌單並且退出語音頻道</span><br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;playMusic2Error&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//?disconnect</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">disconnectMusic</span>(<span class="hljs-params">guildID, channelID</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//判斷bot是否在此群組的語音頻道</span><br>        <span class="hljs-keyword">if</span> (client.voice.connections.get(guildID)) &#123;<br>            <span class="hljs-comment">//清空歌曲清單</span><br>            musicList = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>();<br>            <span class="hljs-comment">//退出語音頻道</span><br>            client.voice.connections.get(guildID).disconnect();<br><br>            client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;晚安~&#x27;</span>));<br>        &#125; <span class="hljs-keyword">else</span> client.channels.fetch(channelID).then(<span class="hljs-function"><span class="hljs-params">channel</span> =&gt;</span> channel.send(<span class="hljs-string">&#x27;可是..我還沒進來:3&#x27;</span>))<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(err, <span class="hljs-string">&#x27;disconnectMusicError&#x27;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//#endregion</span><br><br><span class="hljs-comment">//#region 子類方法</span><br><span class="hljs-comment">//獲取頭像</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetMyAvatar</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">return</span> &#123;<br>            <span class="hljs-attr">files</span>: [&#123;<br>                <span class="hljs-attr">attachment</span>: msg.author.displayAvatarURL(<span class="hljs-string">&#x27;png&#x27;</span>, <span class="hljs-literal">true</span>),<br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;avatar.jpg&#x27;</span><br>            &#125;]<br>        &#125;;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;GetMyAvatar,Error&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//#endregion</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day9 - 註解摺疊與音樂系統介紹</title>
    <link href="/2020/09/09/12thDay9/"/>
    <url>/2020/09/09/12thDay9/</url>
    
    <content type="html"><![CDATA[<p>昨天我們把機器人的架構做了些修改，對功能做了分類<br>今天我們稍微整理一下程式，並且說說音樂系統；<br>如果正在觀看文章的小夥伴不需要音樂系統可以跳過接下來三天的內容，不會影響後續教學的!</p><h1 id="region"><a href="#region" class="headerlink" title="region"></a>region</h1><p><img src="https://i.imgur.com/oZB8tKp.png" alt="9-1"></p><p>開始寫音樂前，因為程式碼準備要開始增加了<br>筆者先對所有程式做了分類<br>#region<br>#endregion<br>被這兩段覆蓋的程式碼可以摺疊，摺疊後只看的到region後的字</p><p><img src="https://i.imgur.com/w6UlfLn.png" alt="9-2"></p><p>這個功能必須IDE有支援才可以使用，VSCode支援這個好用的收納方法，所以我們就好好利用一下!</p><hr><h1 id="函式庫安裝"><a href="#函式庫安裝" class="headerlink" title="函式庫安裝"></a>函式庫安裝</h1><p>那麼我們準備要開始音樂功能了喔!<br>在正式開始撰寫前，我們先開啟終端機<br>依序安裝<br>npm install ffmpeg-static<br>npm install opusscript<br>跟<br>npm install ytdl-core</p><p><img src="https://i.imgur.com/zYAoHnj.png" alt="9-3"></p><p>記得路徑要在project的根目錄下</p><p>這些都是discordBot要播放音樂時需要的插件<br>其中ytdl-core是後續抓取youtube歌曲的library，會需要透過程式來調用<br>所以安裝完之後，我們還要在最上面引用ytdl-core</p><p><img src="https://i.imgur.com/zyCqZa8.png" alt="9-4"></p><p>這樣一來，撰寫音樂系統的前置作業都算完成了!<br>那麼接下來就該開始撰寫程式囉?nonono</p><p>實際上我們在撰寫程式前應該先去參考網路上是否有重複的功能可以參考</p><p>既然要寫音樂系統，那當然必需先參考其他人的音樂機器人是怎麼寫的囉!</p><hr><h1 id="音樂系統整理"><a href="#音樂系統整理" class="headerlink" title="音樂系統整理"></a>音樂系統整理</h1><p>Discord 教學 - 如何簡單加音樂機器人進伺服器 (Rythm)<br><a href="https://fightwennote.blogspot.com/2018/06/discord-rythm.html">https://fightwennote.blogspot.com/2018/06/discord-rythm.html</a></p><p>Rythm是筆者在研究音樂系統前，看過最多次的音樂Bot<br>Rythm的功能非常完善，觀察他的指令對於描繪心目中那個接收音樂指令的Bot架構十分有幫助</p><p><img src="https://i.imgur.com/INTGTOT.png" alt="9-5"></p><p><img src="https://i.imgur.com/sIgLCsj.png" alt="9-6"></p><p>!play (網址)</p><p>提供youtube音樂的網址，bot需判斷網址是否符合規範，是不是抓得到歌<br>並且判斷使用者是不是在語音頻道，一切都正常無誤後反饋音樂資訊並且播放歌曲</p><p><img src="https://i.imgur.com/XNDlGTj.png" alt="9-7"></p><p>!replay</p><p>輸入此指令後，讓歌曲重頭開始播放<br>與play一樣，如果使用者不在音樂頻道中，則此指令失效</p><p><img src="https://i.imgur.com/rHmPN8m.png" alt="9-8"></p><p>!np </p><p>顯示當前播放歌曲資訊</p><p><img src="https://i.imgur.com/wqhXg2H.png" alt="9-9"></p><p>!queue</p><p>顯示歌曲清單</p><p><img src="https://i.imgur.com/mfzApM9.png" alt="9-10"></p><p>!skip</p><p>跳過當前播放曲目</p><hr><p>其他還有循環播放，單曲循環，請機器人退出語音廳等…</p><p>我們大概知道了，一個音樂系統需要<br>前綴詞(!)，表示我現在下的指令是音樂系統</p><p>音樂指令(play)，表示我在音樂系統中要使用哪一個功能</p><p>內容(xxx.com.tw)，不是一定會有，當指定功能需要參數時，我們需要給予他對應的內容</p><p>間隔符號(空格) 用來將音樂指令與內容分隔開的決定性符號</p><p><img src="https://i.imgur.com/J7cWTuc.png" alt="9-11"></p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day8 - 呃...他會需要更多前綴字</title>
    <link href="/2020/09/08/12thDay8/"/>
    <url>/2020/09/08/12thDay8/</url>
    
    <content type="html"><![CDATA[<p>昨天我們對message事件做了完善的前置判斷</p><p>如果你做的跟範例一樣，這時我們可以在 ! 後面加入任何字串，來命令機器人做對應的事情</p><p>假設之後機器人的指令不斷增加，除了單純的文字回覆，可能還會有查表，投票，管理員指令，權限控制與音樂功能等</p><p>這種時候、比起單純的只使用!，機器人支援多種前綴詞顯然是更好的分類手段<br>今天我們進一步修改昨天已經完善的message框架，並且做出音樂功能(假)</p><hr><p>首先，請幫我在DiscordBot資料夾內新增一個JSONHome資料夾，把auth.json放進去，然後新增一個prefix.json檔</p><p><img src="https://i.imgur.com/fW5erlr.png" alt="8-1"><br><img src="https://i.imgur.com/0Io1ydQ.png" alt="8-2"></p><p>(prefix.json的內容)</p><p>bot.js的最上方幫我加載prefix.json</p><p><img src="https://i.imgur.com/0kIli9N.png" alt="8-3"></p><p>(auth.json的路徑記得也要一併修改喔!)</p><hr><p>我們把前綴字整理成了JSONArray物件<br>這樣一來，我們就做到了前綴字的統整，之後不管是新增或調用參數都會方便許多</p><p>然後我們把下面的message事件改成這樣</p><p><img src="https://i.imgur.com/m35t6Db.png" alt="8-4"></p><p>簡單來說就是從原本只判斷驚嘆號，變成只要前綴詞符合prefix.json內的任一Value就給過，並且由tempPrefix來接受符合條件的參數<br>同學們可以參考昨天的範例，來比對每一行的作用。</p><p>做到這裡，我們已經可以判斷多種前綴了，不過還沒在實作區判斷成功的是哪一個前綴<br>原本我們打!ping，機器人會回pong<br>現在打@ping也會通過了，如果prefix.json內的值不是@而是#或$$#@#$@甚麼的也一樣，依此類推<br>切割字串的方式也是可以動態化的，不過筆者不在此贅述。<br>我們繼續完善後續判斷</p><p><img src="https://i.imgur.com/wpLUo7R.png" alt="8-5"></p><p>這樣，如果使用者輸入!xxx，就會進入上方的文字回應功能<br>輸入@xxx，就會進入下方的音樂指令了</p><p><img src="https://i.imgur.com/xB8Rpkt.png" alt="8-6"></p><hr><p>音樂指令的部份我們明天繼續製作，以下是今天的完整程式碼:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Discord = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;discord.js&#x27;</span>);<br><span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> Discord.Client();<br><span class="hljs-keyword">const</span> auth = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./JSONHome/auth.json&#x27;</span>);<br><span class="hljs-keyword">const</span> prefix = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./JSONHome/prefix.json&#x27;</span>);<br><br>client.login(auth.key);<br><br>client.on(<span class="hljs-string">&#x27;ready&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Logged in as <span class="hljs-subst">$&#123;client.user.tag&#125;</span>!`</span>);<br>&#125;);<br><br>client.on(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function"><span class="hljs-params">msg</span> =&gt;</span> &#123;<br>    <span class="hljs-comment">//前置判斷</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (!msg.guild || !msg.member) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//訊息內不存在guild元素 = 非群組消息(私聊)</span><br>        <span class="hljs-keyword">if</span> (!msg.member.user) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//幫bot值多拉一層，判斷上層物件是否存在</span><br>        <span class="hljs-keyword">if</span> (msg.member.user.bot) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//訊息內bot值為正 = 此消息為bot發送</span><br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//字串分析</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">let</span> tempPrefix = <span class="hljs-string">&#x27;-1&#x27;</span>;<br>        <span class="hljs-keyword">const</span> prefixED = <span class="hljs-built_in">Object</span>.keys(prefix); <span class="hljs-comment">//前綴符號定義</span><br>        prefixED.forEach(<span class="hljs-function"><span class="hljs-params">element</span> =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (msg.content.substring(<span class="hljs-number">0</span>, prefix[element].Value.length) === prefix[element].Value) &#123;<br>                tempPrefix = element;<br>            &#125;<br>        &#125;);<br><br>        <span class="hljs-comment">//實作</span><br>        <span class="hljs-keyword">switch</span> (tempPrefix) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;0&#x27;</span>: <span class="hljs-comment">//文字回應功能</span><br>                <span class="hljs-keyword">const</span> cmd = msg.content.substring(prefix[tempPrefix].Value.length).split(<span class="hljs-string">&#x27; &#x27;</span>); <span class="hljs-comment">//以空白分割前綴以後的字串</span><br>                <span class="hljs-keyword">switch</span> (cmd[<span class="hljs-number">0</span>]) &#123;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ping&#x27;</span>:<br>                        msg.channel.send(<span class="hljs-string">&#x27;pong&#x27;</span>);<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;老婆&#x27;</span>:<br>                        msg.reply(<span class="hljs-string">&#x27;你沒有老婆!!&#x27;</span>);<br>                        <span class="hljs-keyword">break</span>;<br>                    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;myAvatar&#x27;</span>:<br>                        <span class="hljs-keyword">const</span> avatar = GetMyAvatar(msg);<br>                        <span class="hljs-keyword">if</span> (avatar.files) msg.channel.send(<span class="hljs-string">`<span class="hljs-subst">$&#123;msg.author&#125;</span>`</span>, avatar).catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123; <span class="hljs-built_in">console</span>.log(err) &#125;);<br>                        <span class="hljs-keyword">break</span>;<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;1&#x27;</span>: <span class="hljs-comment">//音樂指令</span><br>                msg.channel.send(<span class="hljs-string">&#x27;music&#x27;</span>);<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;OnMessageError&#x27;</span>, err);<br>    &#125;<br>&#125;);<br><br><span class="hljs-comment">//獲取頭像</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetMyAvatar</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">return</span> &#123;<br>            <span class="hljs-attr">files</span>: [&#123;<br>                <span class="hljs-attr">attachment</span>: msg.author.displayAvatarURL(<span class="hljs-string">&#x27;png&#x27;</span>, <span class="hljs-literal">true</span>),<br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;avatar.jpg&#x27;</span><br>            &#125;]<br>        &#125;;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;GetMyAvatar,Error&#x27;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day7 - 你的Bot需要一個前綴字</title>
    <link href="/2020/09/07/12thDay7/"/>
    <url>/2020/09/07/12thDay7/</url>
    
    <content type="html"><![CDATA[<p>今天接續昨天的主題，進一步修改message方法</p><p>正常我們在Discord上看到別人玩bot的指令都是有一個前綴字，後面附帶著指令的<br>例如: !help $dice</p><p>之類的，今天我們要來完成這個需求，並且把前置防呆做好</p><p><img src="https://i.imgur.com/biTOOUy.png" alt="7-1"></p><p>(終於要開始來爆改啦)</p><h2 id="前置判斷"><a href="#前置判斷" class="headerlink" title="前置判斷"></a>前置判斷</h2><p>除了判斷訊息是否是機器人以外，我希望機器人只回應來自群組的消息</p><p><img src="https://i.imgur.com/aDj39xo.png" alt="7-2"></p><p>因為message物件屬於discord包好給我們的，擔心有哪一層物件的錯誤導致整個機器人崩潰，我希望在前置判斷增加嚴謹性與try catch</p><p><img src="https://i.imgur.com/Ic1KoYn.png" alt="7-3"></p><p>如果這一段出錯的話，可以在catch中log錯誤訊息喔!</p><h2 id="字串分析"><a href="#字串分析" class="headerlink" title="字串分析"></a>字串分析</h2><p>我們希望可以在定義出前置符號後，只接取來自前置符號正確的內容，再判斷後面的內容</p><p><img src="https://i.imgur.com/PJZ8fnf.png" alt="7-4"></p><h2 id="功能實作"><a href="#功能實作" class="headerlink" title="功能實作"></a>功能實作</h2><p>最後我們把之前的行為修改一下後放回去實作區</p><p><img src="https://i.imgur.com/kEshR77.png" alt="7-5"></p><p>從原本的if改成switch，這樣我們如果要新增新的判斷式就會快速許多<br>原本判斷的msg.content改成了cmd[0]</p><p><img src="https://i.imgur.com/KWR5SHY.png" alt="7-6"></p><p>運行一下，結果就跟我們要的一樣了!</p><p>最後再稍微加一些範例</p><p><img src="https://i.imgur.com/Omv4wA5.png" alt="7-7"><br><img src="https://i.imgur.com/Q3wnJHS.png" alt="7-8"></p><hr><p>今天的完整程式碼如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Discord = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;discord.js&#x27;</span>);<br><span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> Discord.Client();<br><span class="hljs-keyword">const</span> auth = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./auth.json&#x27;</span>);<br><br>client.login(auth.key);<br><br>client.on(<span class="hljs-string">&#x27;ready&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Logged in as <span class="hljs-subst">$&#123;client.user.tag&#125;</span>!`</span>);<br>&#125;);<br><br>client.on(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function"><span class="hljs-params">msg</span> =&gt;</span> &#123;<br>    <span class="hljs-comment">//前置判斷</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (!msg.guild || !msg.member) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//訊息內不存在guild元素 = 非群組消息(私聊)</span><br>        <span class="hljs-keyword">if</span> (!msg.member.user) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//幫bot值多拉一層，判斷上層物件是否存在</span><br>        <span class="hljs-keyword">if</span> (msg.member.user.bot) <span class="hljs-keyword">return</span>; <span class="hljs-comment">//訊息內bot值為正 = 此消息為bot發送</span><br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//字串分析</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">const</span> prefix = <span class="hljs-string">&#x27;!&#x27;</span> <span class="hljs-comment">//前綴符號定義</span><br>        <span class="hljs-keyword">if</span> (msg.content.substring(<span class="hljs-number">0</span>, prefix.length) === prefix) <span class="hljs-comment">//如果訊息的開頭~前綴字長度的訊息 = 前綴字</span><br>        &#123;<br>            <span class="hljs-keyword">const</span> cmd = msg.content.substring(prefix.length).split(<span class="hljs-string">&#x27; &#x27;</span>); <span class="hljs-comment">//以空白分割前綴以後的字串</span><br><br>            <span class="hljs-comment">//功能實作</span><br>            <span class="hljs-keyword">switch</span> (cmd[<span class="hljs-number">0</span>]) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;ping&#x27;</span>:<br>                    msg.channel.send(<span class="hljs-string">&#x27;pong&#x27;</span>);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;老婆&#x27;</span>:<br>                    msg.reply(<span class="hljs-string">&#x27;你沒有老婆!!&#x27;</span>);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;myAvatar&#x27;</span>:<br>                    <span class="hljs-keyword">const</span> avatar = GetMyAvatar(msg);<br>                    <span class="hljs-keyword">if</span> (avatar.files) msg.channel.send(<span class="hljs-string">`<span class="hljs-subst">$&#123;msg.author&#125;</span>`</span>, avatar);<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;OnMessageError&#x27;</span>, err);<br>    &#125;<br>&#125;);<br><br><span class="hljs-comment">//獲取頭像</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetMyAvatar</span>(<span class="hljs-params">msg</span>) </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">return</span> &#123;<br>            <span class="hljs-attr">files</span>: [&#123;<br>                <span class="hljs-attr">attachment</span>: msg.author.displayAvatarURL,<br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;avatar.jpg&#x27;</span><br>            &#125;]<br>        &#125;;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;GetMyAvatar,Error&#x27;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>完工~!</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day6 - 防呆觀念</title>
    <link href="/2020/09/06/12thDay6/"/>
    <url>/2020/09/06/12thDay6/</url>
    
    <content type="html"><![CDATA[<p>昨天我們大致說明了關於bot.js的運作<br>今天對library文檔做一些補充，以及程序防呆概念</p><p>昨天我們介紹bot.js時，有提到client在監聽message事件時，會回傳一message物件</p><p><img src="https://i.imgur.com/72h5m9a.png" alt="6-1"></p><p>我們將message物件取名為msg，並且從msg中撈出content來檢查訊息內容，用reply來回傳訊息到訊息原本的頻道。</p><p>這些功能都可以從library文檔中找到，我們開啟昨天的discord.js文檔，然後在左側的功能列表中找到Message</p><p><img src="https://i.imgur.com/UUCJ4Zw.png" alt="6-2"></p><p>這就是client監聽事件後帶回給我們的物件了，左側是變數，右側是方法<br>可以看到content在左側，在右側可以找到reply</p><p>所以如果要對msg有進一步的調用，我們都必須來看文檔，了解這個library提供了哪些功能給開發者。</p><p>在前面，我多次強調client監聽，獲得message事件這件事情<br>discord.js的功能使用是基於物件，也就是想做到甚麼事情、要先了解這件事情該調用哪個物件合適</p><p><img src="https://i.imgur.com/g7wSDiK.png" alt="6-3"></p><p>這是我們昨天使用的回傳訊息的方式，也是discord.js包好給我們的方式</p><p><img src="https://i.imgur.com/qsapj00.png" alt="6-4"></p><p>這是透過message物件獲得他所屬的channel(頻道)物件，再指定我要從這個channel底下send(發送)我要發送的訊息。</p><p>除非原本要做的行為很簡單，以及需要tag訊息來源user，這種情況才會使用reply<br>不然正常我們是使用msg.channel.send，這種寫法就不會再在訊息前方自動tag使用者了，且傳入的內容也不局限於文字；<br>之後如果要新增甚麼功能，也都是依這個邏輯下去文檔尋找。</p><hr><p>讓我們回來到今天的主題，我們要稍微的修改一下我們的程式</p><p><img src="https://i.imgur.com/gSQ2dXd.png" alt="6-5"></p><p>為了讓bot之後更好修改內容，我們將msg.reply統一改成msg.channel.send</p><p><img src="https://i.imgur.com/rTgjNW0.png" alt="6-6"></p><p>眼尖的同學應該注意到了，筆者除了修改reply以外，還把pong改成ping了<br>這是為了後續的測試，同學們可以運行起來，看看效果</p><p><img src="https://i.imgur.com/myPjROx.png" alt="6-7"></p><p>機器人的訊息傳送停不下來了!<br>這是因為機器人傳送訊息的同時，也代表著client會再接到一個message事件，這是機器人自己的訊息，同時他也觸發了機器人的下一個訊息回應，這就導致了無限迴圈</p><p>同學們可以先在終端機上面用ctrl+c來強制中止程序<br><img src="https://i.imgur.com/vr8LN0C.png" alt="6-8"></p><p>那麼，我們該怎麼迴避這個問題呢?</p><ul><li>讓程序的回應不要跟判斷的句子一樣</li><li>判斷訊息來源</li></ul><p>第一種作法就是說改成像之前一樣ping回pong<br>因為判斷與觸發的句子不一樣，就不會有問題了<br>但如果之後程序變得龐大，或是我們的觸發與回應句可以供其他人添加的話，第一種作法就會比較沒辦法達成我們的需求</p><p>第二種作法就是在client監聽到message事件時，先判斷訊息來源是否符合條件，套在現在的問題的話就是我們要判斷是不是bot<br>這樣做，除了我們的程序不會再因為自己的話無限自閉以外，對於有多機器人的群組，也就不會去理會其他機器人的訊息了，大家各自服務。</p><p><img src="https://i.imgur.com/tKiHz04.png" alt="6-9"></p><p>只要msg.member.user.bot這個參數是true，就代表訊息來自於機器人，不會再處理下面的事情，是不是很簡單呢?</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day5 - 函式庫文檔與基本範例講解</title>
    <link href="/2020/09/05/12thDay5/"/>
    <url>/2020/09/05/12thDay5/</url>
    
    <content type="html"><![CDATA[<p>昨天我們成功叫醒了自己的兒子/女兒</p><p>在繼續教育小孩(增加功能)前，今天想說說昨天安裝的discord.js這個工具</p><p>該怎麼使用，以及應用後的例子</p><p>discord.js是node.js中的一個library，也就是其他人寫好的程式集<br>我們可以安裝他人發佈的程式並且引用，進而降低開發的難度與作業性</p><p><a href="https://discord.js.org/#/">https://discord.js.org/#/</a></p><p>這是discord.js的文檔庫，裡面有此庫作者撰寫的使用說明，涵蓋了從以前到現在的發行版本，以及各種小細節</p><p>進來後，我們點擊最下面的Get Started</p><p><img src="https://i.imgur.com/lzlZZCz.png" alt="5-1"></p><p>左側是discord.js的可用資源與方法，預設會在welcome頁面，這裡會介紹discord.js的功能與基本知識，我們先往下拉到 Example usage</p><p><img src="https://i.imgur.com/yAsK0m7.png" alt="5-2"></p><p>這是discord.js的基本範例，拿來跟昨天的bot.js比對一下，是不是完全一樣呢?<br>只是範例中的 client.login(‘token’); 被我拉上去了；</p><p>這是因為在筆者的腦中，給機器人輸入key值是最優先的事情，再來依次進入ready(登入完成)-&gt;message(訊息接收)…不然各區塊的上下順序在這邊其實是沒有差別的。</p><p><img src="https://i.imgur.com/JJAMzjd.png" alt="5-3"></p><p>下面說回來目前bot.js每一行的功效</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">const Discord</span> = require(<span class="hljs-string">&#x27;discord.js&#x27;</span>);<br></code></pre></td></tr></table></figure><p>這行的意思是引用discord.js這個工具，然後賦予到Discord這個常數(const)上<br>之後如果要引用discord.js的程式碼，都可以直接調用Discord來實現!</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> Discord.<span class="hljs-built_in"><span class="hljs-built_in">Client</span></span>();<br></code></pre></td></tr></table></figure><p>新宣告一個 Discord(discord.js)下的Client方法，然後將Client方法的結果賦予到client這個常數上<br>之後如果要引用discord.js底下的Client，可以直接呼叫client。</p><p>這邊我們額外從Discord中拉出Client()是因為這個client是要用來當bot本體的，也就是我們的遙控器(x</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">const auth</span> = require(<span class="hljs-string">&#x27;./auth.json&#x27;</span>);<br></code></pre></td></tr></table></figure><p>引用同目錄(./)下的auth.json，賦予給auth這個常數<br>之後想調用auth.json底下的資源，可以直接呼叫auth。</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">client.log<span class="hljs-meta">in(</span>auth.<span class="hljs-meta">key</span>);<br></code></pre></td></tr></table></figure><p>執行client的登入行為，登入的key我們放入bot的key</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">client.<span class="hljs-literal">on</span>(<span class="hljs-string">&#x27;ready&#x27;</span>, <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(`<span class="javascript">Logged <span class="hljs-keyword">in</span> <span class="hljs-keyword">as</span> $&#123;client.user.tag&#125;!</span>`);<br>&#125;);<br></code></pre></td></tr></table></figure><p>執行client的監聽(on)行為，要監聽的事件是ready(準備完成)<br>只要client收到ready事件，就執行右邊的箭頭函式( () =&gt; {} )<br>箭頭函式的內容為</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">console.log(`<span class="hljs-keyword">Logged</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">as</span> $&#123;client.<span class="hljs-keyword">user</span>.tag&#125;!`);<br></code></pre></td></tr></table></figure><p>在控制台打印(console.log) 出字串 Logged in as ${client.user.tag}!<br>Logged in as就是單純的字串<br>其中client.user.tag，我們可以從小數點來了解到，user是client底下的一個可用變數，tag則是user底下的一個可用變數<br>最後輸出的結果就是機器人的名字與id<br>如果要仔細了解client的內容物，可以將console.log裡面的東西改成client看看</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dart">client.<span class="hljs-keyword">on</span>(<span class="hljs-string">&#x27;message&#x27;</span>, msg =&gt; &#123;<br>    <span class="hljs-keyword">if</span> (msg.content === <span class="hljs-string">&#x27;ping&#x27;</span>) &#123;<br>        msg.reply(<span class="hljs-string">&#x27;pong&#x27;</span>);<br>    &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>監聽client的message(收到訊息)事件，觸發後執行箭頭函式 msg =&gt;{}</p><p>這邊的msg是每當client收到message時，discord.js會給予我們的變數，我們將變數稱作msg<br>因為discord.js會回傳的變數是固定的，如果我們這邊像上面一樣寫成() =&gt; {}的話，雖然也可以執行但就不會將discord.js回傳的值再做處理。<br>反過來說，如果我們宣告了msg1跟msg2兩個變數來接回傳值，因為discord.js的message事件並沒有給我們這麼多參數，所以msg2是接收不到東西的</p><p>那麼要怎麼知道message事件下到底回傳了哪些參數呢?<br>這就要用到剛剛說的discord.js使用說明書了</p><p><a href="https://discord.js.org/#/docs/main/stable/class/Client?scrollTo=e-message">https://discord.js.org/#/docs/main/stable/class/Client?scrollTo=e-message</a></p><p><img src="https://i.imgur.com/mtq2Iqi.png" alt="5-4"></p><p>我們監聽message事件的說明在左側元素列表的client分類中的Events中可以找到，可以看到他回傳了 Message Type的變數，而這就是我們接收的內容。</p><p>繼續說箭頭函數內要做的事情</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">if</span> (msg.content === <span class="hljs-string">&#x27;ping&#x27;</span>) &#123;<br>        <span class="hljs-selector-tag">msg</span><span class="hljs-selector-class">.reply</span>(<span class="hljs-string">&#x27;pong&#x27;</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>當msg變數底下的content元素，等於ping字串時，執行方法</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">msg</span><span class="hljs-selector-class">.reply</span>(<span class="hljs-string">&#x27;pong&#x27;</span>);<br></code></pre></td></tr></table></figure><p>使用msg底下的replay方法，並傳入pong字串。</p><p>以上的文言文翻譯過來就是<br>機器人(client)接收到訊息(message)的時候，去判斷訊息的內容(content)是不是ping<br>如果是，回傳pong(msg.reply)</p><p><img src="https://i.imgur.com/ZZr9Cqx.png" alt="5-5"></p><p>先說到這，今天根據程式一行行做解釋，雖然很基本但對第一次觸碰這部分的人來說應該還是有點艱澀</p><p>請自行斟酌閱讀即可，明天我們說說如何讓機器人變得更聰明。</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day4 - 機器人的家</title>
    <link href="/2020/09/04/12thDay4/"/>
    <url>/2020/09/04/12thDay4/</url>
    
    <content type="html"><![CDATA[<p>昨天我們成功創建了自己的機器人並且加入群組</p><p><img src="https://i.imgur.com/4nFmZyM.png" alt="4-1"></p><p>可是機器人加入後怎麼都在睡覺，我怎麼找不到地方操作呢?</p><p>那是因為我們昨天做的事情是在Discord申請一個機器人帳戶而已~<br>就像我們的Discord帳戶需要透過Discord登入，Bot其實也需要登入喔</p><p>不過Bot的登入路口是要”自己寫”的，今天我們就來叫機器人起床吧!</p><hr><h1 id="環境安裝"><a href="#環境安裝" class="headerlink" title="環境安裝"></a>環境安裝</h1><p>首先請確保你已經安裝</p><p>Node.js<br><a href="https://ithelp.ithome.com.tw/articles/10199058">安裝教學</a></p><p>Node.js是我們機器人會使用到的後端語言<br>Node.js屬於弱型別語言，相較於其他語言，Node.js編譯前的限制較少，寫起來通常會感到較為自由<br>不過如果對於自己寫的東西不夠了解，弱型別語言並不一定能幫你抓出問題，導致你的問題直到實際運行時才會發生；<br>所以使用Node.js時、知道自己寫的東西具備甚麼效果是重要的</p><p>VSCode<br><a href="https://code.visualstudio.com/">下載路徑</a><br><a href="https://wcc723.github.io/development/2019/12/01/vscode-chinese/">中文化教學</a></p><p>VSCode是筆者愛用的編輯器<br>VSCode本身體積很小，同時又支援許多的擴充套件，上面的中文化教學正是其中之一<br>因此VSCode可以輕鬆的做到客製化，且不改變他的體積簡約。</p><p>如果同學們原本就有在使用的編輯器，VSCode可以跳過不安裝</p><hr><h1 id="蓋一個機器人的家"><a href="#蓋一個機器人的家" class="headerlink" title="蓋一個機器人的家"></a>蓋一個機器人的家</h1><p>首先我們要先替機器人做一個”家”，我們先在自己喜歡的地方建一個資料夾，名字先取作DiscordBot就可以了</p><p><img src="https://i.imgur.com/62P5P4i.png" alt="4-2"></p><p>一個機器人的家裡面，我們基本需要…<br>機器人的工具箱(node_modules)<br>機器人與工具箱的說明書(package.json)<br>一隻機器人本體(bot.js)<br>門牌號碼(auth.json)<br><img src="https://i.imgur.com/vohV8ms.png" alt="4-3"></p><p>像這樣子<br>(看到package-lock.json是你業障重，別刪掉也別管他)</p><p>其中，node_modules跟package.json是透過node.js自動生成的，要生成這兩個東西，我們需要先在DiscordBot這個資料夾打開vscode</p><p><img src="https://i.imgur.com/WP2M2GQ.png" alt="4-4"><br><img src="https://i.imgur.com/FFxXcMQ.png" alt="4-5"></p><p>成功的話，左邊的路徑就會顯示資料夾名稱喔!<br>然後選擇上方的開啟終端機-&gt;新增終端<br>確認終端上面顯示的路徑是正確的後，在終端上面鍵入npm init</p><p><img src="https://i.imgur.com/mZhlOAv.png" alt="4-6"></p><p>這是node的初始化行為<br>會要你輸入一些關於這個project的基本資料，之後輸出在package.json  </p><p><img src="https://i.imgur.com/d095eIo.png" alt="4-7"></p><p>就像這樣!</p><p>然後我們再手動創建bot.js檔與auth.json檔</p><p><img src="https://i.imgur.com/gE4hfc7.png" alt="4-8"></p><p><img src="https://i.imgur.com/ObeweYi.png" alt="4-9"></p><p>如果說bot.js是機器人的本體，那auth.json就是機器人的內部授權碼<br>auth.json裡面的key代表的是機器人的啟動鑰匙，把鑰匙插進對應的地方才能啟動(有找到bot.js裡面有一行auth.key嗎?)</p><p>這邊我們把昨天在bot頁存下來的key放到your key value裡面，注意不要刪掉””</p><p>兩個檔案都創建好後記得存檔，我們回到終端機輸入<br>npm install discord.js</p><p><img src="https://i.imgur.com/hbEYTK9.png" alt="4-10"></p><p><img src="https://i.imgur.com/nIETLkm.png" alt="4-11"></p><p>輸入 npm install discord.js後，node.js就會幫我們安裝discord.js這個工具<br>然後把檔案放在node_modules裡面，再到package.json底下紀錄我們使用了哪些工具</p><p>沒問題的話，最後我們在終端機輸入node bot</p><p><img src="https://i.imgur.com/yEANgJU.png" alt="4-12"></p><p><img src="https://i.imgur.com/1Q4C2Q4.png" alt="4-13"></p><p>成功!明天我們會再針對今天的程式碼做講解</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day3 - 你自己的...他叫甚麼名字?</title>
    <link href="/2020/09/03/12thDay3/"/>
    <url>/2020/09/03/12thDay3/</url>
    
    <content type="html"><![CDATA[<p>今天來說說怎麼創建Bot</p><p>建立DiscordBot，首先要有一個Discord帳號</p><p>到<a href="https://discordapp.com/developers/applications/">這個網站</a></p><p>登入帳號後，右上角會有一個[ New Application ]</p><p><img src="https://i.imgur.com/QeKQ4fK.png" alt="NewApplication"></p><p>這邊的名字是”應用名稱”<br>同時也會是預設的機器人名稱，仔細想好後就送出吧~</p><p><img src="https://i.imgur.com/kXSwy3I.png" alt="basicUI"></p><p>送出後就會進來應用介面了</p><p>點擊頭像可替換應用的大頭貼，名字就是你剛剛取的</p><p>都設定好之後，我們點選左邊列表第三排的Bot</p><p><img src="https://i.imgur.com/r1NSe8O.png" alt="BotUI"></p><p>第一次點應該會問你是否要建立，點選是<br>這樣Discord就會幫你的機器人實際創建一個帳戶<br>點擊右邊TOKEN底下的Copy，他會給你一組很長的亂碼</p><h2 id="先存在記事本，我們明天會用到"><a href="#先存在記事本，我們明天會用到" class="headerlink" title="先存在記事本，我們明天會用到"></a><strong>先存在記事本，我們明天會用到</strong></h2><hr><p>接下來我們點左邊的OAuth2</p><p><img src="https://i.imgur.com/o5eSFy6.png" alt="Oauth2UI"></p><p>這是創建邀請連結的地方，SCOPES欄的部份點Bot，這樣下面就會出現第二欄<br>下面是要給予機器人在群組內的權限，需要根據Bot實際上具備哪些功能，來判斷需要給予哪些權限<br>如果不知道怎麼用，先選Administrator就可以了。</p><p>都做完後，中間的就會有完整的邀請連結，請複製後輸入在瀏覽器上</p><p><img src="https://i.imgur.com/9oCUzUZ.png" alt="url"></p><p>使用此連結，就可以把Bot拉入你的群組內，前提是你在此群組有管理者權限喔</p><p><img src="https://i.imgur.com/nJ3jUuW.png" alt="su"></p><p>喔耶，成功了!</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day2 - DiscordBot - 小愛麗絲</title>
    <link href="/2020/09/02/12thDay2/"/>
    <url>/2020/09/02/12thDay2/</url>
    
    <content type="html"><![CDATA[<p>在今天的文章開始前，想先跟大家介紹我家的女兒</p><p><img src="https://i.imgur.com/jnSGjxu.png" alt="小愛麗絲"><br><a href="https://supr.link/COL1X">我是連結</a></p><p>小愛麗絲，生日是2020年6月1日</p><p>明明感覺已經做了很久，其實是六月時才開始做到現在</p><p>興趣是吐槽別人，喜歡唱歌，希望大家能多多認識她</p><p>這篇鐵人賽的文章內容基本會依照小愛麗絲現有的功能做講解，需要範例時可以參考看看~</p><hr><p>那麼，今天主要是要來講講本次鐵人賽的大鋼</p><p>關於一個機器人，為什麼想要做機器人，該做哪些功能，以及後台零負擔是甚麼意思等</p><p>哼哼，很好奇吧</p><p>這麼重要的問題就要從最開始講起，各位客官且聽我娓娓道來</p><p>程式的產生是建立在需求上的，就像人需要吃早餐所以這世界上有了早餐店</p><p>我希望可以製作一隻Bot供我認識的人們娛樂，所以小愛麗絲誕生了</p><p>最初，小愛只會針對2~3個句子回應固定的答案</p><p><img src="https://i.imgur.com/cew9uKd.png" alt="解放"> </p><p>想供大家娛樂-&gt;小愛學會說話</p><hr><p>大家希望可以教小愛說話，不再是我自己新增，小愛開始學會不同的詞</p><p> <img src="https://i.imgur.com/r7sSFlZ.png" alt="teach"></p><p>出現了希望新增詞彙的聲音-&gt;所以小愛開始背單字</p><hr><p>跟朋友的認識是圍繞著某款遊戲，為了讓查詢遊戲資料方便，希望小愛能幫忙查表</p><p> <img src="https://i.imgur.com/MZNmVDc.png" alt="查表"></p><p>想在聊天時可以直接找資料-&gt;增加爬蟲功能</p><hr><p>因為後來指令增加，為了方便閱讀所以增加說明書</p><p><img src="https://i.imgur.com/FxYPkWv.png" alt="help"></p><p>其他還有音樂，圖片，權限控制等等…</p><hr><p>舉了些例子，想說的是、機器人的功能是多樣化的，想做甚麼取決於需求；<br>本文會圍繞著Node.js該如何製作一隻機器人為主軸，分享目前的程式寫法&amp;講解<br>以及如何做到24HR的主機&amp;資料庫託管等</p><p>礙於篇幅限制，之後文章沒辦法把機器人的功能一個一個寫成教學，有特別希望學甚麼的話再問看看吧~</p><p>最後，希望各位有空可以多跟小愛聊天，我們明天見~</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Day1 - 甚麼是DiscordBot?</title>
    <link href="/2020/09/01/12thDay1/"/>
    <url>/2020/09/01/12thDay1/</url>
    
    <content type="html"><![CDATA[<h2 id="DiscordBot-是…"><a href="#DiscordBot-是…" class="headerlink" title="DiscordBot 是…"></a>DiscordBot 是…</h2><p>DiscordBot顧名思義就是在Discord上運作的Bot<br>Discord是平台，Bot是機器人、也就是我們的程式</p><hr><h2 id="DiscordBot-可以做到…"><a href="#DiscordBot-可以做到…" class="headerlink" title="DiscordBot 可以做到…"></a>DiscordBot 可以做到…</h2><p>DiscordBot與一般Bot的不同正是他依附於Discord<br>即是說，他的主要目的在於跟Discord的互動<br>我在Discord上的行為被Bot接收-&gt;Bot再回饋結果給我</p><p>聊天，天氣預測，播放音樂，查詢訊息…<br>廣泛來說，只要你是你會寫的東西，都可以塞進去實現(廢話)</p><hr><h2 id="如果我做一隻DiscordBot…"><a href="#如果我做一隻DiscordBot…" class="headerlink" title="如果我做一隻DiscordBot…"></a>如果我做一隻DiscordBot…</h2><p>Discord屬於時下流行的通訊軟體之一，不管是從事商業或是娛樂，Discord絕對是值得你嘗試接觸的</p><p>得益於Discord提供豐富的功能，讓DiscordBot可以以簡單的程式碼做到複雜的事情，不管是為了完成需求亦或是學生想練手，都會是不錯的銜接題目</p><hr><h2 id="製作一隻DiscordBot會很困難嗎…"><a href="#製作一隻DiscordBot會很困難嗎…" class="headerlink" title="製作一隻DiscordBot會很困難嗎…"></a>製作一隻DiscordBot會很困難嗎…</h2><p>完全不會!製作一隻Bot是容易的，有教學更是事半功倍</p><p>接下來30天內、本文會一步步教學各位該如何製作一隻DiscordBot。</p>]]></content>
    
    
    <categories>
      
      <category>鐵人賽</category>
      
      <category>用Node.js製作後台零負擔的DiscordBot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>node.js</tag>
      
      <tag>bot</tag>
      
      <tag>discord</tag>
      
      <tag>discord.js</tag>
      
      <tag>教學</tag>
      
      <tag>12th鐵人賽</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
